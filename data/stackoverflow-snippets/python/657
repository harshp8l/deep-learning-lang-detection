In[141]: test = {x:x for x in range(120000)}
In[142]: tst_str = json.dumps(test)
In[143]: %timeit json.loads(tst_str, object_pairs_hook=lambda x: x)[:10]
10 loops, best of 3: 55.7 ms per loop
In[144]: %timeit tester=json.loads(tst_str, object_pairs_hook=lambda x: iter(x));[next(tester) for _ in range(10)]
10 loops, best of 3: 54.4 ms per loop
In[145]: %timeit json.loads(tst_str)
10 loops, best of 3: 57.5 ms per loop
In[146]: json.loads(tst_str, object_pairs_hook=lambda x: x)[:10]
Out[146]: 
[('0', 0),
 ('1', 1),
 ('2', 2),
 ('3', 3),
 ('4', 4),
 ('5', 5),
 ('6', 6),
 ('7', 7),
 ('8', 8),
 ('9', 9)]
In[147]: tester=json.loads(tst_str, object_pairs_hook=lambda x: iter(x))
In[148]: tester
Out[148]: <list_iterator at 0x86caef0>
In[149]: [next(tester) for _ in range(10)]
Out[149]: 
[('0', 0),
 ('1', 1),
 ('2', 2),
 ('3', 3),
 ('4', 4),
 ('5', 5),
 ('6', 6),
 ('7', 7),
 ('8', 8),
 ('9', 9)]
