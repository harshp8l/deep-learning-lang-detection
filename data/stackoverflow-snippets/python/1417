import os
from pathlib import Path
import shlex
import subprocess
import sys
from threading import Thread
import time

class LaunchDeletionProcess(Thread):

    def __init__(self):

        Thread.__init__(self)

    def run(self):

        launch_command = r""""""/usr/bin/osascript -e 'do shell script ""/usr/local/bin/python3.6 -u /path/to/priviliged_script.py"" with prompt ""Sart Deletion Process "" with administrator privileges'""""""
        split_command = shlex.split(launch_command)

        print(""Thread 1 started"")
        testprogram = subprocess.Popen(split_command)
        testprogram.wait()
        print(""Thread1 Finished"")

class ReadStatus(Thread):

    def __init__(self):

        Thread.__init__(self)

    def run(self):

        while not os.path.exists(os.path.expanduser(""~/p1"")):
            time.sleep(0.1)

        print(""Thread 2 started"")

        self.wfPath = os.path.expanduser(""~/p1"")

        rp = open(self.wfPath, 'r')
        response = rp.read()

        self.try_pipe(response)

    def try_pipe(self, response):
        rp = open(self.wfPath, 'r')
        response = rp.read()
        print(""Receiving response: "", response)
        rp.close()
        if response == str(self.nr_of_steps-1):
            print(""Got to end"")
            os.remove(os.path.expanduser(""~/p1""))
        else:
            time.sleep(1)
            self.try_pipe(response)

if __name__ == ""__main__"":

    thread1 = LaunchDeletionProcess()
    thread2 = ReadStatus()
    thread1.start()
    thread2.start()
