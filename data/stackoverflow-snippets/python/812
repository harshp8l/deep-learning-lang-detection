import logging
from logging.config import dictConfig

logconfig = {
    ""version"": 1,
    ""disable_existing_loggers"": 0,
    ""root"": {
        ""level"": ""DEBUG"",
        ""handlers"": [
            ""console"",
            ""file"",
            ""debugfile""
        ]
    },
    ""loggers"": {

    },
    ""formatters"": {
        ""precise"": {
            ""format"": ""%(asctime)s %(name)-15s %(levelname)-8s %(message)s""
        },
        ""brief"": {
        # Don't think we'll use. 
            ""format"": ""%(levelname)-8s: %(name)-15s: %(message)s""
        }
    },
    ""handlers"": {
        ""debugfile"": {
            ""class"": ""logging.FileHandler"",
            ""formatter"": ""precise"",
            ""level"": ""DEBUG"",
            ""mode"": ""a"",
            ""filename"": ""debugAndUp.log""
        },
        ""console"": {
            ""class"": ""logging.StreamHandler"",
            ""formatter"": ""precise"",
            ""level"": ""DEBUG"",
            ""stream"": ""ext://sys.stdout""
        },
        ""file"": {
            ""class"": ""logging.handlers.RotatingFileHandler"",
            ""formatter"": ""precise"",
            ""level"": ""WARNING"",
            ""backupCount"": 3,
            ""maxBytes"": 10240000,
            ""filename"": ""warningAndUp.log""
        }
    }
}

logs = dictConfig(logconfig)

logger = logging.getLogger()
logger.debug('Test')
for handles in logger.handlers:
    print(handles.name)
    handles.close()
