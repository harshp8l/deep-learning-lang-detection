import numpy as np

lon0 = -130
lon1 = -115
lat0 = 30
lat1 = 45
z0 = 0
z1 = 250
val0 = 0
val1 = 1.5
n = 20

np.random.seed(100)

# 3D location of each data point
position_3d = np.array([[np.random.uniform(lon0,lon1) for p in range(0,n)],
                        [np.random.uniform(lat0,lat1) for p in range(0,n)],
                        [np.random.uniform(z0,z1) for p in range(0,n)]])

# Value at each 3D location
vals = np.array([np.random.uniform(val0,val1) for p in range(0,n)])

# Regular 3D grid to which I want to interpolate
grid_3d = [np.arange(lon0, lon1, 1.),
           np.arange(lat0, lat1, 1.),
           np.arange(z0, z1, 50.)]

h, _ = np.histogramdd(position_3d.T, [np.append(ax, np.inf) for ax in grid_3d],
                      weights=vals)

# Print non-zero values
coords = np.nonzero(h)
for i, j, k in zip(*coords):
    print(f'({grid_3d[0][i]}, {grid_3d[1][j]}, {grid_3d[2][k]}): {h[i][j][k]}')
