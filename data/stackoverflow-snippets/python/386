# Tidy 1: just import from psychopy
import random
from psychopy import visual, event, core

# Tidy 2: create a window once. Don't close it.
win = visual.Window(
    size=[500, 500],
    units=""pix"",
    fullscr=False
)

instruction_text = visual.TextStim(win, text = u'How many dots did you see?', pos=(0, 100))
answer_text = visual.TextStim(win)

# Solution: a function to collect written responses
def get_typed_answer():
    answer_text.text = ''
    while True:
        key = event.waitKeys()[0]
        # Add a new number
        if key in '1234567890':
            answer_text.text += key

        # Delete last character, if there are any chars at all
        elif key == 'backspace' and len(answer_text.text) > 0:
            answer_text.text = answer_text.text[:-1]

        # Stop collecting response and return it
        elif key == 'return':
            return(answer_text.text)

        # Show current answer state
        instruction_text.draw()
        answer_text.draw()
        win.flip()

while True:
    # Prepare dot specifications
    n_dots = random.randint(5, 200)
    dot_xys = []

    for dot in range(n_dots):
        dot_x = random.uniform(-250, 250)
        dot_y = random.uniform(-250, 250)
        dot_xys.append([dot_x, dot_y])

    # This is extremely ugly! You should generally never create a new stimulus,
    # but rather update an existing one. However, ElementArrayStim currently
    # does not support changing the number of elements on the go.
    dot_stim = visual.ElementArrayStim(
        win=win,
        units=""pix"",
        elementTex=None,
        elementMask=""circle"",
        sizes=10,
        contrs=random.random(),
        nElements = n_dots,
        xys = dot_xys,
    )

    # Show it
    dot_stim.draw()
    win.flip()
    core.wait(4)

    # Collect response
    print(get_typed_answer())
