from collections.abc import MutableMapping

# We need to implement those method: __getitem__, __setitem__, __delitem__, __iter__, __len__

class TwoWayDict(MutableMapping):

    __slots__ = '__dict__'

    def __init__(self, *args, **kwargs):
        self.__dict__.update(*args, **kwargs)
    def __getitem__(self, key):
        return self.__dict__[key]
    def __setitem__(self, key, value):
        self.__dict__[key] = value
        self.__dict__[value] = key
    def __delitem__(self, key):
        self.__dict__.__delitem__(self[self[key]])            
        self.__dict__.__delitem__(self[key])  # this do not work if key == value
    def __iter__(self):
        return iter(self.__dict__)
    def __len__(self):
        return len(self.__dict__)
    def get(self, key, default=None):
        return self[key] if key in self else default
    def __str__(self):
        return str(self.__dict__)
