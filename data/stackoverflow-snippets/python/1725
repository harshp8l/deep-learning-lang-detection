>>> def f_np(listx, number_of_couples):
...     L = len(listx)
...     idx = np.array((np.random.randint(0, L, (number_of_couples,)), np.random.randint(0, L-1, (number_of_couples,))))
...     idx[1, idx[0] == idx[1]] = L-1
...     return np.array(listx)[idx.T]
... 
>>> def f_it(listx, number_of_couples):
...     permutations = list(itertools.permutations(listx, 2))
...     return numpy.array([random.choice(permutations) for _ in range(number_of_couples)])
... 
>>> from time import perf_counter
>>> t = perf_counter(); f_it(listx, number_of_couples); s = perf_counter()
array([['s', 'm'],
       ['G', 'w'],
       ['w', 'S'],
       ...,
       ['V', 'R'],
       ['P', 'Q'],
       ['Q', 'J']], dtype='<U1')
>>> s-t
10.544860829017125
>>> t = perf_counter(); f_np(listx, number_of_couples); s = perf_counter()
array([['C', 'T'],
       ['X', 'y'],
       ['U', 's'],
       ...,
       ['U', 'M'],
       ['t', 'i'],
       ['m', 'c']], dtype='<U1')
>>> s-t
0.3759624689701013
