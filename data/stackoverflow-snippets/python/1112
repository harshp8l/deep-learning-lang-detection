 def interpolate(self):

    x, y = self.poly.xy[:].T

    y[0]=1181
    y[4]=1181
    x[2]=993
    x[6]=993
    #print(x,y)
    P=np.array([(x[0],y[0]),
                (x[1], y[1]),
                (x[2], y[2]),
                (x[3], y[3]),
                (x[4],y[4]),
                (x[5],y[5]),
                (x[6],y[6]),
                (x[7],y[7]),
                (x[0], y[0]),
                ])
    #print(P)

    tck, u = splprep(P.T, u=None, s=0.0, per=1)
    u_new = np.linspace(u.min(), u.max(), 1000)
    xi, yi = splev(u_new, tck, der=0)
    #print(xi,yi)
    #plt.plot(pts[:, 0], pts[:, 1], 'ro')
    #plt.plot(x_new, y_new, 'b--')
    #plt.show()

    L=0
    for j in range(0,len(xi)-1):
        L=L+np.sqrt((xi[j+1]-xi[j])**2 + (yi[j+1]-yi[j])**2)
    #print(L," pixels")
    scaled = L * 1.439464535124507
    print(scaled, " mm")
    cm = scaled / 10
    print(cm, " cm")
    inches = scaled * 0.0394
    print(inches, "inch")
    print("\n")

    return x,y,xi,yi
