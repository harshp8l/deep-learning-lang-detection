        print("\non_touch_down:")

        if self.collide_point(*touch.pos):
            if 'button' in touch.profile:
                if touch.button in ("right", "left"):
                    print("\t", touch.button, "mouse clicked")
                    print("\ttouch.pos =", touch.pos)
                    dist = 1 if touch.button == 'left' else -1
                    self.zoom(dist)
                    return True
                elif touch.is_mouse_scrolling:
                    print("\tmouse wheel", touch.button)
                    print("\ttouch.pos =", touch.pos)
                    dist = 1 if touch.button == 'scrollup' else -1
                    self.zoom(dist)
                    return True
        return super(RootWidget, self).on_touch_down(touch)

    def on_touch_up(self, touch):
        print("\non_touch_up:")
        if touch.grab_current == self:
            print("\ttouch.button is", touch.button)
            print("\ttouch.pos is", touch.pos)
            touch.ungrab(self)
            self._touch_count -= 1
            if self._touch_count == 0:
                # TODO
                print("\tanimate to the closest zoom")
            return True
        return super(RootWidget, self).on_touch_up(touch)

    def zoom(self, dist):
        self.graph.xmax += dist * 10
        self.graph.xmin += dist


class GraphDemo(App):

    def build(self):
        return RootWidget()


if __name__ == "__main__":
    GraphDemo().run()
