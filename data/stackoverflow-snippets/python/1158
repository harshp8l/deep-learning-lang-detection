from re import sub, IGNORECASE
subs = {    #The new words are the keys. Respective values are the old words to replace
    ""one"": [ ""zero"", ""none"", ""nil"", ""null"" ],
    ""two"": [ ""one"", ""won"", ""juan"" ],
    ""three"": [ ""two"", ""too"", ""to"", ""tu"" ],
    ""four"": [ ""three"" ],
    ""five"": [ ""four"", ""for"", ""fore"" ],
    ""six"": [ ""five"" ],
    ""seven"": [ ""six"" ],
    ""eight"": [ ""seven"" ],
    ""nine"": [ ""eight"", ""ate"" ],
    ""ten"": [ ""nine"" ],
    ""eleven"": [ ""ten"" ],
    ""twelve"": [ ""eleven"" ],
    ""thirteen"": [ ""twelve"", ""dozen"" ],
    ""once"": [ ""never"" ],
    ""one and a half"": [ ""half"" ],
    ""twice"": [ ""once"" ],
    ""thrice"": [ ""twice"" ],
    ""double"": [ ""single"" ],
    ""triple"": [ ""double"" ],
    ""second"": [ ""first"" ],
    ""third"": [ ""second"" ],
    ""fourth"": [ ""third"" ],
    ""fifth"": [ ""fourth"", ""forth"" ]
}

#Flatten list of substitutes into regular expression with named capture groups
all_replacements = '|'.join('(?P<{}>{})'.format(new.replace(' ', '_'), '|'.join(olds)) for new, olds in subs.items())

def inc(match):     #increment 1 from the match
    return str(int(match.group()) + 1)

def inflate(match): #Get the next named capture group that exists and send new
    return next(new for new, old in match.groupdict().items() if old)

def replace(string):
    string = sub(r'\d+', inc, string)  #Increment all numbers
    string = sub(all_replacements, inflate, string, flags=IGNORECASE) #Inflate all words
    return string

print(replace(""I wonder""))
print(replace(""""))
print(replace(""It was the best of times.""))
print(replace(""A Tale of 2 Cities""))
print(replace(""A WoNder if 18 is bigger than 1919191""))
