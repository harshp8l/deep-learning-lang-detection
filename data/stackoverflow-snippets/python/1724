# make an example
>>> import string
>>> listx = list(string.ascii_letters)
>>> 
>>> 
>>> L = len(listx)
>>> number_of_couples = 10_000_000
>>> 
>>> idx = np.array((np.random.randint(0, L, (number_of_couples,)), np.random.randint(0, L-1, (number_of_couples,))))
>>> idx[1, idx[0] == idx[1]] = L-1
>>> 
>>> result = np.array(listx)[idx.T]
>>> 
>>> result
array([['p', 't'],
       ['O', 'F'],
       ['M', 'S'],
       ...,
       ['Q', 'k'],
       ['N', 'm'],
       ['f', 'x']], dtype='<U1')
>>> 
# sanity checks
# distribution looks flat
>>> np.bincount(idx.ravel())
array([384357, 385561, 384175, 384998, 385799, 384446, 384356, 384684,
       384305, 384072, 384993, 384346, 385302, 384518, 384659, 384142,
       383554, 384790, 384424, 384032, 383950, 385103, 384092, 384653,
       383428, 385388, 384074, 384197, 384644, 384741, 384343, 384282,
       384192, 385791, 384106, 383872, 384506, 385161, 384401, 384661,
       383978, 385547, 385571, 385941, 385416, 385325, 383997, 385201,
       383998, 384199, 385105, 384624])
# pairs are distinct
>>> np.any(idx[0] == idx[1])
False
