    rows = []
    lines = file_data.split(""\n"")
    #loop over the lines and save them in db. If error , store as string and then display
    for line in lines:
        fields = line.split("","")
        data_dict = {}
        data_dict[""GSTIN/UIN""] = fields[0]
        data_dict[""start_date_time""] = fields[1]
        data_dict[""end_date_time""] = fields[2]
        data_dict[""notes""] = fields[3]
        try:
            form = EventsForm(data_dict)
            if form.is_valid():
                form.save()
            else:
                logging.getLogger(""error_logger"").error(form.errors.as_json())
        except Exception as e:
            logging.getLogger(""error_logger"").error(repr(e))
            pass
        rows.append(line)

except Exception as e:
    logging.getLogger(""error_logger"").error(""Unable to upload file. ""+repr(e))
    messages.error(request,""Unable to upload file. ""+repr(e))

variables = {}
variables['lines'] = rows

#return HttpResponseRedirect(reverse(""myapp:index"",data_dict))
return render(request,""myapp/upload_csv.html"", variables)
