def initiate_connection(self):
    """
    Builds the connection between the client and server
    Runs through a loop which means it can try to connect again and again
    after failure
    """
    print("Initiating Connection...")

    # Opens a socket and connects to the client
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((self.ip, self.port))
    server_socket.listen(1)
    client_socket, address = server_socket.accept()

    # Entering a loop in order to be able to keep getting requests
    while True:
        print("Destination Address: " + str(address))
        request = self.get_request(client_socket)
        print(str(request))
        # Checks weither whether the request contains a string (url)
        if request:
            request = ROOT_PATH + os.path.sep + \
            request.replace("/", os.path.sep)
            response = self.send_response(request)

            print("trying to send response to client")
            try:
                client_socket.send(response)
            except:
                print("An error has occurred while sending the response to\ the client")
        # In case the request is invalid or empty
        else:
            if request == 0:
                try:
                    client_socket.send(self.internal_server_error.encode())
                except:
                    print("An error has occurred while sending the response\to the client")
                    break
            else:
                break

        # Closing connection
        client_socket.close()
        print("Closing connection...")
        try:
            client_socket, address = server_socket.accept()
        except:
            print("An error has occurred when trying to initiate connection")
            break
