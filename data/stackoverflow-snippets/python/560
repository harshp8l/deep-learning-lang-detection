nested_dico = {
     'columns': {
                'background_color': 'A5300F',
                'font': {'bold': True, 'color': 'FFFFFF', 'size': 15}},
     'index': {
                'background_color': 'E1CDCC'},
     'master': {
                'align': 'center',
                'background_color': 'FFFFFF',
                'font': {'color': '000000', 'name': 'arial', 'size': 16},
                'vertical_anchor': 'middle'}}



def seletive_map(origin,matcher,mapper,current_keys=[]):
    result = {}
    for k,v in origin.items():
        if matcher(current_keys + [k]):
            result[k] = mapper(v)
        elif hasattr(v,'items'):
            result[k] = seletive_map(v,matcher,mapper,current_keys + [k])
        else:
            result[k] = v
    return result

result = seletive_map(nested_dico,lambda keys: keys[-1] == ""size"",lambda x : x*2)
#result = seletive_map(nested_dico,lambda keys: ""color"" in keys[-1],RGB)


print result
