from bokeh.io import output_file, show, output_notebook, reset_output
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource, Plot, Range1d, Text, TapTool, CustomJS
from bokeh.layouts import column

reset_output()

source = ColumnDataSource(data=dict(x = [1, 10, 16], y = [2, 20, 10],
                                    name_labels = ['first', 'second', 'third'],
                                    name_display = ['','','']
                                    ))

plot = figure(plot_width=400, plot_height=400, tools="tap", title="Select a circle")
renderer = plot.circle(x= 'x', y= 'y', size=50,
                       # set visual properties for selected glyphs
                       selection_color="firebrick",    
                       # set visual properties for non-selected glyphs
                       nonselection_fill_alpha=0.2, nonselection_fill_color="blue",
                       nonselection_line_color="firebrick", nonselection_line_alpha=1.0,
                       source = source)

def construct_text_box(source): 
    # Plot and axes                                                             
    xdr = Range1d(0, 220)                                                       
    ydr = Range1d(0, 120)                                                       

    plot = Plot(                                                                
        x_range=xdr, y_range=ydr,                                                        
        plot_height=120, min_border=0,                                                           
    )                                                                           
    # Add the writing                                                           
    country = Text(x=5, y=50, text='name_display', text_color="#000000")
    plot.add_glyph(source, country)    
    return plot

output_notebook()

JS_CODE ="""
    // Get index of current selected datapoint
    sel_point_index = cb_data.source.attributes.selected["1d"]["indices"][0];     

    /* replace all name_display values with the name_label
       value of currently selected point */
    for (i=0; i < cb_data.source.data.name_labels.length; i++) {
        cb_data.source.data.name_display[i] = cb_data.source.data.name_labels[sel_point_index];
        }       
    cb_data.source.change.emit();
    """

newtaptool = plot.select(type=TapTool)
newtaptool.callback = CustomJS(code=JS_CODE)

text_box = construct_text_box(source)
show(column(plot, text_box))
