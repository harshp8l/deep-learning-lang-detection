import matplotlib.pyplot as plt

def make_patch_spines_invisible(ax, offset):
    '''
    This function inspired by this example, to offset a twin axis spine. 
    link: https://matplotlib.org/gallery/ticks_and_spines/multiple_yaxis_with_spines.html
    '''
    ax.spines[""right""].set_position((""axes"", offset))
    ax.set_frame_on(True)
    ax.patch.set_visible(False)
    for sp in ax.spines.values():
        sp.set_visible(False)
    ax.spines[""right""].set_visible(True)

# First create your figure, with 3 subplots sharing the x axis.
fig, (ax1, ax2, ax3) = plt.subplots(nrows=3, sharex=True)

# make some room on the right for the twin axes
fig.subplots_adjust(right=0.8)

# The easy ones, create the first twin axes on ax1 and ax2
ax1t = ax1.twinx()
ax2t = ax2.twinx()

# Create the twin axis on ax2 with an offset spine
ax2tb = ax2.twinx()
make_patch_spines_invisible(ax2tb, offset=1.15)

# Here I just set some axes limits to show the y axis scales are all independent
ax3.set_xlim(0, 900)

ax1.set_ylim(0, 2000)
ax2.set_ylim(0, 1000)
ax3.set_ylim(0, 50)

ax1t.set_ylim(0, 12)
ax2t.set_ylim(0, 12)
ax2tb.set_ylim(0, 100)

plt.show()
