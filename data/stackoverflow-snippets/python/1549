from threading import Thread
from time import sleep

try:
    import Tkinter as tk
    import tkMessageBox as mb
    import ttk
except ImportError:
    import tkinter as tk
    from tkinter import messagebox as mb
    import tkinter.ttk as ttk

class SmallGui:
    def __init__(self, master):
        self.master = master
        self.master.title('test gui')

        self.button_1 = ttk.Button(self.master,
                                   text='Start 1',
                                   command=lambda: self.init_thread(1))

        self.button_2 = ttk.Button(self.master,
                                   text='Start 2',
                                   command=lambda: self.init_thread(2))

        self.button_1.pack()
        self.button_2.pack()

    def init_thread(self, work):
        if work == 1:
            t = Thread(target=self.work_1)
            t.start()
        else:
            t = Thread(target=self.work_2)
            t.start()

    @staticmethod
    def work_1():
        print ('Work 1 started')
        # Do some Task and return a list
        sleep(1)
        mb.showinfo(""test"", ""Work 1 complete"")

    @staticmethod
    def work_2():
        print ('Work 2 Started')
        # Do some Task and return a list
        sleep(1)
        mb.showinfo(""test"", ""Work 2 complete"")


if __name__ == '__main__':
    root = tk.Tk()
    run_gui = SmallGui(root)
    root.mainloop()
