#!/usr/bin/env python3

import time
import pigpio

from tkinter import *


GPIO=21
GPIO2=16
GPIO3=20

pi = pigpio.pi()
if not pi.connected:
   exit()
pi.set_mode(GPIO,pigpio.OUTPUT)
pi.set_mode(GPIO2,pigpio.OUTPUT)
gv=int()

class ControlPanel(Toplevel):

    def __init__(self, *args, **kwargs):
        super().__init__(args, kwargs)
        self.geometry('800x600')
        self.title('Stepper Control')
        self.label = Label(self, text='Inches of Travel')
        self.label.place(x=350, y=100)
        self.scale = Scale(self, from_=0.0, to=15.0 ,orient=HORIZONTAL,length=600, resolution=0.1, tickinterval=1)
        self.scale.place(x=100, y=125)
        self.dlabel = Label(self, text='Speed')
        self.dlabel.place(x=370, y=200)
        self.dscale = Scale(self, from_=1, to=10 ,orient = HORIZONTAL,length = 600, tickinterval=1)
        self.dscale.place(x=100, y=225)
        self.button = Button(self, text='Apply Values', command=self.runMotor, padx = 20, pady = 20)
        self.button.place(x=350, y=350)
        self.button3 = Button(self, text='Back To Main Window', command=self.destroy, padx=20, pady=20)
        self.button3.place(x=500, y=350)
        self.update()


    def tx_pulses(self, pi, GPIO, hertz, num, pulse_len=1):
       motSpeed = int((1/(self.dscale.get()))*2000)
       print(motSpeed)
       pulse_len = motSpeed
       assert num < 65536

       num_low = num % 256
       num_high = num // 256

       wf = []

       wf.append(pigpio.pulse(1<<GPIO, 0, pulse_len))
       wf.append(pigpio.pulse(0, 1<<GPIO, pulse_len))
       pi.wave_add_generic(wf)

       wid = pi.wave_create()

       if wid >= 0:
          pi.wave_chain([255, 0, wid, 255, 1, num_low, num_high])
          while pi.wave_tx_busy():
             time.sleep(0.1)
          pi.wave_delete(wid)

    def runMotor(self):
         motRevs = int(((self.scale.get())*400)*5.08)
         print(motRevs)
         pi.write(GPIO2,0)
         pi.write(GPIO3,1)
         self.tx_pulses(pi, GPIO, 1000, motRevs) # 250 pulses @ 1000 Hz
         pi.write(GPIO3,0)
         self.tx_pulses(pi, GPIO, 1000, motRevs) # 2391 pulses @ 5000 Hz
         pi.write(GPIO2,1)


mainWin = Tk()
mainWin.geometry('800x600')
mainWin.title('Main Window')
button2 = Button(mainWin, text='Go To Setup', command=ControlPanel, padx=20, pady=20)
button2.place(x=350, y=350)

mainWin.mainloop()
pi.stop()
