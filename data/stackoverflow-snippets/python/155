import numpy as np
import vtk
from vtk.qt.QVTKRenderWindowInteractor import QVTKRenderWindowInteractor
from PyQt5 import Qt
import sys

class ViewerWithScrollBar(Qt.QMainWindow):
    def __init__(self, parent=None):
    super(ViewerWithScrollBar, self).__init__(parent)
    # Define the renderer and Qt window ------------------------
    self.frame = Qt.QFrame()

    self.hl = Qt.QHBoxLayout()
    self.vtkWidget = QVTKRenderWindowInteractor(self.frame)
    self.hl.addWidget(self.vtkWidget)

    self.ren = vtk.vtkRenderer()
    self.vtkWidget.GetRenderWindow().AddRenderer(self.ren)
    self.iren = self.vtkWidget.GetRenderWindow().GetInteractor()
    self.iren.SetInteractorStyle(vtk.vtkInteractorStyleTrackballCamera())
    self.ren.ResetCamera()

    self.frame.setLayout(self.hl)
    self.setCentralWidget(self.frame)

    # Point coordinate data ---------------------------------
    self.coordData = {}
    self.coordData[0] = np.array([[0,0,0], [1,0,0], [1,1,0]])
    self.coordData[1] = self.coordData[0] + np.array([[0.2, 0.0, -0.05], [0,2,0], [0,0,3.5]])
    self.coordData[2] = self.coordData[1] + np.array([[0.2, 10.0, -0.05], [0,5.0,0], [0,0,0]])

    # Define the slider bar and add it to the window ---------------
    slider = Qt.QSlider()
    slider.setAccessibleName('Time index')
    slider.setRange(0, len(self.coordData)-1)
    slider.valueChanged.connect(self.sliderCallback)

    self.hl.addWidget(slider)

    # Create the polydata object -----------------------------
    points = vtk.vtkPoints()
    points.SetNumberOfPoints(len(self.coordData[0]))
    self.polydata = vtk.vtkPolyData()

    for i in range(len(self.coordData[0])):
        points.SetPoint(i, self.coordData[0][i])
    self.polydata.SetPoints(points)

    self.ptsFilter = vtk.vtkVertexGlyphFilter()
    self.ptsFilter.SetInputData(self.polydata)
    ptsMapper = vtk.vtkPolyDataMapper()
    ptsMapper.SetInputConnection(self.ptsFilter.GetOutputPort())
    self.ptsActor = vtk.vtkActor()
    self.ptsActor.SetMapper(ptsMapper)
    self.ptsActor.GetProperty().SetPointSize(10)

    self.ren.AddActor(self.ptsActor)

    self.show()
    self.iren.Initialize()
    self.iren.Start()

def sliderCallback(self):
    index = self.sender().value() # The index that the slider bar is currently on
    points = self.polydata.GetPoints()
    for i in range(len(self.coordData[index])):
        points.SetPoint(i, self.coordData[index][i])
    points.Modified() # Here you need to call Modified for points
    self.show()
    self.iren.Render()

    return

if __name__ == ""__main__"":
    app = Qt.QApplication(sys.argv)
    window = ViewerWithScrollBar()
    sys.exit(app.exec_())
