from random import randint
from threading import Thread
from tkinter import Tk, DoubleVar, HORIZONTAL
from tkinter.ttk import Frame, Button, Progressbar
from time import sleep

class Worker(Thread):
    def __init__(self, reference):
        super().__init__()
        self.reference = reference

    def run(self):
        print(""running..."")
        # replace this dummy loop with actual processing tasks
        while self.reference.get_progress() < 100:
            duration = randint(1, 3)
            sleep(duration)
            self.reference.add_progress(10 * duration)
        print(""finished."")

class Example(Frame):
    def __init__(self, root):
        super().__init__(master=root)
        self.progress = DoubleVar(value=0.0)
        self.worker = Worker(reference=self)
        self.startbutton = Button(master=self, text=""Start"", command=self.start)
        self.startbutton.pack()
        self.progressbar = Progressbar(master=self, orient=HORIZONTAL, length=100, mode='determinate', variable=self.progress)
        self.progressbar.pack()
        self.infobutton = Button(master=self, text=""Info"", command=self.info)
        self.infobutton.pack()
        self.pack()

    def get_progress(self):
        return self.progress.get()

    def set_progress(self, value):
        self.progress.set(value)

    def add_progress(self, value):
        self.progress.set(self.progress.get() + value)

    def start(self):
        # print(""sleeping..."")
        # sleep(10)  # uncomment this to block the GUI
        print(""starting..."")
        self.worker.start()

    def info(self):
        print(self.worker.is_alive())

def main():
    root = Tk()
    app = Example(root)
    app.mainloop()

if __name__ == '__main__':
    main()
