# read in the file. We only need to do this once
with open('data.txt') as f:
    all_lines = [line for line in f]

define x outside of the loop. Numpy has a range generating function. Use that
x = np.arange(1,1025)

# loop through each event
for start in range(1000):
    # get data points
    # each event has values at 1028*start:1028*(start+1), but we don't need the first 4 values
    # defining y2 as an array automatically handles the float conversion
    # also makes the math easier
    y2 = np.array(all_lines[1028*start+4:1028*(start+1)],dtype=float)
    y22 = y2 / 4096 - .5

    # plot stuff. I just copies your code here
    # only change was putting it in the loop
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.set_xlabel('Time (ns)')
    ax.set_ylabel('counts')
    ax.plot(x,y22, 'k-', color='b', label='data')
    fig = plt.gcf()
    plt.show()
    plt.draw()
