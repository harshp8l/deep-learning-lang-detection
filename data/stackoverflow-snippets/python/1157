'''
OP has four lists. He wants EmployeeID_List to serve to serve
as the keys in the dict, and he wants the rest of the lists to
serve as the values in the dict key-value pairs. If the indices
in the other lists don't match up, he wants 'Null', or 'NaN'.
'''
#Create the empty dictionary 
Employee_ManagerDic = {}

#Create the EmployeeID_List
EmployeeID_List = [111, 222, 333, 444, 555]

#Create the EmployyeFirstName_List
EmployeeFirstName_List = ['a', 'b', 'c', 'd', 'e']

#Create the managerID_List
managerID_List = [888, 777, 666]

#Create the managerFirstName_List
managerFirstName_List = ['f', 'g', 'h']

#Create a variable to increment the indicies 
num = -1

#Create another variable to increment the indices 
other_num = -1

#Run a for loop loop for EmployeeID_List
#Make the 'item' the dict key
#Make the value the EmployeeFirstName that corresponds
for item in EmployeeID_List:
      num += 1
      Employee_ManagerDic[item] = list(EmployeeFirstName_List[num])


#Check to see if the indicies match in the lists 
how_many_indicies = len(EmployeeID_List) - len(managerID_List)
how_many_indicies2 = len(EmployeeID_List) - len(managerFirstName_List)

#Print the difference in the indicies 
print(how_many_indicies)
print(how_many_indicies2)

#If the indicies don't match, fill the empty space with 'Null'
managerID_List.append('Null')
managerID_List.append('Null')
managerFirstName_List.append('Null')
managerFirstName_List.append('Null')

#Append the values in the other lists to the dictionary lists 
for value in Employee_ManagerDic.values():
       other_num += 1
       value.append(managerID_List[other_num])
       value.append(managerFirstName_List[other_num])

print(Employee_ManagerDic)
