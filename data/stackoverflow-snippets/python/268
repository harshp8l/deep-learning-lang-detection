def is_part_of_sequence(a, d, x):
    return (x%d) == a

def get_length(a, d, l):
    # going to be using this a few times in this function
    ips = is_part_of_sequence

    # get the length of the list
    n = len(l)

    # get the first value in the sequence
    min_seq_ind, min_seq_value = next(
        (i, v) for i, v in enumerate(l) 
        if v == a
    )

    # get the last value in the sequence
    max_seq_ind, max_seq_value = next(
        (n-i-1, v) for i, v in enumerate(reversed(l)) 
        if ips(a, d, v)
    )

    min_length = ((max_seq_value - a)//d) + 1  # this is the minimum length

    # check to see if min_length is the correct answer- if so, short circuit
    if min_length == (max_seq_ind - min_seq_ind + 1):
        return min_length

    count = 2
    count += sum(1 if ips(a, d, l[i]) else 0 for i in range(min_seq_ind+1, max_seq_ind))

    return count
