from datetime import date
rows = [
    {""id"":""123"",""date"":""1/1/18"",""foo"":""bar""},
    {""id"":""123"",""date"":""2/2/18"", ""foo"":""baz""},
    {""id"":""456"",""date"":""3/3/18"",""foo"":""bar""},
    {""id"":""456"",""date"":""1/1/18"",""foo"":""bar""}
]

class unique(dict):
    def __setitem__(self, key, value):
        #Add key if missing or replace key if date is newer
        if key not in self or self[key][""date""] < value[""date""]:
            dict.__setitem__(self, key, value)

data = unique()                   #Initialize new class based on dict
for row in rows:
    d, m, y = map(int, row[""date""].split('/')) #Split date into parts
    row[""date""] = date(y, m, d)   #Replace date value
    data[row[""id""]] = row         #Set new data. Will overwrite same ids with more recent

print data.values()
