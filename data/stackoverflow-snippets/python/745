In []:
n = 10

# Define the operations and their condition for application:
ops = [(lambda x: True, lambda x: x-1),
       (lambda x: x%2==0, lambda x: x//2),
       (lambda x: x%3==0, lambda x: x//3)]

# Construct the operations count for all values up to `n`
min_ops = [0]*(n+1)
for i in range(2, n+1):
    min_ops[i] = min(min_ops[op(i)] for cond, op in ops if cond(i))+1

# Reconstruct the path
r = []
while n:
    r.append(n)
    n = min((op(n) for cond, op in ops if cond(n)), key=min_ops.__getitem__)

len(r)-1, r[::-1]

Out[]
(3, [1, 3, 9, 10])
