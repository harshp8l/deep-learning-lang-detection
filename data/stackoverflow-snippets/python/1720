from datetime import datetime
import calendar

start_date = input("Enter a startdate: ")

start_date = datetime.strptime(start_date, "%Y-%m-%d").date()
day_of_the_week = start_date.weekday()
first_day = start_date.replace(day=1)
cal = calendar.Calendar()
weeks = cal.monthdayscalendar(start_date.year, start_date.month)
# This if statement could be a single line: 
# adjust_range = 1 if first_day.isoweekday() in (6,7) else 0
if(first_day.isoweekday() in (6,7)):
    adjust_range = 1
else: 
    adjust_range = 0

for x, week in enumerate(weeks):
    if start_date.day in week:
        week_numb = x - adjust_range
        # This will happen only once, so you can break out of the loop
        break

print("Date: ", start_date)

first_date = start_date.replace(day=1)
for _ in range(4):
    temp_week = week_numb
    if(first_date.month + 1 > 12): 
        new_months = 1
        new_years = first_date.year + 1
    else: 
        new_months = first_date.month + 1
        new_years = first_date.year

    weeks = cal.monthdayscalendar(new_years, new_months)
    first_date = first_date.replace(day=1, month=new_months, year=new_years)
    if(first_date.isoweekday() in (6,7)):
        temp_week += 1

    planned_day = weeks[temp_week][day_of_the_week]

    # The if wasn't needed; let format do the work for you.
    print("{}-{:02d}-{:02d}".format(new_years, new_months, planned_day))

    # You could set something like 
    # interested_date = datetime(added_years, added_months, planned_day), 
    # but you don't seem to use it.
