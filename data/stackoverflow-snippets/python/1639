import cmath
import math

cityCoords = {
    1:(11.0036111,42.1025),
    2:(11.1086111,42.3738889)
    }

def spherical_cosines(coordDict):
    R = 6371;  # kilometers
    cities = list(coordDict.keys())
    n = len(cities)
    for i in range(1,n+1):
        for j in range(i + 1, n + 1):
            cityA = cities[i-1]
            lat1, lon1 = coordDict[cityA]
            cityB = cities[j-1]
            lat2, lon2 = coordDict[cityB]
            lat1_radians = math.radians(lat1)
            lat2_radians = math.radians(lat2)
            lon1_radians = math.radians(lon1)
            lon2_radians = math.radians(lon2)
            print('A={},{} B={},{}'.format(lat1_radians, lon1_radians, lat2_radians, lon2_radians))
            delta_lon_radians = math.radians(lon2-lon1)
            distance = cmath.acos(cmath.sin(lat1_radians) * cmath.sin(lat2_radians) + cmath.cos(lat1_radians) *
                        math.cos(lat2_radians) * cmath.cos(delta_lon_radians)) * R;
            print('spherical_cosines distance={}'.format(distance))


spherical_cosines(cityCoords)
