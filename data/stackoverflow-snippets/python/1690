tf.reset_default_graph()

x_len = 3  # length of X, in your case 100

xs = tf.placeholder(shape = [None, x_len], dtype = tf.float32)   # feed arbitrary number of X's
ys = tf.placeholder(shape = [None], dtype = tf.float32)  # feed Y's corresponding to the X's
outs = tf.reduce_sum(xs, axis = 1) + ys   # do something with X's and Y's

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    x = np.array([[1, 2, 3], [4, 5, 6]])  # 2 X's of x_len == 3 each
    y = [10, 20]   # 2 Y's corresponding to each X
    outs = sess.run(outs, feed_dict = { xs: x, ys: y })   # run the graph to get the output
    print(outs)
