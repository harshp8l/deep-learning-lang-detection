mapper = {
    'data_labels': {
        'position': {
            'outside_end': 'XL_LABEL_POSITION.OUTSIDE_END',
            'inside_end': 'XL_LABEL_POSITION.INSIDE_END'
        }
    },
    'category_axis': {
        'major_tick_mark': {
            'None': 'XL_TICK_MARK.NONE',
        },
        'tick_label_position': {
            'None': 'XL_TICK_LABEL_POSITION.NONE',
            'high': 'XL_TICK_LABEL_POSITION.HIGH',
            'low': 'XL_TICK_LABEL_POSITION.LOW',
        },
    },
    'chart': {
        'type': {
            'clustered_column': 'XL_CHART_TYPE.COLUMN_CLUSTERED',
            'clustered_bar': 'XL_CHART_TYPE.BAR_CLUSTERED',
            'stacked_bar': 'XL_CHART_TYPE.BAR_STACKED',
        },
    },
}

display = {
    'category_axis': {
        'format': {'line': {'fill': 'A5300F'}},
        'has_major_gridlines': False,
        'major_tick_mark': 'None',
        'tick_label_position': 'None',
        'visible': True},
    'chart': {
        'type': 'clustered_column'},
    'data_labels': {
        'font': {'size': 9},
        'number_format': '#0.0%',
        'position': 'outside_end'},
    'value_axis': {
        'has_major_gridlines': False,
        'visible': False}
}

def reformat(display): #display is the input_dico
    for key1, dic in display.items():
        if key1 not in mapper: continue
        for key2 in dic:
            if key2 not in mapper[key1]: continue
            display[key1][key2] = mapper[key1][key2][dic[key2]]
    return display

print(reformat(display))
