def AND_serach(df,list_of_keywords):
    # init a numpy array to store the index
    index_arr = np.array([]) 
    for keyword in list_of_keywords:
        # drop the nan if entire row is nan and get remaining rows' indexs
        index = df[df==keyword].dropna(how='all').index.values
        # if index_arr is empty then assign to it; otherwise update to intersect of two arrays
        index_arr = index if index_arr.size == 0 else np.intersect1d(index_arr,index)
    # get back the df by filter the index
    return df.loc[index_arr.astype(int)]
