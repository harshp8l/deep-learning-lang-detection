def returnToNormalPowerPlant(id: Int) = Action.async(parse.tolerantJson) { request =>
    request.body.validate[ReturnToNormalCommand].fold(
      errors => {
        Future.successful{
          BadRequest(
            Json.obj(""status"" -> ""error"", ""message"" -> JsError.toJson(errors))
          )
        }
      },
      returnToNormalCommand => {
        actorFor(id) flatMap {
          case None =>
            Future.successful {
              NotFound(s""HTTP 404 :: PowerPlant with ID $id not found"")
            }
          case Some(actorRef) =>
            sendCommand(actorRef, id, returnToNormalCommand)
        }
      }
    )
  }
