object Test extends App {

  case class Vector3D(x:Double, y:Double, z:Double)

  trait bFrame
  trait nFrame
  type bVector3D = Vector3D with bFrame
  type nVector3D = Vector3D with nFrame

  val p_b:bVector3D = new Vector3D(1.0, 2.0, 3.0) with bFrame  //Works
  //val p_b:bVector3D = Vector3D(1.0, 2.0, 3.0) with bFrame    //Doesn't work

  p_b match {
    case _:nVector3D => println("Vector in the n-Frame")
    case _:bVector3D => println("Vector in the b-Frame")      //Compiler says this is unreachable
    case _:Vector3D  => println("Vector in an undetermined frame")
    case _           => println("Something other than a vector")
  }
}
