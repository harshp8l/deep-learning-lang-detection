List<String> allColumns = Arrays.asList(dataFrame.columns());

df
.map(row ->
    //this rewrites the row (that's a warning)
    RowFactory.create(
        allColumns.stream()
        .map(dfColumn -> {
                 if(!colList.contains(dfColumn)) {
                     //column not requested for mapping, use old value
                     return row.get(allColumns.indexOf(dfColumn));
                 } else {
                     Object colValue = 
                             row.get(allColumns.indexOf(dfColumn))
                     // in case of [2], you'd have to call:
                     //row.get(colListToDFIndex.get(dfColumn))

                     //Modified value
                     return allMaps.get(dfColumn)   
                      //Assuming strings, you may need to cast
                     .getOrDefault(colValue, colValue);
                 }
             })
         .collect(Collectors.toList())
         .toArray()
        )
    )
)
