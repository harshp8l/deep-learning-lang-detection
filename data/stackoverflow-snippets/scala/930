class UserMapping(tag: Tag) extends Table[User](tag, "USERS") {

  implicit val stringListMapper = MappedColumnType.base[Seq[String], String](
    list => list.mkString(","),
    string => string.split(',').toSeq
  )

  def id: Rep[Long] = column[Long]("ID", O.PrimaryKey, O.AutoInc)

  def name: Rep[Option[String]] = column[Option[String]]("NAME")

  def cities: Rep[Option[Seq[String]]] = column[Option[Seq[String]]]("CITIES")   // share stringListMapper

  def countries: Rep[Seq[String]] = column[Seq[String]]("COUNTRIES")        // share stringListMapper

  // scalastyle:off method.name public.methods.have.type
  def * = (id, name, cities, countries) <> (User.tupled, User.unapply)
  // scalastyle:on method.name public.methods.have.type

}
