def findRoot(seq: Seq[String]): String = {                               

    def prefix(a: String, b: String) = a                         
        .zip(b)                        
        .takeWhile { case (a, b) => a == b }
        .map(_._1) 
        .mkString                                                

    @tailrec                                                     
    def find(ss: Seq[String], root: String): String = ss match { 
        case h :: Nil => prefix(h, root)                         
        case h :: t => find(t, prefix(h, root))                  
    }                                                            

    find(seq.tail, seq.head)                                     

}                                                                
