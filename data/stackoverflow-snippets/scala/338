import org.apache.spark.sql.functions._

val originalDf: DataFrame = ...

// split function: returns a new dataframe with column ""code{i}""
// containing the character at index ""i"" from ""code"" column 
private def splitCodeColumn(df: DataFrame, i: Int): DataFrame = {
  df.withColumn(""code"" + i, substring(originalDf(""code""), i, 1))
}

// number of columns to split code in
val nbSplitColumns = ""0000"".length

val codeColumnSplitDf = 
  (1 to nbSplitColumns).foldLeft(originalDf){ case(df, i) => splitCodeColumn(df, i)}.drop(""code"")

// register it in order to use with Spark SQL
val splitTempViewName = ""code_split""
codeColumnSplitDf.registerTempTable(splitTempViewName)
