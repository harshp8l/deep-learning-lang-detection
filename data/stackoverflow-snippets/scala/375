scala> def shiftFromIndexBy (input: List[Int], toShiftFrom: List[Int], shiftBy: Int = 0) : List [Int] = (input, toShiftFrom) match {
     |     case (Nil, _) => Nil
     |     case (x :: xs, Nil) => input.map (_ + shiftBy)
     |     case (x :: xs, y:: ys) => if (y == 0) x + shiftBy :: shiftFromIndexBy (xs, ys.map (_ - 1), x) else
     |         x + shiftBy :: shiftFromIndexBy (xs, toShiftFrom.map(_ - 1), shiftBy)
     | }
shiftFromIndexBy: (input: List[Int], toShiftFrom: List[Int], shiftBy: Int)List[Int]

scala> shiftFromIndexBy (input, label)
res19: List[Int] = List(2, 1, 5, 9, 10, 6, 13, 9)

scala> shiftFromIndexBy (input, List (2, 5))
res20: List[Int] = List(2, 1, 5, 9, 10, 6, 9, 5)
