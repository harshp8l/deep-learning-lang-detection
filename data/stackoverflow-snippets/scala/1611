(post & entity(as[Multipart.FormData])) { request =>
  extractRequestContext {
    ctx => {
      implicit val materializer = ctx.materializer
      implicit val ec = ctx.executionContext
      fileUpload("fileUpload") {
        case (fileInfo, fileStream) =>

          val localPath = "c:\\test"
          val sink = FileIO.toPath(Paths.get(localPath) resolve fileInfo.fileName)
          val writeResult = fileStream.runWith(sink)
          onSuccess(writeResult) { result =>
            result.status match {
              case Success(_) => complete(s"Successfully written ${result.count} bytes")
              case Failure(e) => throw e
            }
          }
      }
    }
  }
}
