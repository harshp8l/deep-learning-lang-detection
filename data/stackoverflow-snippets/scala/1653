sealed trait Err
case class IntegerMustBePositive(msg: String) extends Err
case class FormatInvalid(msg: String, format: String) extends Err

val malformedParamNames = Seq[String](""$top"", ""aa"", ""$skip"", ""ccc"", ""ddd"", ""modifiedDate"")

val result = malformedParamNames.flatMap {
  case ""$top"" => Some(IntegerMustBePositive(""$top""))
  case ""$skip"" => Some(IntegerMustBePositive(""$skip""))
  case ""modifiedDate"" => Some(FormatInvalid(""modifiedDate"", ""yyyy-MM-dd""))
  case _ => None
}


result
