def getJsonNullKeys(json: Json): List[String] = {
  json.asObject match {
    case Some(jsonObject) => jsonObject.filter(j => j._2.isNull).keys.toList
      case None => List[String]()
    }
}

if (update.isRight) {
  update.right.map(_(existingPerson)) match {
    case Right(updatedPerson) =>
      getNullKeys(incompletePersonJson).foreach { key =>
        val field = existingPerson.getClass.getDeclaredField(key)
        field.setAccessible(true)
        field.set(updatedUpdate, None)
      }
      println(updatedUpdate)
      // outputs Person(mr updated,42,None)
    case Left(error) => println(error.toString)
  }
}
