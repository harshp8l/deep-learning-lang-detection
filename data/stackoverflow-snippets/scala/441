scala> :paste
// Entering paste mode (ctrl-D to finish)

def f1(i:Int): Either[String,Int] = if (i > 0) Right(1) else Left("error 1")
    def f2(i:Int): Either[String,Int] = if (i > 0) Right(2) else Left("error 2")
    def f3(i:Int): Either[String,Int] = if (i > 0) Right(3) else Left("error 3")

    val seq = Seq(f1(1),f2(1),f3(-1))


// Exiting paste mode, now interpreting.

f1: (i: Int)Either[String,Int]
f2: (i: Int)Either[String,Int]
f3: (i: Int)Either[String,Int]
seq: Seq[Either[String,Int]] = List(Right(1), Right(2), Left(error 3))

scala> seq.collect { case Right(value) => value }
res0: Seq[Int] = List(1, 2)
