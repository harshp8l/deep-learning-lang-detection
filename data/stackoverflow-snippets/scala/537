def processMessage(message: Array[String], mlFeatures: MLFeatures) = {

  for (j <- 0 until message.size){
        val req_message = message(j)//.get(j).toString() 

        val decisionTree_res = PriorAuthPredict.processPriorAuthPredict(req_message,mlFeatures)

        println("Message processed is " + req_message)

        kafkaProducer(conf.getString("kafka.responsetopic"), decisionTree_res)

        var startTime  = new Date().getTime();      
        saveToHBase(conf.getString("hbase.tableName"), req_message, decisionTree_res) 
        var endTime    = new Date().getTime();
        println("Kafka Consumer savetoHBase took : "+ (endTime - startTime) / 1000 + " seconds")            
  }   
}
