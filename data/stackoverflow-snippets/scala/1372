scala> case class Test(t1: String, t2: String)
defined class Test

scala> object Test2 extends App {
         |   def matchType(x: Any): String = x match {
         |     case y @ List(1, _*) => s""$y""   // works; prints the list
         |     case y @ Some(_) => s""$y""   // works, returns ""Some(Hiii)""
         |     case y @ Test(""t1"", ""t2"") => s""$y""  // works, returns ""Test(t1,t2)""
         |   }
         | }
defined object Test2

scala>  Test2.matchType(List(1,2,3))
res2: String = List(1, 2, 3)

scala> Test2.matchType(Some(""Hiii""))
res3: String = Some(Hiii)

scala> Test2.matchType(Test(""t1"",""t2""))
res4: String = Test(t1,t2)
