val df = Seq(
  (1, 2, 11, ""2016-10-12T12:10:00.000Z""),
  (1, 2, 12, ""2016-10-12T12:11:00.000Z""),
  (1, 2, 11, ""2016-10-12T12:09:00.000Z""),
  (4, 2, 34, ""2016-10-12T14:00:00.000Z""),
  (4, 2, 34, ""2016-10-12T14:00:00.000Z""),
  (5, 3, 11, ""2016-10-12T14:00:00.000Z"")
).toDF(""nodeFrom"", ""nodeTo"", ""value"", ""date"")

def zipDates = udf((date1: String, date2: String) => {
    if (date1 == date2)
        Seq(date1)
    else
        Seq(date1, date2)
})

val dfT = df
    .groupBy('nodeFrom, 'nodeTo)
    .agg(avg('value) as ""value"", min('date) as ""minDate"", max('date) as ""maxDate"")
    .select('nodeFrom, 'nodeTo, 'value, zipDates('minDate, 'maxDate) as ""date"")

dfT.show(10, false)
// +--------+------+------------------+----------------------------------------------------+
// |nodeFrom|nodeTo|value             |date                                                |
// +--------+------+------------------+----------------------------------------------------+
// |1       |2     |11.333333333333334|[2016-10-12T12:09:00.000Z, 2016-10-12T12:11:00.000Z]|
// |5       |3     |11.0              |[2016-10-12T14:00:00.000Z]                          |
// |4       |2     |34.0              |[2016-10-12T14:00:00.000Z]                          |
// +--------+------+------------------+----------------------------------------------------+
