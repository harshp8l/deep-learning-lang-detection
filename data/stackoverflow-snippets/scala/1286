  lazy val ctx = new PostgresJdbcContext(SnakeCase, ""ctx"")
  import ctx._

  case class Rooms(oid: String, ownerId: String, usersId: Seq[String])

  def foo(oid: String, uid: String) = {
    val uids: Seq[String] = Seq(uid)
    val v = quote(infix""(select array_agg(distinct e) from unnest(users_id || ${lift(uids)}) e)"".as[Seq[String]])

    val q = quote {
      query[Rooms].filter(_.oid == lift(oid))
        .update(_.usersId -> unquote(v))
    }
    ctx.run(q)
  }
  def main(args: Array[String]): Unit = {
    println(foo(""1"", ""2""))
  }
