scala> :paste
// Entering paste mode (ctrl-D to finish)

    sealed trait Data

    case class StringData(value: String) extends Data

    case class ByteData(value: Array[Byte]) extends Data

// Exiting paste mode, now interpreting.

defined trait Data
defined class StringData
defined class ByteData

scala> val oldList = List(StringData("stackoverflow"), ByteData("scala".getBytes))
oldList: List[Product with Serializable with Data] = List(StringData(stackoverflow), ByteData([B@108b121f))

scala> def addItem(oldList: List[Data], newItem: Data): List[Data] = oldList ++ List(newItem)
addItem: (oldList: List[Data], newItem: Data)List[Data]

scala> addItem(oldList, StringData("cow goes moo"))
res1: List[Data] = List(StringData(stackoverflow), ByteData([B@108b121f), StringData(cow goes moo))
