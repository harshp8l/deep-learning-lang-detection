def merge(firstHalf: List[(String, Int)], secondHalf: List[(String, Int)]): List[(String, Int)] = firstHalf match {
  case Nil => secondHalf
  case x::xs => secondHalf match {
    case Nil => firstHalf
    case y::ys => if (x._2 < y._2) x::merge(xs, secondHalf) else y::merge(firstHalf, ys)
  } 
}

def classeur(personne: List[(String, Int)]) : List[(String, Int)] = 
  personne match {
    case Nil => Nil
    case List(x) => List(x)
    case _ => {
      val (firstHalf, secondHalf) = personne.splitAt(personne.length / 2)
      merge(classeur(firstHalf), classeur(secondHalf))
    }
  }
