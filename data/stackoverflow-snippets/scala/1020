import scala.languageFeature.implicitConversions
import java.math.{MathContext, BigDecimal}

trait BigDecimalSpecial {
  def specialValue: BigDecimal
  def mathContext: MathContext
}

object BigDecimalSpecial {

  case class BigDecimalSpecial1(bd: BigDecimal) extends BigDecimalSpecial {
    val mathContext = new MathContext(2)
    val specialValue = new BigDecimal(bd.toString(), mathContext)
  }

  implicit def toBigDecimalSpecial1(bd: BigDecimal): BigDecimalSpecial = BigDecimalSpecial1(bd)

}

import BigDecimalSpecial._

val b = new BigDecimal(""2.353453"")
// b: java.math.BigDecimal = 2.353453

val forced = b.specialValue
// forced: java.math.BigDecimal = 2.4
