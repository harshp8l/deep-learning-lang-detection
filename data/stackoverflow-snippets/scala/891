trait PageElementFactory[+T <: PageElement] {
  def make(buf: String): Option[T]
}

case class PeTypeA(val i: Int) extends PageElement {
}

object PeTypeA extends PageElementFactory[PeTypeA] {
  override def make(buf: String): Option[PeTypeA] = {
    // simple example
    if (buf.length > 10) {
      Some(PeTypeA(11))
    } else {
      None
    }
  }
}

case class PeTypeB(val s: String) extends PageElement {
}

object PeTypeB extends PageElementFactory[PeTypeB] {
  override def make(buf: String): Option[PeTypeB] = {
    // simple example
    if (buf.length <= 10) {
      Some(PeTypeB(""foo""))
    } else {
      None
    }
  }
}
