trait A {
  def x() = "Hello " + e()
  def e() = "World"
}

class TestAX extends A {
  override def x() = super.x()
  override def e() = "Mock"
}

class TestAE extends A {
  override def x() = "Mock " + e()
  override def e() = super.e()
}

"x in A" should "do this and that" {
  val testA = new TestAX()
  assert(testA.x() == "Hello Mock")
  assert(testA.e() == "Mock")
}

"e in A" should "do something else" in {
  val testA = new TestAE()
  assert(testA.x() == "Mock World")
  assert(testA.e() == "World")
}
