def processValue(s: String): List[String] = 
  s.split("","").toList.map(_.trim).filterNot(_.isEmpty)

val retros = lines.foldLeft(List.empty[(String, List[String])]) {
  case (acc, l) =>
    l.indexOf(':') match {
      case -1 => 
        acc match {
          case Nil => acc // ???
          case h :: t => (h._1, h._2 ++ processValue(l)) :: t
        }
      case n =>
        val key = l.substring(0, n).trim
        val value = processValue(l.substring(n+1))
        (key, value) :: acc
    }
}

val m = retros.reverse.toMap

m.values.map(_.mkString("", "")).foreach(println)
