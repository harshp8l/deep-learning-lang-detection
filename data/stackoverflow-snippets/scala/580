  import akka.actor._
  import akka.pattern.ask
  import scala.concurrent.duration._
  import scala.concurrent._

  class FooActor extends Actor {
    def receive = {
    case s: String => sender ! s"Hello $s"
    }}
  val ac = ActorSystem()
  implicit val ec : ExecutionContext = ac.dispatcher
  val fooAc = ac.actorOf(Props[FooActor], "fa")
  implicit val to = new akka.util.Timeout(10 seconds)
  def ask2(msg: Any) : Future[Any] = fooAc.ask("foo")
  val x = Await.result(ask2("foo"), Duration.Inf)
  println(x)
