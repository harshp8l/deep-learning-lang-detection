import $ivy.`com.typesafe.play::play-json:2.6.7`

import play.api.libs.json._

case class Row(name: String, seats: Vector[Seat])

case class Seat(seatId: String, seatStatus: String, seatIsLadies: Boolean)

object Seat {
  implicit def format: Format[Seat] = Json.format[Seat]
}

  val inputJson = """
[
  {
    "row1": [
      {
        "seatId": "R1",
        "seatStatus": "BOOKED",
        "seatIsLadies": false
      },
      {
        "seatId": "R3",
        "seatStatus": "AVAILABLE",
        "seatIsLadies": false
      }
    ]
  },
  {
    "row2": [
      {
        "seatId": "R1",
        "seatStatus": "BOOKED",
        "seatIsLadies": false
      },
      {
        "seatId": "R3",
        "seatStatus": "AVAILABLE",
        "seatIsLadies": false
      }
    ]
  },
  {
    "row3": [
      {
        "seatId": "R1",
        "seatStatus": "BOOKED",
        "seatIsLadies": false
      },
      {
        "seatId": "R3",
        "seatStatus": "AVAILABLE",
        "seatIsLadies": false
      },
      {
        "seatId": "R3",
        "seatStatus": "AVAILABLE",
        "seatIsLadies": false
      }
    ]
  }
]
"""

val json = Json.parse(inputJson)

val rowObjs = json.as[Vector[JsObject]]

val result = rowObjs.map(obj => Row(obj.fields.head._1, obj.fields.head._2.as[Vector[Seat]]))

println(result)
