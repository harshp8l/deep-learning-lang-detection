/*
* Create a Multipart/mixed message body
*/
private
def genMultipart( set: Set[MyEntry] ): Multipart.General.Strict = {
  import scala.collection.immutable.{Seq => ImmutableSeq}

  val parts: Set[Multipart.General.BodyPart.Strict] = set.map {
    case MyEntry(keys, ct, value) =>

      val headers: ImmutableSeq[HttpHeader] = ImmutableSeq(
        RawHeader("X-AC-key1", keys._1),
        RawHeader("X-AC-key2", keys._2)
      )
      Multipart.General.BodyPart.Strict(
        HttpEntity.Strict(ContentTypes.`text/plain(UTF-8)`, ByteString("1,2,3")),   // some random values
        headers
      )
  }

  Multipart.General.Strict( MediaTypes.`multipart/mixed`, parts.to[ImmutableSeq] )
}
