scala>def conditionalFold(in: List[(Int, Int)]): List[(Int, Int, Int)] =
 |     in.foldLeft(Nil: List[(Int, Int, Int)]) { (acc, i) =>
 |       acc match {
 |         case Nil =>
 |           (i._1, i._2, 1) :: Nil
 |         case head :: tail =>
 |           if (i._2 >= head._2)
 |             (head._1, head._2, head._3 + 1) :: tail
 |           else
 |             (i._1, i._2, 1) :: head :: tail
 |       }
 |     }.reverse
conditionalFold: (in: List[(Int, Int)])List[(Int, Int, Int)]

scala>   println(conditionalFold(List((100, 3), (130, 3), (160, 1), (180, 2), (200, 2))))
List((100,3,2), (160,1,3))

scala>   println(conditionalFold(List((100,3), (130,3))))
List((100,3,2))

scala>   println(conditionalFold(List((160,1), (180,2), (200,2))))
List((160,1,3))
