val seq = Seq(1, 1, 2, 2, 3, 4, 5)

def either1(i: Int): Either[String, Int] = {
    if (i < 3) Right(i * 2)
    else Left(""error 1"")
}

def either2(i: Int): Either[String, Int] = {
    if (i > 3) Right(i * 2)
    else Left(""error 2"")
}

def rec(seq: Seq[Int], acc: Seq[Either[String, Int]]): Seq[Either[String, Int]] = seq match {
    case Nil => acc
    case x :: xs =>
        val xx = if (x % 2 == 0) either1(x) else either2(x)
        xx match {
            case Left(_) => acc
            case Right(value) => rec(xs, acc :+ Right(value))
        }
    }

rec(seq, Seq())
