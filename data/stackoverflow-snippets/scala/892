object PageElement {

  def doItImpl[T <: PageElement](buf: String, factories: List[PageElementFactory[T]]): Option[T] = {
    factories.foldLeft[Option[T]](None)((acc, fact) => acc.orElse(fact.make(buf)))
  }

  private val aChildFactories: List[PageElementFactory[PeTypeAChild]] = List(PeTypeA1, PeTypeA2)

  def doItA(buf: String): Option[PeTypeAChild] = doItImpl(buf, aChildFactories)

  private val allFactories: List[PageElementFactory[PageElement]] = List(PeTypeA, PeTypeA1, PeTypeA2, PeTypeB)

  def doIt(buf: String): Option[PageElement] = doItImpl(buf, allFactories)
}
