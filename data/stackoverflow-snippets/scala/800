scala> def inputStringPipeline(inputStr: String): String => String = {
     |     val upperCase = (input: String) => input.toUpperCase
     |     val lowerCase = (input: String) => input.toLowerCase
     |     val titleCase = (input: String) => input.split(' ').map(_.capitalize).mkString(" ")
     |     val reverse = (input: String) => input.reverse
     |     val sortChars = (input: String) => input.sorted
     |     val replaceChar = (input: String) => input.replaceAll("\\s", "")
     | 
     |     val emptyFunc: String => String = (input: String) => input
     |     inputStr.foldLeft(emptyFunc) {
     |       case (funcAcc, present) =>
     |         val newFunc = present.toString match {
     |           case "U" => upperCase
     |           case "l" => lowerCase
     |           case "T" => titleCase
     |           case "r" => reverse
     |           case "s" => sortChars
     |           case "*" => replaceChar
     |         }
     | 
     |         funcAcc andThen newFunc
     |     }
     | 
     | }
inputStringPipeline: (inputStr: String)String => String

scala> val input = "Us*"
input: String = Us*

scala> val func = inputStringPipeline(input)
func: String => String = scala.Function1$$Lambda$1061/1593722877@5ef7ae2f

scala> val str = func("age bfh dc")
str: String = ABCDEFGH

scala> println(str)
ABCDEFGH
