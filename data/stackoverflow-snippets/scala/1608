val checkHist1Empty = Try(hist1.first)
val df = checkHist1Empty match {
            case Success(df) => {
                             hist2.join(hist1, Seq(""article_id"", ""pos_id""), ""left"")
                              .select($""pos_id"", $""article_id"",
                                coalesce(hist2(""date""), hist1(""date"")).alias(""date""),
                                (coalesce(hist2(""qte""), lit(0)) + coalesce(hist1(""qte""), lit(0))).alias(""qte""),
                                (coalesce(hist2(""ca""), lit(0)) + coalesce(hist1(""ca""), lit(0))).alias(""ca""))
                              .orderBy(""pos_id"", ""article_id"")
                            }
            case Failure(e) => {
                            hist2.select($""pos_id"", $""article_id"",
                                coalesce(hist2(""date"")).alias(""date""),
                                coalesce(hist2(""qte""), lit(0)).alias(""qte""),
                                coalesce(hist2(""ca""), lit(0)).alias(""ca""))
                              .orderBy(""pos_id"", ""article_id"")
            }
        }
