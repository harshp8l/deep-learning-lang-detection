import akka.stream.Materializer
import javax.inject._
import play.api.mvc._
import scala.concurrent.{ExecutionContext, Future}

@Singleton
class ExampleFilter @Inject()(
    implicit override val mat: Materializer,
    exec: ExecutionContext) extends Filter with Results { // added `with Results` to be able to use `InternalServerError`

  override def apply(nextFilter: RequestHeader => Future[Result])
           (requestHeader: RequestHeader): Future[Result] = {
    // ...

    if(/* ... */){
        return Future.successful(InternalServerError(""Locale not found""))
    }

    // ...

    nextFilter(requestHeader).map { result =>
       // ...
    }
  }

}
