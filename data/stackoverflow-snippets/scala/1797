def append[
  Value,
  In  <: HList,
  Out <: HList,
  InSize   <: Nat,
  OutSize  <: Nat,
  AddedNum <: Nat
](in: In, key: Witness, value: Value)(implicit
  update: Updater.Aux[In, FieldType[key.T, Value], Out],
  inSize:  Length.Aux[In,  InSize],
  outSize: Length.Aux[Out, OutSize],
  addedNum: ops.nat.Diff.Aux[OutSize, InSize, AddedNum], // ops.{hlist, nat}.Diff conflict
  sizeRestriction: AddedNum =:= _1 // Bonus: error messages are fairly readable: "Cannot prove that AddedNum = Succ[_0]" (followed by a horrifyingly long "not enough arguments" error).
): Out = update(in, field[key.T](value))
