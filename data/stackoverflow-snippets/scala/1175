import reactivemongo.bson._

case class FormData(_id: Option[BSONObjectID], stadiumArr: Option[List[String]])

implicit val formDataReaderWriter = new BSONDocumentReader[FormData] with BSONDocumentWriter[FormData] {
    def read(bson: BSONDocument): FormData = {
        FormData(
            _id = bson.getAs[BSONObjectID](""_id""),
            stadiumArr = bson.getAs[List[String]](""stadiumArr"").map(_.filterNot(_.isEmpty))
        )
    }
    def write(formData: FormData) = {
        BSONDocument(
            ""_id"" -> formData._id,
            ""stadiumArr"" -> formData.stadiumArr
        )
    }
}
