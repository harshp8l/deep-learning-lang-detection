val simpleSchema = StructType(Seq(StructField(""column"", StringType)))
val successDF = sqlContext.createDataFrame(rdd.filter(x => x.contains(""Success"")).map(x => Row.fromSeq(Seq(""JobID:""+x.replace(""...#[#"", ""..."").replace(""#[#"", ""\n"")))), simpleSchema)
val failedDF = sqlContext.createDataFrame(rdd.filter(x => x.contains(""Failed."")).map(x => Row.fromSeq(Seq(""JobID:""+x.replace(""...#[#"", ""..."").replace(""#[#"", ""\n"")))), simpleSchema)
val errorDF = sqlContext.createDataFrame(rdd.filter(x => x.contains(""Error"")).map(x => Row.fromSeq(Seq(""JobID:""+x.replace(""...#[#"", ""..."").replace(""#[#"", ""\n"")))), simpleSchema)
