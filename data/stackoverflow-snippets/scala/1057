case class Json(me: String, version: String, message_metadata: Message)

case class Message(event_type: String, start_date: String)

object Mapping {

  def main(args: Array[String]): Unit = {

    import com.fasterxml.jackson.databind.ObjectMapper
    import com.fasterxml.jackson.module.scala.DefaultScalaModule
    import com.fasterxml.jackson.module.scala.experimental.ScalaObjectMapper

    val objectMapper = new ObjectMapper() with ScalaObjectMapper
    objectMapper.registerModule(DefaultScalaModule)
    val str = "{\n  \"me\": \"a\",\n  \"version\": \"1.0\",\n  \"message_metadata\": {\n    \"event_type\": \"UpdateName\",\n    \"start_date\": \"1515\"\n  }\n}"
    val json = objectMapper.readValue(str, classOf[Json])
    //to print event_type
    println(json.message_metadata.event_type)
    //output: UpdateName

  }

}
