val txt =
  """
    |inputs = [
    |    {
    |      type = "Foo"
    |      bar = "a"
    |      baz = "b"
    |    }
    |
    |    {
    |      type = "Bar"
    |      bar = "a"
    |      baz = "c"
    |      other= "foo"
    |    }
    |]
  """.stripMargin

sealed trait Input {
  def bar: String
  def baz: String
}
case class Foo(bar: String, baz: String) extends Input
case class Bar(bar: String, baz: String, other: String) extends Input

val result = ConfigFactory.parseString(txt).get[Seq[Input]]("inputs")
println(result)    
