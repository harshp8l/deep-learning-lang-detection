def decode(tree: BinarySearchTree, bits: List[Boolean]): List[Char] = {
  @scala.annotation.tailrec
  def searchCharactersInBinarySearchTree(t: BinarySearchTree, b: List[Boolean], acc: List[Char] = Nil): List[Char] = t match {
    case LeafNode(ch, _) => if (b.isEmpty) acc else searchCharactersInBinarySearchTree(tree, b.tail, ch :: acc)
    case ForkNode(l, r, _, _) => if (b.head == false) searchCharactersInBinarySearchTree(l, b.tail) else searchCharactersInBinarySearchTree(r, b.tail)
  }
  searchCharactersInBinarySearchTree(tree, bits)
}
