object HighOrderFunction {
    type MyFunction[T] = (Int, T) => List[T]

    def main(args: Array[String]): Unit = {

        val dupInt: MyFunction[Int] = (n, value) => {
            List.fill(n)(value)
        }

        val dupString: MyFunction[String] = (n, value) => {
            List.fill(n)(value)
        }

        val dupDouble: MyFunction[Double] = (n, value) => {
            List.fill(n)(value)
        }

        execute(dupInt, 5, 1)
        execute(dupString, 5, ""*"")
        execute(dupDouble, 5, 3.14)

    }


    def execute[T](f: MyFunction[T], n: Int, t: T): Unit = {
        println(f(n, t))
    }
}
