val jobs = Seq(""stream.Job1"",""stream.Job2"",""stream.Job3"")
jobs.foldLeft(Future.successful[Unit]()) {
  case (result, jobClass) =>
    result.flatMap[Unit] {_ =>
      Future {
        println(s""Starting the spark job from class $jobClass..."")
        % gcloud(""sparkC"", ""jobs"", ""submit"", ""spark"", s""--cluster=$clusterName"", s""--class=$jobClass"", ""--region=global"", s""--jars=$JarFile"")
        println(s""Starting the spark job from class $jobClass...DONE"")
      }
    }.
      recoverWith {
      case NonFatal(e) => result
    }
}
