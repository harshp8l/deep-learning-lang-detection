val intStream1 = 1 #:: 5 #:: Stream(10)

val intStream2 = 2 #:: 4 #:: Stream(12)

def sortedMerge(stream1: Stream[Int], stream2: Stream[Int]): Stream[Int] = (stream1.isEmpty, stream2.isEmpty) match {
  case (false, false) => (stream1.head <= stream2.head) match {
    case true => stream1.head #:: sortedMerge(stream1.tail, stream2)
    case false => stream2.head #:: sortedMerge(stream1, stream2.tail)
  }
  case (false, true) => stream1
  case (true, false) => stream2
  case (true, true) => Stream.empty[Int]
}
}

val sortedStream = sortedMerge(intStream1, intStream2)
