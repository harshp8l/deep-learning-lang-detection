import play.api.libs.json._

val a: String = """"""{
  ""pass"": {
    ""key-1"": {
    ""field1"": ""aaaa"",
    ""field2"": ""aaaa""
  },
    ""key-2"": {
    ""field1"": ""aaaa"",
    ""field2"": ""aaaa""
  },
    ""key-3"": {
    ""field1"": ""aaaa"",
    ""field2"": ""aaaa""
  }
  }
}""""""

case class Pass(field1: String, field2: String)

case class MapPass(pass: Map[String, Pass])

implicit val passFormat: Format[Pass] = Json.format[Pass]
implicit val mapPassFormat: Format[MapPass] = Json.format[MapPass]

val json = Json.parse(a)
val mapPassJsResult = json.validate[MapPass]
val mapPass = mapPassJsResult.get
print(mapPass.pass.mkString(""\n""))
