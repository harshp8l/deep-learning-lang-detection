def persist[A](event: A)(handler: A => Unit): Unit = {
  if (recoveryRunning) throw new IllegalStateException(""Cannot persist during replay. Events can be persisted when receiving RecoveryCompleted or later."")
  pendingStashingPersistInvocations += 1
  pendingInvocations addLast StashingHandlerInvocation(event, handler.asInstanceOf[Any => Unit])
  eventBatch ::= AtomicWrite(PersistentRepr(event, persistenceId = persistenceId,
    sequenceNr = nextSequenceNr(), writerUuid = writerUuid, sender = sender()))
}
