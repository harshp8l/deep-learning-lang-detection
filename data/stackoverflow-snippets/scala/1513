object AnActor {

  trait Factory {
    def apply(someValue: String): Actor
  }
}

class AnActor @Inject() (configuration: Configuration,@Assisted someValue: String) extends Actor {

  def receive = ???

}

class LocationsController @Inject()(actorSystem: ActorSystem){

  def injectedChild2(create: => Actor, name: String, props: Props => Props = identity)(implicit system: ActorSystem): ActorRef = {
    system.actorOf(props(Props(create)), name)
  }

  val actor1: ActorRef = injectedChild2(childFactory("value fom actor 1"),"anActor1")(actorSystem)
  val actor2: ActorRef = injectedChild2(childFactory("value from actor 2"),"anActor2")(actorSystem)

}
