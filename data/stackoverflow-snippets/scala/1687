scala>  import scala.reflect.runtime.{ universe => ru }

import scala.reflect.runtime.{universe=>ru}

scala> val runtimeMirror  = ru.runtimeMirror(getClass.getClassLoader)

runtimeMirror: reflect.runtime.universe.Mirror = JavaMirror with scala.tools.nsc.interpreter.IMain$TranslatingClassLoader@67ee3ed7 of type class scala.tools.nsc.interpreter.IMain$TranslatingClassLoader with classpath [(memory)] and parent being scala.reflect.internal.util.ScalaClassLoader$URLClassLoader@53b79b76 of type class scala.reflect.internal.util.ScalaClassLoader$URLClassLoader with classpath [file:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/resources.jar,file:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/rt.jar,file:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jsse.jar,file:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jce.jar,file:/Library/Jav...

scala> val moduleSymbol   = runtimeMirror.staticModule("com.coryklein.kittens.package$")

moduleSymbol: reflect.runtime.universe.ModuleSymbol = object package$

scala> val moduleMirror   = runtimeMirror.reflectModule(moduleSymbol)

moduleMirror: reflect.runtime.universe.ModuleMirror = module mirror for com.coryklein.kittens.package$ (bound to null)

scala> val moduleInstance = moduleMirror.instance

moduleInstance: Any = com.coryklein.kittens.package$@72d3f96

scala> val instanceMirror = runtimeMirror.reflect(moduleInstance)

instanceMirror: reflect.runtime.universe.InstanceMirror = instance mirror for com.coryklein.kittens.package$@72d3f96

scala> val fieldSymbol    = instanceMirror.symbol.info.member(ru.TermName("purr")).asTerm.accessed.asTerm

fieldSymbol: reflect.runtime.universe.TermSymbol = value purr

scala> val fieldMirror    = instanceMirror.reflectField(fieldSymbol)

fieldMirror: reflect.runtime.universe.FieldMirror = field mirror for private[this] val purr: java.lang.String (bound to com.coryklein.kittens.package$@72d3f96)

scala> fieldMirror.get

res0: Any = meow

scala>
