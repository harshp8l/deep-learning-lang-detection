implicit object FooIsCopyable extends Copyable[Foo] {
  def copy(f: Foo, paramName: String, value: Any): Foo = {
    if (paramName == ""paramName"") {
      f.copy(paramName = value.asInstanceOf[String])
    } else if (paramName == ""foo"") {
      f.copy(foo = value.asInstanceOf[Int])
    } else {
      throw new IllegalArgumentException(""Foo has no param `"" + paramName + ""`"")
    }
  }
}

implicit object BarIsCopyable extends Copyable[Bar] {
  def copy(b: Bar, paramName: String, value: Any): Bar = {
    if (paramName == ""paramName"") {
      b.copy(paramName = value.asInstanceOf[String])
    } else if (paramName == ""bar"") {
      b.copy(bar = value.asInstanceOf[Option[Double]])
    } else {
      throw new IllegalArgumentException(""Bar has no param `"" + paramName + ""`"")
    }
  }
}
