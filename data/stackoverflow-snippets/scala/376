import scala.collection.mutable

object MyApp {

  // Create some kind of "registry"
  private val TableByName: mutable.Map[String, Table] = mutable.Map()

  // Create a lookup method:
  def lookup(name: String): Option[Table] = TableByName.get(name)

  // Each table would register itself
  trait Table {
    TableByName.put(this.toString, this)
    override def toString: String = this.getClass.getSimpleName.replace("$", "")
  }

  // Instantiate each object after declaring it, or else it won't "register"
  object Table1 extends Table; Table1
  object Table2 extends Table; Table2
  // ...

  def main(args: Array[String]): Unit = {
    // Now we can lookup our table in the registry by name
    val result: Option[Table] = lookup("Table2")
    println(result)
  }

}
