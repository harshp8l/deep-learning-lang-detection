scala> val customers = Map(""customer1"" -> ""location"", 
                           ""customer2"" -> ""location2"", 
                           ""customer-strange"" -> ""canada-strange"")
customers: scala.collection.immutable.Map[String,String] = Map(customer1 -> location, customer2 -> location2, customer-strange -> canada-strange)

scala> val orders = Seq((""customer1"", ""shirts"", ""pants""), 
                        (""customer2"", ""guitar"", ""drum""), 
                        (""customer-not-in-map"", ""whatever-1"", ""whatever-2""))
orders: Seq[(String, String, String)] = List((customer1,shirts,pants), (customer2,guitar,drum), (customer-not-in-map,whatever-1,whatever-2))

scala> orders.collect { case (s1, s2, s3) if customers.contains(s1) => s3 }
res2: Seq[String] = List(pants, drum)
