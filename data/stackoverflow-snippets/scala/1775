fun colorIsRed(fruit: Fruit): String? {
    return if(fruit.color == ""red"")
        null
    else
        ""Color is not red""
}

fun notTooHeavy(fruit: Fruit): String? {
    return if(fruit.weight < 500)
        null
    else
        ""Fruit too heavy""
}

fun main(args: Array<String>) {
    val ruleChecker = createComposableRule(::colorIsRed) composeRules ::notTooHeavy
    //We can compose as many rules as we want
    //e.g. ruleChecker composeRules ::fruitTooOld composeRules ::fruitNotTooLight

    val fruit1 = Fruit(""blue"", 300)
    val result1 = ruleChecker(Result.Ok(fruit1))
    println(result1)

    val fruit2 = Fruit(""red"", 700)
    val result2 = ruleChecker(Result.Ok(fruit2))
    println(result2)

    val fruit3 = Fruit(""red"", 350)
    val result3 = ruleChecker(Result.Ok(fruit3))
    println(result3)
}
