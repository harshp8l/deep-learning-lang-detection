case class Money(amount: Int, currency: String)
case class Human(name: String, money: Money)
case class SomethingElse(whatever: Double)

object Mapper {
  def superMethod(list: List[String]): Option[Any] =
    list match {
      case List(name, amount, currency) =>
        Try(Human(name, Money(amount.toInt, currency))).toOption
      case List(whatever) => Try(SomethingElse(whatever.toDouble)).toOption
      case _ => None
    }
}

println(Mapper.superMethod(List("john", 100, "dollar")))
> Some(Human(john,Money(100,dollar)))
println(Mapper.superMethod(List(17d)))
> Some(SomethingElse(17.0))
