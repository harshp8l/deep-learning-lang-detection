val m: Map[Int, String] = Map(1 -> "a", 2 -> "b", 3 -> "c", 4 -> "d")
m: Map[Int,String] = Map(1 -> a, 2 -> b, 3 -> c, 4 -> d)

m.foldLeft(Map.empty[String, String]) {
    case (accum, (i, s)) if i % 2 == 0 => accum + ("even" -> accum.get("even").fold(s)(existing => existing + s))
    case (accum, (i, s)) => accum + ("odd" -> accum.get("odd").fold(s)(existing => existing + s))
}

//scala.collection.immutable.Map[String,String] = Map(odd -> ac, even -> bd)
