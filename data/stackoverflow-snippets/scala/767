//Create a case class which replicates your incoming data
case class Tracker(IP: String, upload: Double, dowload: Double)

//assuming you have data as a string and each record in a new line 
val data =
      """ip=10.22.3.88 upload =470 download =308
        |ip=10.22.3.89 upload =526 download =603
        |ip=10.22.3.88 upload =542 download =603
        |ip=10.22.3.90 upload =292 download =235
        |ip=10.22.3.90 upload =210 download =653
        |ip=10.22.3.88 upload =210 download =653"""

   //process data line by line and map to Tracker class
    val lst = data.split("\n").map(x => {
      val array = x.split("=")
      Tracker(array(1).split(" ")(0).trim,
        array(2).split(" ")(0).trim.toDouble,
        array(3).split(" ")(0).trim.toDouble)
    })

   //finally group by IP and then add upload and download traffic for grouped IP
    val result = lst.groupBy(_.IP)
      .map(x =>
        (x._1,
          x._2.map(_.upload).sum,
          x._2.map(_.dowload).sum))

    print(result)
    //output
    //List((10.22.3.90,502.0,888.0), (10.22.3.89,526.0,603.0), (10.22.3.88,1222.0,1564.0))
