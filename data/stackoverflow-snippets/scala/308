import scala.concurrent._
import ExecutionContext.Implicits.global
object TestFutures  extends  App{

  def doSomeOtherTask = {
    Thread.sleep(1000) //do some task of 1 sec
    println("Completed some task by "+Thread.currentThread().getName)
  }

  def returnFuture : Future[Int]= Future{
    println("Future task started "+Thread.currentThread().getName)
    Thread.sleep(5000) //do some task which is 5 sec
    println("Future task completed "+Thread.currentThread().getName)
    5
  }
    val x = returnFuture //this takes 5 secs
    doSomeOtherTask  // ~ 1 sec job
    println(x.isCompleted)
    doSomeOtherTask // ~ 2 sec completed
    println(x.isCompleted)
    doSomeOtherTask // ~ 3 sec completed
    println(x.isCompleted)
    println("Future task is still pending and main thread have no more lines to execute")
}
