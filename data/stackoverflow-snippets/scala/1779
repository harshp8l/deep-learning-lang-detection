// must be an object, otherwise will be serialized and sent from driver
object MySharedResource {
  lazy val mySharedData: Map[String, Int] = loadDataOnce()
}

// If you use mySharedData in a Spark transformation, 
// the "local" copy in each executor will be used:
object MySparkTransformation {
  def transform(rdd: RDD[String]): RDD[Int] = {
    // Spark won't include MySharedResource.mySharedData in the 
    // serialized task sent from driver, since it's "static"
    rdd.map(r => MySharedResource.mySharedData(r))
  }
}
