import net.liftweb.json.DefaultFormats
import net.liftweb.json.Serialization.write 

case class Must(`match`: Map[String, String])
case class Bool(must: List[Must])
case class Query(bool: Bool)
case class Json(size: String, query: Query)


 implicit val format = DefaultFormats

 val colList = List(""col_1"", ""col_2"", ""col_3"", ""col_4"", ""col5"")
 val listBuffer = new ListBuffer[Must]
 for (col <- colList) {
   listBuffer += Must(Map(col -> ""value""))
 }
val mustList = listBuffer.toList

 /** mustList will look like this:
    val mustList = List(Must(
                            Map(""col_1"" -> ""value"")
                            ))

 */
val v = write(Json(""value"", Query(Bool(mustList))))
println(v)
