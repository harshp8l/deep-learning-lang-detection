package main

import (
    ""fmt""
    ""encoding/json""
)

const myJSON = `
{ 
    ""totallyValid"": ""this is OK"",
    ""missing quotes: not OK
}
`

func main() {
    var result map[string]interface{}
    err := json.Unmarshal([]byte(myJSON), &result)
    switch err := err.(type) {
    case *json.SyntaxError:
        fmt.Printf(""Error in input syntax at byte %d: %s\n"", err.Offset, err.Error())
        var line int
        var readBytes int64
        for scanner.Scan() {
            // +1 for the \n character
            readBytes += int64(len(scanner.Bytes()) + 1)
            line += 1
            if (readBytes >= err.Offset) {
                fmt.Printf(""Error in input syntax on line %d: %s\n"", line, err.Error())
                break
            }
        }
    default:
        fmt.Printf(""Other error decoding JSON: %s\n"", err.Error())
    }
}
