switch img.ColorModel() {
case color.RGBAModel:
    // Try to cast to RGBA first
    m, ok := img.(*image.RGBA)
    if !ok {
        //not an RGBA image, do generic/custom processing,
        //e.g. using interface exposed by image.Image
        return
    }

    //Direct pixel access for performance
    for y := m.Rect.Min.Y; y < m.Rect.Max.Y; y++ {
        yp := (y - m.Rect.Min.Y) * m.Stride
        for x := m.Rect.Min.X; x < m.Rect.Max.X; x++ {
            rgba := m.Pix[yp+(x-m.Rect.Min.X)*4:] //[]byte{r, g, b, a}
            //get rgba component
            r, g, b, a := rgba[0], rgba[1], rgba[2], rgba[3]

            //set r channel to RED
            rgba[0] = 255

            //...           
        }
    }
}
