package main

import ""fmt""

var m  = map[string][]string{}

func FindLetterType(search_key string, search_in map[string][]string) (string) {
  return_type := """";
  for type1, keys:= range search_in {
      for _, key:= range keys{
         if(key == search_key){
          return_type = return_type  + "","" + type1;
        }
      }
  }
  return return_type ;
}

func main() {
    arr := []string{""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z"",""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9""}
    numbers := arr[26:36]
    letters := arr[0:26]
    fmt.Println(letters)
    vowels := []string{arr[0],arr[4],arr[8],arr[14],arr[20]}
    fmt.Println(arr)
    fmt.Println(numbers)
    fmt.Println(vowels)
    consonants := []string{arr[1],arr[2],arr[3],arr[5],arr[6],arr[7],arr[9],arr[10],arr[11],arr[12],arr[13],arr[15],arr[16],arr[17],arr[18],arr[19],arr[21],arr[22],arr[23],arr[24],arr[25]}
    fmt.Println(consonants)
    odds := []string{numbers[1],numbers[3],numbers[5],numbers[7],numbers[9]}
    fmt.Println(odds)
    evens := []string{numbers[0],numbers[2],numbers[4],numbers[6],numbers[8]}
    fmt.Println(evens)

for _, v := range letters {
    m[""letters""] = append(m[""letters""], v)
}
for _, v := range vowels {
    m[""vowels""] = append(m[""vowels""], v)
}
for _, v := range consonants {
   m[""consonants""] = append(m[""consonants""], v)
}
for _, v := range numbers {
    m[""numbers""] = append(m[""numbers""], v)
}
for _, v := range odds {
    m[""odds""] = append(m[""odds""], v)
}
for _, v := range evens {
   m[""evens""] = append(m[""evens""], v)
}
//fmt.Println(m);

fmt.Println(""a under => "", FindLetterType(""a"", m));
fmt.Println(""a under => "", FindLetterType(""1"", m));
fmt.Println(""a under => "", FindLetterType(""2"", m));
fmt.Println(""a under => "", FindLetterType(""b"", m));


}
