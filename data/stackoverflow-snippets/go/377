    package main

    import (
        "encoding/json"
        "fmt"
        "log"
    )

    type CatalogBank struct {
        Advice   string `json:"advice"`
        BankCode string `json:"bank_code"`
        BankName string `json:"bank_name"`
        BIC      string `json:"bic"`
        Credentials []struct {
            Label  string `json:"label"`
            Masked bool   `json:"masked"`
        } `json:"credentials"`
        Icon []interface{} `json:"icon"`
        Language []byte `json:"language"`
    }

    func main() {

        data := `
    {
    "Advice":"abc",
    "icon": [
            "https://api.figo.me/assets/images/accounts/postbank.png",
            {
              "48x48": "https://api.figo.me/assets/images/accounts/postbank_48.png",
              "60x60": "https://api.figo.me/assets/images/accounts/postbank_60.png",
              "72x72": "https://api.figo.me/assets/images/accounts/postbank_72.png",
              "84x84": "https://api.figo.me/assets/images/accounts/postbank_84.png",
              "96x96": "https://api.figo.me/assets/images/accounts/postbank_96.png",
              "120x120": "https://api.figo.me/assets/images/accounts/postbank_120.png",
              "144x144": "https://api.figo.me/assets/images/accounts/postbank_144.png",
              "192x192": "https://api.figo.me/assets/images/accounts/postbank_192.png",
              "256x256": "https://api.figo.me/assets/images/accounts/postbank_256.png"
            }
          ]
    }
    `

        bank := &CatalogBank{}

        err := json.Unmarshal([]byte(data), bank)
        if err != nil {
            log.Fatal(err)
        }
        for _, icon := range bank.Icon {
            fmt.Printf(" %v\n ", icon)
        }

    }
