type Ports struct {
    Ports map[string]*Port `json:""ports""`
}

type Port map[string]string


func main() {
    p := &Ports{}
    err := json.Unmarshal([]byte(ports),p)
    if err != nil {
        fmt.Println(err)
        return
    }

    // using

    // if you need to sort by the number value, get the keys in a slice
    keys := make([]string, 0, len(p.Ports))
    for k, _ := range p.Ports {
        keys = append(keys, k)
    }
    // sort here

    for i := range keys {
        fmt.Printf(""%+v\n"",p.Ports[keys[i]])
    }

    // if you don't care to sort
    for _, v := range p.Ports {
        for k, v := range *v {
            fmt.Printf(""%s: %s\n"", k,v)
        }
    }
}
