package main

import (
    "fmt"
    "sync"
)

var mu sync.Mutex

func main() {
    numdone := make(chan int)
    var wg sync.WaitGroup
    wg.Add(1)
    go func() {
        defer wg.Done()
        data := []byte("ABCDEFGHIJ")
        for i := 0; i < 10; i = i + 2 {
            <-numdone
            fmt.Printf("%c", data[i])
            fmt.Printf("%c", data[i+1])
            mu.Unlock()
        }
    }()

    wg.Add(1)
    go func() {
        defer wg.Done()
        for i := 1; i < 11; i = i + 2 {
            mu.Lock()
            fmt.Printf("%d", i)
            fmt.Printf("%d", i+1)
            numdone <- i
        }
    }()

    wg.Wait()
}
