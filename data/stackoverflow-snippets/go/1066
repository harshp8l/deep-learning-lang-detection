func GetItems(design string, viewName string, opts map[string]interface{}, arrayType interface{}) (interface{}, error) {
    res := couchResponse{}
    opts["limit"] = 100000
    bytes, err := CouchView(design, viewName, opts)
    if err != nil {
        return nil, err
    }
    err = json.Unmarshal(bytes, &res)
    if err != nil {
        return nil, err
    }
    dataType := reflect.TypeOf(arrayType)
    slice := reflect.MakeSlice(reflect.SliceOf(dataType), len(res.Rows), len(res.Rows))
    for i := 0; i < len(res.Rows); i++ {
        if opts["include_docs"] == true {
            err = json.Unmarshal(res.Rows[i].Doc, slice.Index(i).Addr().Interface())
        } else {
            err = json.Unmarshal(res.Rows[i].Value, slice.Index(i).Addr().Interface())
        }
        if err != nil {
            return nil, err
        }
    }
    x := reflect.New(slice.Type())
    x.Elem().Set(slice)
    return x.Interface(), nil
}
