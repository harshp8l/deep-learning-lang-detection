func main() {
    motto.AddModule("test", testModuleLoader)
    vm := motto.New()
    vm.Run("test.js")
}

func testModuleLoader(vm *motto.Motto) (otto.Value, error) {
    test, _ := vm.Object(`({})`)
    test.Set("testCallback", func(call otto.FunctionCall) otto.Value {
        fnWrapper := call.Argument(0).Object()

        // HOW TO CALL fn("value for a") ?
        cb, _ := fnWrapper.Get("cb")
        if cb.IsFunction() {
          cbArgs := "value for a"
          return fnWrapper.Call("cb", cbArgs) // cbArgs is optional
        }

        return motto.NullValue()
    })

    return vm.ToValue(test)
}
