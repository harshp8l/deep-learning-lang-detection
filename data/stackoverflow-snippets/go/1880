var s string
switch fi.Kind() {
case reflect.String:
    s = fmt.Sprintf("%q", fi.String())
case reflect.Int:
    s = fmt.Sprintf("%d", fi.Int())
case reflect.Slice:
    if fi.Type().Elem().Kind() != reflect.String {
        continue
    }

    s = "["
    for j := 0; j < fi.Len(); j++ {
        s = fmt.Sprintf("%s%q, ", s, fi.Index(i).String()) 
    }
    s = strings.TrimRight(s, ", ") + "]"
default:
    continue
}

sf := rv.Type().Field(i)
if _, err := fmt.Fprintf(file, "%s=%s\n", sf.Name, s); err!= nil {
    panic(err)
}
