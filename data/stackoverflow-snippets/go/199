func FibonacciReverseBuf(n int) string {
    switch n {
    case 0:
        return """"
    case 1:
        return ""a""
    case 2:
        return ""b""
    }

    prev, prev2 := 1, 1

    buf := bytes.NewBufferString(""ba"")

    for i := 3; i < n; i++ {
        buf.Write(buf.Bytes()[:buf.Len()-prev2])
        prev2, prev = prev, prev+prev2
    }

    // Reverse
    b := buf.Bytes()
    for i, j := 0, len(b)-1; i < j; i, j = i+1, j-1 {
        b[i], b[j] = b[j], b[i]
    }

    return string(b)
}
