package main

import (
    ""image""
    ""image/color""

    ""github.com/llgcode/draw2d""
    ""github.com/llgcode/draw2d/draw2dimg""
    ""github.com/llgcode/draw2d/draw2dpdf""
    ""github.com/llgcode/draw2d/draw2dsvg""
)

func coreDraw(gc draw2d.GraphicContext) {
    // Set some properties
    gc.SetFillColor(color.RGBA{0x44, 0xff, 0x44, 0xff})
    gc.SetStrokeColor(color.RGBA{0x44, 0x44, 0x44, 0xff})
    gc.SetLineWidth(5)

    // Draw a closed shape
    gc.BeginPath()    // Initialize a new path
    gc.MoveTo(10, 10) // Move to a position to start the new path
    gc.LineTo(100, 50)
    gc.QuadCurveTo(100, 10, 10, 10)
    gc.Close()
    gc.FillStroke()
}

func main() {
    format := ""svg""

    switch format {
    case ""png"":
        dest := image.NewRGBA(image.Rect(0, 0, 297, 210.0))
        gc := draw2dimg.NewGraphicContext(dest)
        coreDraw(gc)
        draw2dimg.SaveToPngFile(""hello.png"", dest)
    case ""pdf"":
        dest := draw2dpdf.NewPdf(""L"", ""mm"", ""A4"")
        gc := draw2dpdf.NewGraphicContext(dest)
        coreDraw(gc)
        draw2dpdf.SaveToPdfFile(""hello.pdf"", dest)
    case ""svg"":
        img := draw2dsvg.NewSvg()
        gc := draw2dsvg.NewGraphicContext(img)
        coreDraw(gc)
        draw2dsvg.SaveToSvgFile(""hello.svg"", img)
    }
}
