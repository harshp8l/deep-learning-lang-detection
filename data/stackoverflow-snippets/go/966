package main

import (
    ""fmt""
)

type xtype interface{}
type ytype map[string]map[string]bool

func main() {
    myvar := map[string]xtype{
        ""x"": map[string]interface{}{
            ""foo"": map[string]interface{}{
                ""bar"": true,
            },
        },
    }

    x := myvar[""x""]        // x is of type 'xtype'
    fmt.Printf(""%#v\n"", x) // map[string]interface {}{""foo"":map[string]interface {}{""bar"":true}}

    mid := x.(map[string]interface{})
    fmt.Printf(""%#v\n"", mid) // map[string]interface {}{""foo"":map[string]interface {}{""bar"":true}}

    y := make(map[string]map[string]bool)
    for k, v := range mid {
        m := make(map[string]bool)
        for j, u := range v.(map[string]interface{}) {
            m[j] = u.(bool)
        }
        y[k] = m
    }
    fmt.Printf(""%#v\n"", y) // map[string]map[string]bool{""foo"":map[string]bool{""bar"":true}}
}
