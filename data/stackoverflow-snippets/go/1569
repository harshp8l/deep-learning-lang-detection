package main

import (
    ""github.com/shomali11/parallelizer""
    ""fmt""
)

func main() {
    populationSize := 100
    results = make([]*Individual, populationSize)

    options := &Options{ Timeout: time.Second }
    group := parallelizer.NewGroup(options)
    for i := 0; i < populationSize; i++ {
        group.Add(func(index int, results *[]*Individual) {
            return func () {
                ...

                results[index] = &Individual{...}
            }
        }(i, &results))
    }

    err := group.Run()

    fmt.Println(""Done"")
    fmt.Println(fmt.Sprintf(""Results: %v"", results))
    fmt.Printf(""Error: %v"", err) // nil if it completed, err if timed out
}
