julia> immutable MyT
           A::String
           B::Int64
       end
       import Base: ==, hash
       ==(x::MyT, y::MyT) = x.A == y.A && x.B == y.B
       hash(x::MyT, h::UInt) = hash(x.A, hash(x.B, hash(0x7d6979235cb005d0, h)))

julia> a = Dict(MyT(""Tom"",191)=>1,MyT(""Bob"",20)=>1,MyT(""Jo"",315)=>1,MyT(""Luc"",493)=>1)
Dict{MyT,Int64} with 4 entries:
  MyT(""Jo"", 315)  => 1
  MyT(""Luc"", 493) => 1
  MyT(""Tom"", 191) => 1
  MyT(""Bob"", 20)  => 1

julia> haskey(a, MyT(""Tom"",191))
true

julia> in((MyT(""Tom"",191) => 1), a)
true
