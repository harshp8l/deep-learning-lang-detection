package main

import (
    "fmt"
    "strconv"
)

// generateOrdinalsMap generates map[ordinal]cardinal to stdout
// for the non-negative interval [min, max]
// as var name = map[string]string{}.
func generateOrdinalsMap(name string, min, max int) {
    fmt.Printf("\nvar " + name + " = map[string]string{ // map[ordinal]cardinal\n")
    for i := min; i >= 0 && i <= max; i++ {
        var o string
        switch i % 10 {
        case 1:
            o = "st"
        case 2:
            o = "nd"
        case 3:
            o = "rd"
        default:
            o = "th"
        }
        if 11 <= i && i <= 13 {
            o = "th"
        }
        c := strconv.Itoa(i)
        o = c + o
        fmt.Printf(`"%s": "%s", `, o, c)
        if (i)%5 == 0 || i == max {
            fmt.Printf("\n")
        }
    }
    fmt.Printf("}\n\n")
}

func main() {
    // Generate ordinal map for days.
    generateOrdinalsMap("dayOrdinals", 1, 31)
}
