#include <cstddef>
#include <functional>
#include <iostream>
#include <string>

using std::cout;
using std::endl;
using std::function;
using std::string;

struct Defer {
  function<void()> action;
  Defer(function<void()> doLater) : action{doLater} {}
  ~Defer() {
    action();
  }
};

void Subroutine(int i) {
  Defer defer1([]() { cout << "Phase 1 done." << endl; });
  if (i == 1) return;
  char const* p = new char[100];
  Defer defer2([p]() { delete[] p; cout << "Phase 2 done, and p deallocated." << endl; });
  if (i == 2) return;
  string s = "something";
  Defer defer3([&s]() { s = ""; cout << "Phase 3 done, and s set to empty string." << endl; });
}

int main() {
  cout << "Call Subroutine(1)." << endl;
  Subroutine(1);
  cout << "Call Subroutine(2)." << endl;
  Subroutine(2);
  cout << "Call Subroutine(3)." << endl;
  Subroutine(3);
  return EXIT_SUCCESS;
}
