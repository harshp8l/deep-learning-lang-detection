func main() {

    urls := []string{"http://rss.cnn.com/rss/edition.rss", "http://rss.time.com/web/time/rss/top/index.xml"}

    var c = make(chan []string)
    var wg sync.WaitGroup

    for _, url := range urls {
        wg.Add(1)
        go receiveRss(url, &wg, c)
    }
    for title := range c {
        fmt.Println(title)
    }
    wg.Wait()
    fmt.Println("==============DONE=================")
}

func receiveRss(url string, wg *sync.WaitGroup, c chan []string) {
    defer wg.Done()
    feed, err := rss.Fetch(url)
    if err != nil {
        fmt.Println("Failed to retrieve RSS feed", err)
    }

    items := feed.Items
    var titles []string
    for _, item := range items {
        titles = append(titles, item.Title)
    }
    c <- titles
    close(c)
}
