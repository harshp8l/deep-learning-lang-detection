package main

import (
    "fmt"
    "math/big"
)

func reverse(n *big.Int) *big.Int {
    var (
        m   = new(big.Int).Set(n)
        r   = big.NewInt(0)
        z   = big.NewInt(0)
        one = big.NewInt(1)
        ten = big.NewInt(10)
    )
    for {
        r.Mul(r, ten)
        d := z
        d.Mod(m, ten)
        r.Add(r, d)
        m.Div(m, ten)
        if m.Cmp(one) == -1 {
            return r
        }
    }
}

func radd(num *big.Int) *big.Int {
    newNum := new(big.Int).Set(num)
    rnum := reverse(num)
    newNum = newNum.Add(num, rnum)
    fmt.Println(num, "+", rnum, "=", newNum)
    return newNum
}

func lychrel(arg int) bool {
    fmt.Println("Now testing", arg)
    num := big.NewInt(int64(arg))
    for i := 0; i < 50; i++ {
        num = radd(num)
        fmt.Println(i, ":", num)
        if num.Cmp(reverse(num)) == 0 {
            return false
        }
    }
    return true
}

func main() {
    lychrel(196)
}
