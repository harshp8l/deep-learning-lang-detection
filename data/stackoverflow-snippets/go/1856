package main

import (
""fmt""

""log""

""v.io/x/lib/ibe""
)

var Macid = ""00055DNEFF""

func stringToBin(Macid string) (id string) {
for _, c := range Macid {
    id = fmt.Sprintf(""%s%b"", id, c)
}
return
}

func main() {
bb1Master, err := ibe.SetupBB1()

if err != nil {
    log.Fatal(err)
}

id := stringToBin(Macid)
privateKey, err := bb1Master.Extract(id)
if err != nil {
    log.Fatal(err)
}

fmt.Printf(""MacID is %v, private key is %v"", Macid, privateKey)

m := []byte(""HelloAuthentication"")
overhead := bb1Master.Params().CiphertextOverhead()
C := make([]byte, len(m)+overhead)

if err := bb1Master.Params().Encrypt(Macid, m, C); err != nil {
    log.Fatal(err)
}

fmt.Printf(""Ciphertext is : "", bb1Master.Params().Encrypt(Macid, m, C))

if err := privateKey.Decrypt(C, m); err != nil {
    log.Fatal(err)
}

fmt.Printf(""Decrypted text is : "", privateKey.Decrypt(C, m))


}
