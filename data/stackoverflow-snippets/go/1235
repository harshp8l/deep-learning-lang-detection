package main

import ""fmt""

const total = ""total""


func GetValue(i interface{}) int {
    value, ok := i.(int)
    if ok {
        return value
    }
    return i.(map[string]interface{})[total].(int)
}

func main() {
    score := map[string]interface{}{
        ""Canada"":  7,
        ""US"":      2,
        ""Germany"": 3,
        ""Korea"":   4,
    }
    groupCount := 0

    for len(score) > 2 {
        var (
            firstMin  = math.MaxInt32
            secondMin = math.MaxInt32
            firstKey  = """"
            secondKey = """"
        )
        for k, v := range score {
            iv := GetValue(v)
            if iv < firstMin {
                secondMin = firstMin
                secondKey = firstKey
                firstMin = iv
                firstKey = k
                continue
            }
            if iv < secondMin {
                secondMin = iv
                secondKey = k
                continue
            }

        }
        groupCount++

        score[fmt.Sprintf(""Group%d"", groupCount)] = map[string]interface{}{
            firstKey:  score[firstKey],
            secondKey: score[secondKey],
            total:     GetValue(score[firstKey])+ GetValue(score[secondKey]),
        }
        delete(score, firstKey)
        delete(score, secondKey)
    }
    fmt.Println(score)
}
