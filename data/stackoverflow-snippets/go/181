package main

import (
    ""errors""
    ""fmt""
)

func delegate(work func(ch chan error)) {
    ch := make(chan error)

    go work(ch)

    for {
        err, opened := <- ch
        if !opened {
            break
        }
        // Handle errors
        fmt.Println(err)
    }
}

func main() {
    // Example: error
    delegate(func(ch chan error) {
        defer close(ch)
        // Do some work
        fmt.Println(""Something went wrong."")
        ch <- errors.New(""Eyyyyy"")
    })

    // Example: success
    delegate(func(ch chan error) {
        defer close(ch)
        // Do some work
        fmt.Println(""Everything went fine."")
    })

    // Example: error
    delegate(func(ch chan error) {
        defer close(ch)
        // Do some work
        fmt.Println(""Something went wrong more than once."")
        ch <- errors.New(""Eyyyyy 1"")
        ch <- errors.New(""Eyyyyy 2"")
        ch <- errors.New(""Eyyyyy 3"")
    })
}
