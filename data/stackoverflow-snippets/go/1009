package main

import (
    ""github.com/jinzhu/gorm""
    _ ""github.com/jinzhu/gorm/dialects/mysql""
    ""time""
)


type NotificationType struct {
    gorm.Model

}

type Notification struct {
    gorm.Model
    Id                 int64     `json:""id""`
    Type               NotificationType
    Subject            string    `json:""confidence""`
    Body               string    `json:""body""`
    CreatedDate        time.Time `json:""created_dt""`
    CreatedBy          int64     `json:""created_by""`
    ParentNotification int64     `json:""parent_id""`
    IsExpired          bool      `json:""expired""`
}

func main() {
    //your handler code to receive and decode payload from client


    //save data to database
    db, err := gorm.Open(""mysql"", ""user:password@/dbname?charset=utf8&parseTime=True&loc=Local"")
    if err != nil {
        panic(""failed to connect database"")
    }
    defer db.Close()

    // Migrate the schema
    db.AutoMigrate(&Notification{})

    // Read
    var Notification notification
    db.First(&notification, 1) // find notification with id 1 , the id from your payload

    // Update the table from notification object
    db.Save(&notification)
}
