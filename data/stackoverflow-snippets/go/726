package main

import (
    ""fmt""
)

type Struct1 struct {
    id   int
    name string
}

type Struct2 struct {
    id       int
    lastname string
}

type Struct3 struct {
    id   int
    real bool
}

func main() {
    //var (
    //s1 []Struct1
    //      s2 []Struct2
    //  s3 []Struct3
    //  )
    s1Hash := make(map[int]Struct1)
    s2Hash := make(map[int]Struct2)
    s3Hash := make(map[int]Struct3)

    s11 := Struct1{id: 1, name: ""Eliot""}
    s12 := Struct1{id: 2, name: ""Tyrell""}
    s13 := Struct1{id: 3, name: ""Mr Robot""}
    s1Hash[s11.id] = s11
    s1Hash[s12.id] = s12
    s1Hash[s13.id] = s13

    s21 := Struct2{id: 1, lastname: ""Anderson""}
    s22 := Struct2{id: 2, lastname: ""Wellick""}
    s2Hash[s21.id] = s21
    s2Hash[s22.id] = s22

    s31 := Struct3{id: 1, real: true}
    s32 := Struct3{id: 2, real: true}
    s33 := Struct3{id: 3, real: false}
    s3Hash[s31.id] = s31
    s3Hash[s32.id] = s32
    s3Hash[s33.id] = s33

    //s1 = append(s1, Struct1{id: 1, name: ""Eliot""}, Struct1{id: 2, name: ""Tyrell""}, Struct1{id: 3, name: ""Mr Robot""})
    //s2 = append(s2, Struct2{id: 1, lastname: ""Anderson""}, Struct2{id: 2, lastname: ""Wellick""})
    //s3 = append(s3, Struct3{id: 1, real: true}, Struct3{id: 2, real: true}, Struct3{id: 3, real: false})

    //i to loop over possible id range
    for i := 1; i <= len(s1Hash); i++ {
        fmt.Println(""i is "", i)
        if _, ok := s1Hash[i]; ok {
            fmt.Printf(""Name: %s "", s1Hash[i].name)
        }

        if _, ok := s2Hash[i]; ok {
            fmt.Printf("" Lastname: %s "", s2Hash[i].lastname)
        }

        if _, ok := s3Hash[i]; ok {
            fmt.Printf("" Real: %t\n"", s3Hash[i].real)
        }
        //fmt.Printf(""%s %s real:%t\n"", s1Hash[i].name, s2[i].lastname, s3[i].real)
    }

}
