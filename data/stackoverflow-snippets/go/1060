func extractDynArray(form url.Values, key string) (result map[string]interface{}, err error) {
    result = make(map[string]interface{})
    reg, err := regexp.Compile(`^([a-z]+)\[([a-z]+)\]$`)
    if err != nil {
        log.Fatalf("Error compiling regexp: %v", err)
    }
    var matches [][]string
    for k, v := range form {
        matches = reg.FindAllStringSubmatch(k, -1)
        if len(matches) != 1 {
            continue
        }
        if key != "" && matches[0][1] != key {
            continue
        }
        if len(matches[0]) != 3 {
            continue
        }
        result[matches[0][2]] = v
    }
    return
}

func handler(w http.ResponseWriter, r *http.Request) {
    err := r.ParseForm()
    if err != nil {
        log.Fatalf("Cannot parse form %v", err)
    }
    //form := r.Form["myarray"]
    fmt.Printf("Form: %+v\n", r.Form)
    fmt.Printf("Form myarray: %+v \n", r.Form["myarray"])
    parsed, err := extractDynArray(r.Form, "myarray")
    fmt.Printf("Parsed: %v. Err: %v", parsed, err)
}
