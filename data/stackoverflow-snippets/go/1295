package main

import (
    ""fmt""
    ""sync""
)

type myStruct struct {
    mut *sync.RWMutex
}

type arrayOfMyStruct struct {
    structList []myStruct
}

func main() {
    k := &sync.RWMutex{}
    myStructInstance := myStruct{k}
    fmt.Printf(""%p\n"", &*k)

    var listStruct []myStruct
    listStruct = append(listStruct, myStructInstance)

    test := &arrayOfMyStruct{listStruct}
    test.access()
}

func (elem *arrayOfMyStruct) access() {
    k := elem.structList[0].mut
    p1 := &*k
    fmt.Printf(""%p\n"", p1)
    p2 := &*elem.structList[0].mut
    fmt.Printf(""%p\n"", p2)
}
