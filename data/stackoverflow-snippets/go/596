package embedded

import (
    ""fmt""
)

type Printer interface {
    Print()
}

type PrinterService struct{}

func (ps PrinterService) Print() { fmt.Println(""PrinterService"") }

type Service struct {
    Client SomeOtherService
}

func (s Service) PrintViaMethod() { s.Client.Print() }

type FakeService struct {
    Service
    Client Printer
}

type SomeOtherService struct{}

func (sos SomeOtherService) Print() { fmt.Println(""SomeOtherService"") }

func Call() {
    s := FakeService{Client: SomeOtherService{}}
    s.PrintViaMethod()
}
