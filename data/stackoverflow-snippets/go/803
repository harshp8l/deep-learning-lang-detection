package main

import (
    "fmt"
    "sync"
    "time"
)

type Count struct {
    mx    *sync.Mutex
    count int64
}

func NewCount() *Count {
    return &Count{mx: new(sync.Mutex), count: 0}
}

func (c *Count) Incr() {
    c.mx.Lock()
    c.count++
    c.mx.Unlock()
}

func (c *Count) Count() int64 {
    c.mx.Lock()
    count := c.count
    c.mx.Unlock()
    return count
}

var fncCount = NewCount()

func fnc() {
    fncCount.Incr()
}

func main() {
    for i := 0; i < 42; i++ {
        go fnc()
    }
    time.Sleep(time.Second)
    fmt.Println(fncCount.Count())
}
