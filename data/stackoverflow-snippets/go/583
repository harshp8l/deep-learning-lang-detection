package main

import (
"github.com/go-xorm/xorm"
_ "github.com/go-sql-driver/mysql"
xrc "github.com/go-xorm/xorm-redis-cache"

"encoding/gob"
"log"
)

type User struct {
    Id   int    `xorm:"pk"`
    Name string `xorm:"'name'"`
}

func main() {
    gob.Register(new(User))

    engine, err := xorm.NewEngine("mysql", "root:@/xorm_test2?charset=utf8")
    if nil != err {
        log.Fatal(err)
    }
    engine.Sync(new(User))
    engine.Insert(&User{Id: 1, Name: "user1"})

    engine.ShowSQL(true)
    cacher := xrc.NewRedisCacher("localhost:6379", "", xrc.DEFAULT_EXPIRATION, engine.Logger())
    engine.SetDefaultCacher(cacher)
    engine.MapCacher(&User{}, cacher)

    engine.Get(&User{Id: 1})
    engine.Get(&User{Id: 1})
}
