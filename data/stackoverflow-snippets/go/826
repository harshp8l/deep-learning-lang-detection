package main

import "fmt"

func main() {
  bs1 := []byte{0, 2, 255, 0}
  bs2 := []byte{0, 1, 0, 255}
  delta, err := byteDiff(bs1, bs2)
  if err != nil {
    panic(err)
  }
  fmt.Printf("OK: delta=%v\n", delta)
  // OK: delta=[0 1 255 -255]
}

func byteDiff(bs1, bs2 []byte) ([]int16, error) {
  // Ensure that we have two non-nil slices with the same length.
  if (bs1 == nil) || (bs2 == nil) {
    return nil, fmt.Errorf("expected a byte slice but got nil")
  }
  if len(bs1) != len(bs2) {
    return nil, fmt.Errorf("mismatched lengths, %d != %d", len(bs1), len(bs2))
  }

  // Populate and return the difference between the two.
  diff := make([]int16, len(bs1))
  for i := range bs1 {
    diff[i] = int16(bs1[i]) - int16(bs2[i])
  }
  return diff, nil
}
