package main

import (
    ""fmt""
    ""reflect""
)

func main() {
    stringStringMap := map[string]string{
        ""one"": ""first"",
        ""two"": ""second"",
    }

    fmt.Println(mapKeys(stringStringMap)) // [""one"", ""two""]

    stringIntMap := map[string]int{
        ""one"": 1,
        ""two"": 2,
    }

    fmt.Println(mapKeys(stringIntMap)) // [""one"", ""two""]
}

func mapKeys(m interface{}) []string {
    v := reflect.ValueOf(m)
    if v.Kind() != reflect.Map {
        panic(""m is not a map"")
    }
    if v.Type().Key().Kind() != reflect.String {
        panic(""m does not have a string key"")
    }
    keys := make([]string, 0, v.Len())
    for _, key := range v.MapKeys() {
        keys = append(keys, key.String())
    }
    return keys
}
