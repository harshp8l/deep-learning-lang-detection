a, b := make(chan int), make(chan int)
go func() { // goroutine one
    // At this point, any or none of the channels could be ready.
    select {
    case <-a:
        fmt.Println("read from a")
    case <-b:
        fmt.Println("read from b")
    }
    // At this point, we will have read one, and will block waiting for the other.
    select {
    case <-a:
        fmt.Println("read from a")
    case <-b:
        fmt.Println("read from b")
    }
    fmt.Println()
}()
go func() { // goroutine two
    a <- 1 // Does this execute first?
}()
go func() { // goroutine three
    b <- 2 // ...or does this?
}()
