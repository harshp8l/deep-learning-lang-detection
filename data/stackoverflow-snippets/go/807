import (
        "fmt"
        "syscall"
        "unsafe"
)

const (
        TCP_TABLE_BASIC_LISTENER = iota
        TCP_TABLE_BASIC_CONNECTIONS
        TCP_TABLE_BASIC_ALL
        TCP_TABLE_OWNER_PID_LISTENER
        TCP_TABLE_OWNER_PID_CONNECTIONS
        TCP_TABLE_OWNER_PID_ALL
        TCP_TABLE_OWNER_MODULE_LISTENER
        TCP_TABLE_OWNER_MODULE_CONNECTIONS
        TCP_TABLE_OWNER_MODULE_ALL
)

func main() {
        var table [2000]byte
        var length int = len(table)

        iphelp := syscall.NewLazyDLL("iphlpapi.dll")
        tcptable := iphelp.NewProc("GetExtendedTcpTable")

        length = len(table)

        res1, res2, err := tcptable.Call(
                uintptr(unsafe.Pointer(&table)),
                uintptr(unsafe.Pointer(&length)),
                1,
                syscall.AF_INET,
                TCP_TABLE_BASIC_LISTENER,
                0,
        )

        fmt.Println(res1, res2, length, err)
        fmt.Println(table)
}
