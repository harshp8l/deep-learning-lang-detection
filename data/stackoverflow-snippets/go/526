package main

import "fmt"

func main() {
    // Data struct containing an interface field.
    type Data struct {
        internal interface{}
    }

    // Assign a map to the field.
    type myMap map[string]interface{}
    data := Data{
        internal: make(myMap),
    }

    // Now, we want to access the field again, but as a map:
    // check that it matches the type we want.
    internalMap, ok := data.internal.(myMap)
    if !ok {
        panic("data.internal is not a map")
    }

    // Now what we have the correct type, we can treat it as a map.
    internalMap["CreatedFor"] = "dfasfasdf"
    internalMap["OwnedBy"] = "fasfsad"

    // Print the overall struct.
    fmt.Println(data)
}
