package main

import (
    ""encoding/json""
    ""fmt""
)

type Foo struct {
    Bar Bar   `json:""bar,omitempty""`
    A   *int  `json:""a,omitempty""` //Does not get omitted when a = 0
    B   *bool `json:""b,omitempty""` //Does not get omitted when b = false
}

type Bar struct {
    X *int  `json:""x,omitempty""` //Gets omitted when x = 0
    Y *bool `json:""y,omitempty""` //Gets omitted when y = false
}

func main() {
    var obj Foo
    a := 0 // a will not be not empty, it's set to 0
    obj.A = &a

    b, _ := json.MarshalIndent(obj, """", "" "")
    fmt.Println(string(b))

    var obj2 Foo
    // a and everything else will be empty, nothing is set

    b, _ = json.MarshalIndent(obj2, """", "" "")
    fmt.Println(string(b))
}
