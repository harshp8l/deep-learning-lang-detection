func asd() {
    fileOpenTimeout := time.After(5 * time.Second)

    type fileResponse struct {
        file *pe.File
        err error
    }

    response := make(chan fileResponse)
    done := make(chan struct{})

    go func(done <-chan struct{}) {
        f, e := pe.Open(filePath)
        r := fileResponse{
            file: f,
            err: e,
        }

        select {
        case response <- r:
            // do nothing, response sent
        case <-done:
            // clean up
            if f != nil {
                f.Close()
            }
        }
    }(done)

    select {
    case <-fileOpenTimeout:
        fmt.Printf("ERROR: Opening PE file timed out")
        close(done)
        return
    case r := <-response:
        if r.err != nil { ... }
    }
}
