package main

import (
    "io"
    "log"
    "os"
    "syscall"
    "time"
)

func main() {
    time.Sleep(time.Second)

    name := "lockfiletest.lock"
    file, err := os.OpenFile(name, syscall.O_CREAT|syscall.O_RDWR|syscall.O_CLOEXEC, 0666)
    if err != nil {
        log.Printf("error opening file: %s", err)
        return
    }
    defer file.Close()

    flockT := syscall.Flock_t{
        Type:   syscall.F_WRLCK,
        Whence: io.SeekStart,
        Start:  0,
        Len:    0,
    }
    err = syscall.FcntlFlock(file.Fd(), syscall.F_SETLK, &flockT)
    if err != nil {
        log.Printf("error locking file: %s", err)
        return
    }

    log.Println("lock2 accessed")

    time.Sleep(time.Second * 5)

    log.Println("func2 finished")

    time.Sleep(time.Second * 15)
}
