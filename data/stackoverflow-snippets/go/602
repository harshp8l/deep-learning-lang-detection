import (
    ""context""
    ""fmt""
    ""log""

    ""golang.org/x/oauth2/google""
    ""google.golang.org/api/compute/v1""
)

type GCE struct {
    *compute.Service
}

var ctx = context.Background()

func initGCE() *GCE {
    c, err := google.DefaultClient(ctx, compute.CloudPlatformScope)
    if err != nil {
        log.Fatal(err)
    }

    computeService, err := compute.New(c)
    if err != nil {
        log.Fatal(err)
    }
    return &GCE{computeService}
}

func (g *GCE) Instance(project, zone, instance string) {
    resp, err := g.Instances.Get(project, zone, instance).Context(ctx).Do()
    if err != nil {
        log.Fatal(err)
    }
    fmt.Printf(""%#v\n"", resp)
}
