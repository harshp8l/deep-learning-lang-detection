package main

import (
    ""context""
    ""log""

    cdp ""github.com/knq/chromedp""
)

func main() {
    var err error

    // create context
    ctxt, cancel := context.WithCancel(context.Background())
    defer cancel()

    // create chrome instance
    c, err := cdp.New(ctxt)
    if err != nil {
        log.Fatal(err)
    }

    // run task list
    var res, value, newValue string
    err = c.Run(ctxt, text(&res, &value, &newValue))
    if err != nil {
        log.Fatal(err)
    }

    // shutdown chrome
    err = c.Shutdown(ctxt)
    if err != nil {
        log.Fatal(err)
    }

    // wait for chrome to finish
    err = c.Wait()
    if err != nil {
        log.Fatal(err)
    }

    if len(value) > 1 {
        log.Println(""Search Input is present."")
    } else {
        log.Println(""Search Input is NOT present."")
    }

    log.Println(""New updated value: "", newValue);   

}

func text(res, value, newValue *string) cdp.Tasks {
    return cdp.Tasks{
        cdp.Navigate(`https://www.google.co.in`),
        cdp.WaitVisible(`lst-ib`, cdp.ByID),
        cdp.EvaluateAsDevTools(""document.getElementById('lst-ib').value"", value),
        cdp.EvaluateAsDevTools(""document.getElementById('lst-ib').value='Hello';document.getElementById('lst-ib').value"", newValue),
    }
}
