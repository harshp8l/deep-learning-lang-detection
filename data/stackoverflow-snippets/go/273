package main

import (
    "image"

    "github.com/llgcode/draw2d/draw2dimg"
    "github.com/llgcode/draw2d/draw2dsvg"
)

// Common algorithm that is implemented for various image formats.
type ImageAlgorithm interface {
    CreateImage(xSize, ySize int)
    CreateGraphicsContext()
    SaveImage(fileName string)
}

type RGBAAlgorithm struct {
    gc  *draw2dimg.GraphicContext
    img *image.RGBA
}

func (alg *RGBAAlgorithm) CreateImage(xSize, ySize int) {
    alg.img = image.NewRGBA(image.Rect(0, 0, xSize, ySize))
}

func (alg *RGBAAlgorithm) CreateGraphicsContext() {
    alg.gc = draw2dimg.NewGraphicContext(alg.img)
}

func (alg *RGBAAlgorithm) SaveImage(fileName string) {
    draw2dimg.SaveToPngFile(fileName, alg.img)
}

type SvgAlgorithm struct {
    gc  *draw2dsvg.GraphicContext
    img *draw2dsvg.Svg
}

func (alg *SvgAlgorithm) CreateImage(xSize, ySize int) {
    alg.img = draw2dsvg.NewSvg()
}

func (alg *SvgAlgorithm) CreateGraphicsContext() {
    alg.gc = draw2dsvg.NewGraphicContext(alg.img)
}

func (alg *SvgAlgorithm) SaveImage(fileName string) {
    draw2dsvg.SaveToSvgFile(fileName, alg.img)
}

func runAlgorithm(alg ImageAlgorithm) {
    // input
    alg.CreateImage(100, 100)
    alg.CreateGraphicsContext()

    // output
    alg.SaveImage("out")
}

func main() {
    runAlgorithm(&RGBAAlgorithm{})
    runAlgorithm(&SvgAlgorithm{})
}
