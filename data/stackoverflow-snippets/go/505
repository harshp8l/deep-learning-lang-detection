package main

import (
    "github.com/PuerkitoBio/goquery"
    "strings"
)

func main() {
    xml := `
      <?xml version="1.0"?>
      <Data>
          <f1 value="field value"></f1>
          <f2 value="other value"></f2>
          <f3 value="field value 2"></f3>
          <withchildren>
              <f31 value="testvalue"></f31>
              <f32 value="test value 3"></f32>
          </withchildren>
      </Data>
      `
    data := make(map[string]interface{})
    reader := strings.NewReader(xml)

    doc, _ := goquery.NewDocumentFromReader(reader)
    children := doc.Find("Data").Children()
    data = getElements(children)
}

func getElements(children *goquery.Selection) map[string]interface{} {
    data := make(map[string]interface{})
    children.Each(func(i int, s *goquery.Selection) {
        val, exists := s.Attr("value")
        if exists {
            data[goquery.NodeName(s)] = val
        }

        if s.Children().Length() > 0 {
            data[goquery.NodeName(s)] = getElements(s.Children())
        }
    })
    return data
}
