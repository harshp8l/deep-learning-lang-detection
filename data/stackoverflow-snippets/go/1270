// cgo.h in dll  
typedef void (*Callback)(int kind,void* arg);
void SetCallback(Callback func);

// cgo.c in dll
Callback Gfunc;
void SetCallback(Callback func){
    Gfunc=func;
}

// cgocb.h in go project
void InitCallback();
extern void goCallbackFunction(int kind,void* arg);

// cgocb.c in go project
void InitCallback(){
    SetCallback(goCallbackFunction);
}

// cgocb.go in go project
// export goCallbackFunction
func goCallbackFunction(kind C.int,arg unsafe.Pointer){
    switch kind{
    case C.AKind:
        arg:=(*C.AKind)(arg)
        AkindCallback(arg)
    }
}
