type Document struct {
  Props here....
  Nested []NestedDocument
}

type NestedDocument struct {
  Kind string
  Payload bson.Raw
}

// Document provides 
func (d NestedDocument) Document() (CustomInterface, error) {
   switch d.Kind {
     case "TypeA":
       // Here I am safely assuming that TypeA implements CustomInterface
       result := &TypeA{}
       err := d.Payload.Unmarshal(result)
       if err != nil {
          return nil, err
       }
       return result, nil
       // ... other cases and default
   }
}
