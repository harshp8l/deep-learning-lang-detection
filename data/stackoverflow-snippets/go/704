package main

import (
    ""io""
    ""net/http""
    ""os""
    ""time""
)

func main() {
    server8001 := http.NewServeMux()
    server8001.HandleFunc(""/foo"", foo8001)
    server8001.HandleFunc(""/bar"", bar8001)

    unblock(func() error {
        return http.ListenAndServe("":8001"", server8001)
    })//forgot err check, must be done!

    res, err := http.Get(""http://0.0.0.0:8001/foo"")
    if err != nil {
        panic(err)
    }
    defer res.Body.Close()
    io.Copy(os.Stdout, res.Body)
    os.Exit(0)
}

func unblock(h func() error) error {
    w := make(chan error)
    go func() {
        w <- h()
    }()
    select {
    case err := <-w:
        return err
    case <-time.After(time.Millisecond * 50):
        return nil
    }
}

func foo8001(w http.ResponseWriter, r *http.Request) {
    w.Write([]byte(""Listening on 8001: foo ""))
}

func bar8001(w http.ResponseWriter, r *http.Request) {
    w.Write([]byte(""Listening on 8001: bar ""))
}
