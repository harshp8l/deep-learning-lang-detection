package main

import (
    ""fmt""
    ""reflect""
)

type functions struct {}

func (f functions) Hello(name string) (string, error) {
    fmt.Println(""Hello,"", name)
    return name, nil
}

func main() {
    var f functions
    m := reflect.ValueOf(f).MethodByName(""Hello"")
    if m.IsValid() {
        // Either call f.Hello() here, or use the returned Value like so:
        v := make([]reflect.Value, 1) // function Values only take Value slices as arguments
        v[0] = reflect.ValueOf(""Asha"")
        r := m.Call(v)
        fmt.Println(""Returned"", r)
    }
}
