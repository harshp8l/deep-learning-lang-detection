package main

import (
    "fmt"
    "encoding/xml"
)

type Envelope struct {
    XMLName xml.Name
    Header  Header
}

type Header struct {
    XMLName  xml.Name `xml:"Header"`
    Security Security `xml:"Security"`
}

type Security struct {
    XMLName        xml.Name `xml:"Security"`
    MustUnderstand string `xml:"mustUnderstand,attr"`
    WSSE           string `xml:"wsse,attr"`
    SOAP           string `xml:"soap,attr"`
    UsernameToken struct {
        XMLName  xml.Name `xml:"UsernameToken"`
        Username string `xml:"Username"`
        Password string `xml:"Password"`
    }
}

func main() {

    Soap := []byte(`<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">

  <SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
    <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <wsse:UsernameToken>
        <wsse:Username>USERNAME</wsse:Username>
        <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">SECRET</wsse:Password>
      </wsse:UsernameToken>
    </wsse:Security>
  </SOAP-ENV:Header>

  <SOAP-ENV:Body xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
    <OTA_HotelAvailNotifRQ xmlns="http://www.opentravel.org/OTA/2003/05" EchoToken="abc123" Version="1.0" TimeStamp="2005-08-01T09:30:47+08:00">
      <AvailStatusMessages HotelCode="HOTEL">
        <AvailStatusMessage BookingLimit="10">
          <StatusApplicationControl Start="2010-01-01" End="2010-01-14" InvTypeCode="A1K" RatePlanCode="GLD"/>
        </AvailStatusMessage>
      </AvailStatusMessages>
    </OTA_HotelAvailNotifRQ>
  </SOAP-ENV:Body>

</SOAP-ENV:Envelope>`)

    res := &Envelope{}
    err := xml.Unmarshal(Soap, res)

    fmt.Println(res.Header.Security.UsernameToken.Username, err)
}
