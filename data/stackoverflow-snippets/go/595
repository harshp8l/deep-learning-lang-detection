type MyStruct struct {
    // ...
    mc *multiCloser
}

func (ms *MyStruct) Close() {
    ms.mc.Close()
}

func CreateMyStructWithR1R2R3() (ms *MyStruct, err error) {
    ms = &MyStruct{mc: &multiCloser{}}
    defer func() {
        if err != nil {
            ms.Close()
        }
    }()

    if ms.r1, err = OpenResource(); err != nil {
        return nil, err
    }
    ms.mc.add(ms.r1)

    if ms.r2, err = OpenResource(); err != nil {
        return nil, err
    }
    ms.mc.add(ms.r2)

    if ms.r3, err = OpenResource(); err != nil {
        return nil, err
    }
    ms.mc.add(ms.r3)

    return ms, nil
}
