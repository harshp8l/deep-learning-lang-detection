package main

import "fmt"

type Predator interface {
    eatingVictim(victim Animal)
}

type Herbivore interface {
    eatingGrass()
}

type Animal interface {
    GetName() string
    SetAlive(bool)
}

type Cat struct {
    name   string
    hungry bool
    alive  bool
}

type Mouse struct {
    name   string
    hungry bool
    alive  bool
}

func (herbivore *Mouse) eatingGrass() {
    fmt.Println(herbivore.name + "'s eating a grass.. ^___^")
    herbivore.hungry = false
}

func (m *Mouse) GetName() string {
    return m.name
}

func (m *Mouse) SetAlive(alive bool) {
    m.alive = alive
}

func (predator *Cat) eatingVictim(victim Animal) {
    fmt.Println(predator.name + "'s eating victim " + victim.GetName())
    predator.hungry = false
    victim.SetAlive(false)
}

func main() {
    cat := Cat{"cat", true, true}
    mouse := Mouse{"mouse", true, true}

    fmt.Println(cat)
    fmt.Println(mouse)

    mouse.eatingGrass()
    cat.eatingVictim(&mouse)

    fmt.Println(cat)
    fmt.Println(mouse)
}
