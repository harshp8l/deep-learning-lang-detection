type Page struct {
    title string
    url   string
}

func main() {
    m := make(map[int]Page)
    m[1] = Page{""hi"", ""there""}
    iface := makeIface(m)

    // use type assertion to cast it back to a map
    if mapAgain, ok := iface.(map[int]Page); ok {
        // it really is a map[int]Page
        fmt.Printf(""%+v\n"", mapAgain)
    } else {
        // its not actually a map[int]Page
        fmt.Println(""oops"")
    }

    // alternatively use a type-switch if it could be multiple types
    switch v := iface.(type) {
        case map[int]Page:
            //yay
            fmt.Printf(""%+v\n"", v)
        case string:
            // its a string
            fmt.Println(v)
        default:
            // something we didn't account for

    }

}

func makeIface(m map[int]Page) interface{} {
    return m
}
