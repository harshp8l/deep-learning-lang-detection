func encrypt3(plaintext []byte, key []byte) ([]byte, error) {

    c, err := aes.NewCipher(key)
    if err != nil {
        return nil, fmt.Errorf("encrypt: invalid key :%s", err)
    }

    gcm, err := cipher.NewGCM(c)
    if err != nil {
        return nil, fmt.Errorf("encrypt: error creating cipher :%s", err)
    }

    nonce := make([]byte, gcm.NonceSize())
    _, err = io.ReadFull(rand.Reader, nonce)
    if err != nil {
        return nil, fmt.Errorf("encrypt: error creating nonce :%s", err)
    }

    return gcm.Seal(nonce, nonce, plaintext, nil), nil
}
