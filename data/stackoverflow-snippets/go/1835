package main

import (
    ""errors""
    ""fmt""
    ""strings""
)

var ins = []string{
    `id=1, name=peter, age=24`,
    `id=2, age=30`,
    `name=mary, age=31`,
    `id=100`,
    `name=bob`,
    `age=11`,
}

var ParseError = errors.New(""bad parser input"")

type Test struct {
    ID   string
    Name string
    Age  string
}

func (t *Test) String() string {
    return fmt.Sprintf(""ID: %s, Name: %s, Age: %s"", t.ID, t.Name, t.Age)
}

func main() {
    for _, v := range ins {
        t, err := ParseLine(v)
        if err != nil {
            fmt.Println(err)
        } else {
            fmt.Println(t)
        }
    }
}

func ParseLine(inp string) (*Test, error) {
    splt := strings.Split(inp, "","")
    test := &Test{}
    for _, f := range splt {
        fieldVal := strings.Split(strings.TrimSpace(f), ""="")
        switch strings.TrimSpace(fieldVal[0]) {
        case ""id"":
            test.ID = strings.TrimSpace(fieldVal[1])
        case ""name"":
            test.Name = strings.TrimSpace(fieldVal[1])
        case ""age"":
            test.Age = strings.TrimSpace(fieldVal[1])
        default:
            return nil, ParseError
        }
    }
    return test, nil
}
