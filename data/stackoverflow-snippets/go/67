package main

import (
    "fmt"
    "encoding/json"
)

type SomeDocument struct {
    DocumentID   [10]byte `json:"docid"`
    CreatorID    string `json:"uid"`
    DocHolder    string `json:"doc_holder"`
    Location     string `json:"location"`
    DocumentType string `json:"doc_type"`
    Content      string `json:"doc_content"`
}

func (s *SomeDocument) SetDocumentID(id string) {
    copy(s.DocumentID[:], []byte(id))
}

func (s SomeDocument) MarshalJSON() ([]byte, error) {
    tmp := struct {
    DocumentID   string `json:"docid"`
    CreatorID    string `json:"uid"`
    DocHolder    string `json:"doc_holder"`
    Location     string `json:"location"`
    DocumentType string `json:"doc_type"`
    Content      string `json:"doc_content"`
    }{
    string(s.DocumentID[:]),
    s.CreatorID,
    s.DocHolder,
    s.Location,
    s.DocumentType,
    s.Content,
    }
    return json.Marshal(tmp)
}

func main() {
    s := SomeDocument{}
    s.SetDocumentID("1234567890abcd")
    js, err := json.Marshal(s)
    if err != nil {
        panic(err)
    }
    fmt.Println(string(js))
    // {"docid":"1234567890","uid":"","doc_holder":"","location":"","doc_type":"","doc_content":""}

}
