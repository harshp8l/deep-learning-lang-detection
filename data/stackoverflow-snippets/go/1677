func handlerNoTimeout(w http.ResponseWriter, r *http.Request) {
    //This handler takes 1 second to finished, won't timeout
    time.Sleep(1 * time.Second)
    w.Write([]byte(""Handler OK""))
}

func handlerTimeout(w http.ResponseWriter, r *http.Request) {
    //This handler takes 4 seconds to finished.
    //Before finished, it will timeout, 
    //503 response will be sent to client + given message (i.e. Timeout!)
    time.Sleep(4 * time.Second)
    w.Write([]byte(""Handler timeout (never executed)""))
}

func main() {

    mux := http.NewServeMux()
    rh := http.RedirectHandler(""http://10.130.0.10:820/login"", 307)
    mux.Handle(""/"", rh)
    mux.HandleFunc(""/timeout"", handlerTimeout)
    mux.HandleFunc(""/notimeout"", handlerNoTimeout)
    tmux := http.TimeoutHandler(mux, time.Second*3, ""Timeout!"")
    go http.ListenAndServe("":818"", tmux)
    go http.ListenAndServeTLS("":821"", ""server.pem"", ""server.key"", tmux)
    var input string
    fmt.Scanln(&input)
    fmt.Println(""done"")
}
