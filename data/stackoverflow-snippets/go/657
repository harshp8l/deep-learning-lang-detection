type Movie struct {
    Title          string
    ReleaseYear    int
    Rating         string
    RuntimeMinutes int
    Description    string
}

var movieregexp = regexp.MustCompile(`` +
    `<h5><a.*?>\s*(.*?)\s*</a>\s*\((\d{4})\)</h5>` + // Title and release year
    `[\s\S]*?Rating: (.*?)<` +
    `[\s\S]*?Running Time \(minutes\): (\d{1,3})` +
    `[\s\S]*?Description: ([\s\S]*?)<`)

// Returns a slice of movies parsed from the given string, possibly empty.
func ParseMovies(s string) []Movie {
    movies := []Movie{}
    groups := movieregexp.FindAllStringSubmatch(s, -1)

    if groups != nil {
        for _, group := range groups {
            // We know these integers parse correctly because of the regex.
            year, _ := strconv.Atoi(group[2])
            runtime, _ := strconv.Atoi(group[4])
            // Append the new movie to the list.
            movies = append(movies, Movie{
                Title:          group[1],
                ReleaseYear:    year,
                Rating:         group[3],
                RuntimeMinutes: runtime,
                Description:    group[5],
            })
        }
    }

    return movies
}
