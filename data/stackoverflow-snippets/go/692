package main

import (
    ""encoding/json""
    ""fmt""
)

var RAW = []byte(`
{
  ""eventId"":""fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e4"",
  ""eventType"":""event-type"",
  ""eventNumber"":0,
  ""data"":""{\n  \""a\"": \""1\""\n}"",
  ""metaData"":""{\n  \""yes\"": \""no\""\n}"",
  ""streamId"":""test"",
  ""isJson"":true,
  ""isMetaData"":true,
  ""isLinkMetaData"":false,
  ""positionEventNumber"":0,
  ""positionStreamId"":""test"",
  ""title"":""0@test"",
  ""id"":""http://localhost:2113/streams/test/0"",
  ""updated"":""2017-12-14T05:09:58.816079Z""
}
`)

type Event struct {
    Data     json.RawMessage `json:""data""`
    Metadata json.RawMessage `json:""metaData""`
}

func main() {
    var e Event
    err := json.Unmarshal(RAW, &e)
    fmt.Printf(""%v -- %+v\n"", err, e)
    b, err := json.Marshal(e)
    fmt.Printf(""%v -- %s\n"", err, b)
}
