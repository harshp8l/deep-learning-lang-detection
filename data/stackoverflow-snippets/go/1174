package main

import (
    ""log""
    ""sync""
)

type worker struct {
    jobs chan int
    wg   *sync.WaitGroup
}

func main() {
    w := worker{
        jobs: make(chan int, 5), // I only want to work on 5 jobs at any given time
        wg:   new(sync.WaitGroup),
    }

    for i := 0; i < 3; i++ {
        w.wg.Add(1)
        go func(i int) {
            defer w.wg.Done()
            w.jobs <- i
        }(i)

    }

    // wait in the background so that i can move to line 34 and start consuming my job queue
    go func() {
        w.wg.Wait()
        close(w.jobs)
    }()

    for job := range w.jobs {
        log.Println(""Got job, I should do something with it"", job)
    }

}
