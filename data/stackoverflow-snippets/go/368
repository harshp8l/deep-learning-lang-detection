func PKIStringify(v interface{}) (res string) {
    rv := reflect.ValueOf(v)
    num := rv.NumField()
    for i := 0; i < num; i++ {
        fv := rv.Field(i)
        st := rv.Type().Field(i)
        fmt.Println(fv.Kind())
        res += st.Name + "="
        switch fv.Kind() {
        case reflect.String:
            res += fv.String()
        case reflect.Int:
            res += fmt.Sprint(fv.Int())
        case reflect.Struct:
            res += PKIStringify(fv.Interface())
        }
        if i != num-1 {
            res += ","
        }
    }

    return "[" + res + "]"
}
