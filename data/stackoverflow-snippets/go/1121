type ByName []WeightBaseResourceInfo

func (a ByName) Len() int           { return len(a) }
func (a ByName) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }
func (a ByName) Less(i, j int) bool { return a[i].ResourceId < a[j].ResourceId }



func main() {

    resourceWeightInfo := make([]WeightBaseResourceInfo, 3)
    start := make([]WeightBaseResourceInfo, 3)
    var tempWeightInfo WeightBaseResourceInfo
    tempWeightInfo.ResourceId = "zaa"
    tempWeightInfo.Weight = 2
    resourceWeightInfo[0] = tempWeightInfo
    tempWeightInfo.ResourceId = "aab"
    tempWeightInfo.Weight = 5
    resourceWeightInfo[1] = tempWeightInfo
    tempWeightInfo.ResourceId = "xac"
    tempWeightInfo.Weight = 1
    resourceWeightInfo[2] = tempWeightInfo

    copy(start,resourceWeightInfo)

    fmt.Println("start", start)

    sort.Sort(ByNumericValue(resourceWeightInfo))

    if(reflect.DeepEqual(start,resourceWeightInfo)){
        sort.Sort(ByName(resourceWeightInfo))
    }
    fmt.Println("Sorted", resourceWeightInfo)

}
