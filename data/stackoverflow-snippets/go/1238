package main

import (
    "flag"
    "net/http"
    "os"
    "path/filepath"
    "sync"
)

func main() {
    dir := flag.String("dir", ".", "directory of files to serve")
    flag.Parse()

    f, err := os.Open(*dir)
    if err != nil {
        panic(err)
    }
    files, err := f.Readdir(0)
    if err != nil {
        panic(err)
    }

    filenames := make([]string, 0, len(files))
    for _, file := range files {
        if !file.IsDir() {
            filenames = append(filenames, file.Name())
        }
    }

    var (
        idxLock sync.Mutex
        idx     int
    )

    http.HandleFunc("/rotate", func(w http.ResponseWriter, r *http.Request) {
        if len(filenames) == 0 {
            http.NotFound(w, r)
            return
        }

        idxLock.Lock()
        i := idx
        idx++
        if idx >= len(filenames) {
            idx = 0
        }
        idxLock.Unlock()

        http.ServeFile(w, r, filepath.Join(*dir, filenames[i]))
    })

    if err := http.ListenAndServe(":3000", nil); err != nil {
        panic(err)
    }
}
