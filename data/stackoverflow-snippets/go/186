// User input from command line
reader := bufio.NewReader(os.Stdin)
fmt.Print(""Enter regexp: "")
userRegexp, err := reader.ReadString('\n')
if err != nil {
    log.Fatal(err)
}
userRegexp = userRegexp[:len(userRegexp)-1]
re, err := regexp.Compile(userRegexp)
if err != nil {
    log.Fatal(err)
}

// List all .html files in static dir
files, err := filepath.Glob(""static/*.html"")
if err != nil {
    log.Fatal(err)
}

// Empty array of int64's to be returned with matching results
var lineIdArr []int64

for _, file := range files {
    htmlFile, _ := os.Open(file)
    fscanner := bufio.NewScanner(htmlFile)
    // Loop over each line
    for fscanner.Scan() {
        line := fscanner.Bytes()
        if !re.Match(line) {
            continue
        }
        lineIdStr := line[:bytes.IndexByte(line, ':')]
        lineIdInt, err := strconv.ParseInt(string(lineIdStr), 10, 64)
        if err != nil {
            log.Fatal(err)
        }
        lineIdArr = append(lineIdArr, lineIdInt)
    }
}
fmt.Println(""Return array: "", lineIdArr)
fmt.Println(""Using regular expression: "", userRegexp)
