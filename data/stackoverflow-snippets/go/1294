package main

import (
    ""fmt""
    ""runtime""
    ""sync""
)

var wg sync.WaitGroup

func init() {
    fmt.Println(""!!!!!!!!!!!!!!!!!!!!!!!!!!!!"", runtime.NumCPU())

}
func main() {
    fmt.Println("" Welcome to concurrency"")
    wg.Add(2)
    go one()
    go two()
    fmt.Println(""Waiting To Finish"")
    wg.Wait()
    fmt.Println(""\nTerminating Program"")

}

func one() {
    for i := 0; i < 200; i++ {
        fmt.Println(""one"", i)
    }
    defer wg.Done()
}

func two() {
    for i := 0; i < 200; i++ {
        fmt.Println(""Two:"", i)
    }
    defer wg.Done()
}
