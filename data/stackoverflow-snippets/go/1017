func initWatch() chan bool {
    watcher, err := fsnotify.NewWatcher()
    if err != nil {
        fmt.Println(err)
    }
    defer watcher.Close()

    done := make(chan bool)
    go func() {
        for {
            select {
                case event := <-watcher.Events:
                    if ( event.Op&fsnotify.Remove == fsnotify.Remove || event.Op&fsnotify.Rename == fsnotify.Rename ) {
                        fmt.Println(""file removed - "", event.Name)
                    }

                case err := <-watcher.Errors:
                    fmt.Println(""error:"", err)

                // listen exit signal
                case <- done:
                     break
            }
        }
    }()




    err = watcher.Add(""sampledata.txt"")
    if err != nil {
        fmt.Println(err)
    }
    return done
}
