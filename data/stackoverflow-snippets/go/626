package main

import (
  ""fmt""
  ""strings""
)

type Capability int

const (
  // Light can be measured in the form of luminosity
  Light Capability = 1 << iota
  Mass
  ElectricalCurrent
  Energy
)

func (c Capability) String() string {
  var caps []string
  if c&Light > 0 {
    caps = append(caps, ""Light"")
  }
  if c&Mass > 0 {
    caps = append(caps, ""Mass"")
  }
  if c&ElectricalCurrent > 0 {
    caps = append(caps, ""ElectricalCurrent"")
  }
  if c&Energy > 0 {
    caps = append(caps, ""Energy"")
  }
  return strings.Join(caps, ""|"")
}

type PhysicalDevice struct {
  Owner       string
  ID          string
  Description string
  Capability  Capability
}

func (pd PhysicalDevice) String() string {
  return ""Owner: "" + pd.Owner + ""\n"" +
    ""ID: "" + pd.ID + ""\n"" +
    ""Description: "" + pd.Description + ""\n"" +
    ""Capability: "" + pd.Capability.String() + ""\n""
}

func main() {
  dev := PhysicalDevice{
    Owner:       ""Albert Einstein"",
    ID:          ""E=mc^2"",
    Description: ""My well-known formula as a device"",
    Capability:  Energy | Mass | Light,
  }
  fmt.Println(dev)
}
