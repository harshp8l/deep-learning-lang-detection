package main

import (
  ""encoding/json""
  ""fmt""
  ""log""
)

type Response struct {
  Err  int             `json:""err""`
  Data json.RawMessage `json:""data""`
}

type Foo struct {
  FooField string `json:""foofield""`
}

type Bar struct {
  BarField string `json:""barfield""`
}

func main() {
  fooRespJSON := []byte(`{""data"":{""foofield"":""foo value""}}`)
  barRespJSON := []byte(`{""data"":{""barfield"":""bar value""}}`)

  var (
    resp Response
    foo  Foo
    bar  Bar
  )

  // Foo
  if err := json.Unmarshal(fooRespJSON, &resp); err != nil {
    log.Fatal(err)
  }
  if err := json.Unmarshal(resp.Data, &foo); err != nil {
    log.Fatal(err)
  }
  fmt.Println(""foo:"", foo)

  // Bar
  if err := json.Unmarshal(barRespJSON, &resp); err != nil {
    log.Fatal(err)
  }
  if err := json.Unmarshal(resp.Data, &bar); err != nil {
    log.Fatal(err)
  }
  fmt.Println(""bar:"", bar)
}
