package main

import (
  "fmt"
  "net"
  "net/url"
)

func main() {
    // Your url with hash
    s := "http://localhost:8080/#access_token=tokenhere&scope=scopeshere"
    // Parse the URL and ensure there are no errors.
    u, err := url.Parse(s)
    if err != nil {
        panic(err)
    }

    // ---> here is where you will get the url hash #
    fmt.Println(u.Fragment)
    fragments, _ := url.ParseQuery(u.Fragment)
    fmt.Println("Fragments:", fragments)
    if fragments["access_token"] != nil {
      fmt.Println("Access token:", fragments["access_token"][0])
    } else {
      fmt.Println("Access token not found")
    }


    // ---> Others data get from URL:
     fmt.Println("\n\nOther data:\n")
    // Accessing the scheme is straightforward.
    fmt.Println("Scheme:", u.Scheme)
    // The `Host` contains both the hostname and the port,
    // if present. Use `SplitHostPort` to extract them.
    fmt.Println("Host:", u.Host)
    host, port, _ := net.SplitHostPort(u.Host)
    fmt.Println("Host without port:", host)
    fmt.Println("Port:",port)
    // To get query params in a string of `k=v` format,
    // use `RawQuery`. You can also parse query params
    // into a map. The parsed query param maps are from
    // strings to slices of strings, so index into `[0]`
    // if you only want the first value.
    fmt.Println("Raw query:", u.RawQuery)
    m, _ := url.ParseQuery(u.RawQuery)
    fmt.Println(m)
}

// part of this code was get from: https://gobyexample.com/url-parsing
