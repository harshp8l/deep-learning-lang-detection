package main

import (
    ""fmt""
    ""math/rand""
    ""time""
)

// run x tasks at random intervals
// - a task is a goroutine that runs for 2 seconds.
// - a task runs concurrently to other task
// - the interval between task is between 0 and 2 seconds

func main() {
    //Channel to indicate completion of a task, can be helpful in sending a result value also
    results := make(chan int)
    // set x to the number of tasks
    x := 4
    t := 0 //task tracker
    // random numbers generation initialization
    random := rand.New(rand.NewSource(1234))

    for num := 0; num < x; num++ {
        // sleep for a random amount of milliseconds             before starting a new task
        duration := time.Millisecond * time.Duration(random.Intn(2000))
        time.Sleep(duration)
        //

        // run a task
        go func() {
            // this is the work, expressed by sleeping for 2 seconds
            time.Sleep(2 * time.Second)
            fmt.Println(""task done"")
            results <- 1 //may be something possibly relevant to the task

        }()
    }
    //Iterate over the channel till the number of tasks
    for result := range results {
        fmt.Println(""Got result"", result)
        t++
        if t == x {
            close(results)
        }
    }
    fmt.Println(""All tasks done"")
}
