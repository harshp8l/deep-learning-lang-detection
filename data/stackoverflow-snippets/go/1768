type identifiable interface {
    GetID() string
}

type identifiables interface {
    GetIDs() []string
}

func (m Movie) GetID() string { return m.ID }

type movies []Movie
type moviesByCountry map[string]movies

func (m movies) GetIDs() (ret []string) {
    for _, movie := range m {
        ret = append(ret, movie.GetID())
    }
    return
}

func (m moviesByCountry) GetIDs() (ret []string) {
    for _, slice := range m {
        ret = append(ret, slice.GetIDs()...)
    }
    return
}

func (d Data) GetCountryIDs(country string) []string {
    return gatherIDs(d.TVShows[country], d.Movies[country])
}

func gatherIDs(collections ...identifiables) (ret []string) {
    for _, collection := range collections {
        ret = append(ret, collection.GetIDs()...)
    }
    return
}
