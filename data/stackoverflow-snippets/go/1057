package main

import (
    "log"
    "strconv"
    "net/http"
    "strings"
)

func AddProduct(w http.ResponseWriter, r *http.Request) {
    c := strings.Split(strings.Trim(r.URL.Path, "/"), "/")
    switch {
    case len(c) == 2:
        // GET product/{id}
        if r.Method != "GET" && r.Method != "HEAD" {
            http.Error(w, http.StatusText(http.StatusMethodNotAllowed), http.StatusMethodNotAllowed)
            return
        }
        id, err := strconv.Atoi(c[1])
        if err != nil {
            break
        }
        // implementation
        return

    case len(c) == 3 && c[2] == "item":
        // POST product/{id}/item
        if r.Method != "POST" {
            http.Error(w, http.StatusText(http.StatusMethodNotAllowed), http.StatusMethodNotAllowed)
            return
        }
        id, err := strconv.Atoi(c[1])
        if err != nil {
            break
        }
        // implementation
        return

    case len(c) == 4 && c[2] == "item":
        // GET product/{id}/item/{itemID}
        if r.Method != "GET" && r.Method != "HEAD" {
            http.Error(w, http.StatusText(http.StatusMethodNotAllowed), http.StatusMethodNotAllowed)
            return
        }
        id, err := strconv.Atoi(c[1])
        if err != nil {
            break
        }

        itemID, err := strconv.Atoi(c[3])
        if err != nil {
            break
        }
        // implementation
        return
    }
    http.Error(w, http.StatusText(http.StatusNotFound), http.StatusNotFound)
}

func main() {
    http.HandleFunc("/product/", AddProduct)
    log.Fatal(http.ListenAndServe(":8080", nil))
}
