package main

import (
    "bytes"
    "encoding/json"
    "fmt"
    "html/template"
)

var templates = map[string]*template.Template{
    "A": template.Must(template.New("A").Parse("{{ .A }}")),
    "B": template.Must(template.New("B").Parse("{{ .B }} and {{ .C.D }}")),
}

type tmplReceiver struct {
    TmplName string
    TmplArgs string
}

func main() {
    receivers := []tmplReceiver{
        tmplReceiver{"A", `{"A": "Value for A"}`},
        tmplReceiver{"B", `{"B": "Value for B", "C": { "D": "Value for D" }}`},
    }

    for _, receiver := range receivers {
        var data interface{}
        json.Unmarshal([]byte(receiver.TmplArgs), &data)

        var buffer bytes.Buffer
        templates[receiver.TmplName].Execute(&buffer, data)
        fmt.Println(buffer.String())
    }
}
