// pkg sender
type Sender interface {
    Send(m Message) error // or whatever it needs to be
}

type Message struct {
    // Whatever goes in a message
}

type Dispatcher struct {
    TwitchClient Sender
    DiscordClient Sender
    WebClient Sender
}

// pkg main
func setup() {
    d := sender.Dispatcher{
        TwitchClient: twitch.New(),
        DiscordClient: discord.New(),
        WebClient: web.New(),
    }
    d.TwitchClient.Dispatcher = d
    d.DiscordClient.Dispatcher = d
    d.WebClient.Dispatcher = d
}

// pkg twitch
type TwitchClient struct {
    Dispatcher sender.Dispatcher
    // other fields ...
}

func New() *TwitchClient {
    return new(TwitchClient) // or whatever
}

func (t *TwitchClient) Send(m sender.Message) error {
    // send twitch message...

    // Need to send a Discord message?
    t.Dispatcher.DiscordClient.Send(m)
}
