pool := x509.NewCertPool()
caStr, err := ioutil.ReadFile(serverCAFile)
if err != nil {
    return nil, fmt.Errorf(""read server ca file fail"")
}
block, _ := pem.Decode(caStr)
if block == nil {
    return nil, fmt.Errorf(""Decode ca file fail"")
}
if block.Type != ""CERTIFICATE"" || len(block.Headers) != 0 {
    return nil, fmt.Errorf(""Decode ca block file fail"")
}

cert, err := x509.ParseCertificate(block.Bytes)
if err != nil {
    return nil, fmt.Errorf(""ParseCertificate ca block file fail"")
}

pool.AddCert(cert)

tr := &http.Transport{
    TLSClientConfig: &tls.Config{
        RootCAs:    pool,
        ServerName: cert.Subject.CommonName,  //manual set ServerName
    },
}

client := &http.Client{Transport: tr}
client.Post(url, bodyType, body)
