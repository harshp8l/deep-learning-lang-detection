package main

import (
    "fmt"
)

type Account interface {
    GetDetails() string
}

type PersonAccount struct {
    Name string
}

func NewPersonAccount(name string) Account {
    return &PersonAccount{
        Name: name,
    }
}

func (account *PersonAccount) GetDetails() string {
    return account.Name
}

type BillingAccount struct {
    AccountNumber string
}

func NewBillingAccount(accountNumber string) Account {
    return &BillingAccount{
        AccountNumber: accountNumber,
    }
}

func (account *BillingAccount) GetDetails() string {
    return account.AccountNumber
}

func getAllAccounts() []Account {
    accounts := make([]Account, 0)
    accounts = append(accounts, NewPersonAccount("John Doe"))
    accounts = append(accounts, NewBillingAccount("1234-5678"))

    return accounts
}

func main() {
    accounts := getAllAccounts()

    for _, account := range accounts {
        fmt.Println(account.GetDetails())
    }
}

/* Output:
John Doe
1234-5678
*/
