package main

import (
    ""fmt""
    ""time""
    ""sync""
)

var i int

func work() {
    time.Sleep(250 * time.Millisecond)
    i++
    fmt.Println(i)
}

func routine(command <- chan string, wg *sync.WaitGroup) {
    defer wg.Done()
    var status = ""play""
    for {
        select {
        case cmd := <- command:
            fmt.Println(cmd)
            switch cmd {
            case ""stop"":
                return
            case ""pause"":
                status = ""pause""
            default:
                status = ""play""
            }
        default:
            if status == ""play"" {
                work()
            }
        }
    }
}


func main() {
    var wg sync.WaitGroup
    wg.Add(1)
    command := make(chan string)
    go routine(command, &wg)
    time.Sleep(1 * time.Second)
    command <- ""pause""
    time.Sleep(1 * time.Second)
    command <- ""play""
    time.Sleep(1 * time.Second)
    command <- ""stop""
    wg.Wait()
}
