package main

import (
    ""testing""

    ""github.com/bsm/sarama-cluster""
)

var newConsumer = cluster.NewConsumer // replaceable in tests

func initSaramaConsumer() (*cluster.Consumer, error) {
    brokers := []string{""some_url:port""}
    groups := ""some_group""
    topics := []string{""some_topic""}
    config := cluster.NewConfig()

    saramaConsumer, err := newConsumer(
            brokers, groups, topics, config,
    )

    if err != nil {
            return nil, err
    }

    return saramaConsumer, nil
}

func TestInitSaramaConsumer(t *testing.T) {
    newConsumer = newMockConsumer
    defer func() { newConsumer = cluster.NewConsumer }()

    // Tests for initSaramaConsumer goes here
}

func newMockConsumer([]string, string, []string, *cluster.Config) (*cluster.Consumer, error) {
    panic(""not implemented"")
}
