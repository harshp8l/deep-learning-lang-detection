  var superbag = function(sup, sub) {
sup.sort();
sub.sort();
var i, j;
for (i=0,j=0; i<sup.length && j<sub.length;) {
    if (sup[i] < sub[j]) {
        ++i;
    } else if (sup[i] == sub[j]) {
        ++i; ++j;
    } else {
        // sub[j] not in sup, so sub not subbag
        return false;
    }
}
// make sure there are no elements left in sub
return j == sub.length;}
var contains = function(needle) {
// Per spec, the way to identify NaN is that it is not equal to itself
var findNaN = needle !== needle;
var indexOf;

if(!findNaN && typeof Array.prototype.indexOf === 'function') {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function(needle) {
        var i = -1, index = -1;

        for(i = 0; i < this.length; i++) {
            var item = this[i];

            if((findNaN && item !== item) || item === needle) {
                index = i;
                break;
            }
        }

        return index;
    };
}

return indexOf.call(this, needle) > -1;};
