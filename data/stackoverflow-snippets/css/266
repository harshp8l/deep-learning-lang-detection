:root {
  --rowNum: 4;
  --colNum: 5;
  --gridHeight: 120px;
}

.wrapper {
  display: grid;
  grid-template-rows: repeat(var(--rowNum), var(--gridHeight));
  grid-template-columns: repeat(var(--colNum), auto);
}
.grid-item {
  grid-column-start: auto;
  grid-row-start: auto;
  margin: 5px;
}

<div class=""wrapper"">
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
  <div class=""grid-item""></div>
</div>

function del() {  
  $('.grid-item:last-child').parentNode.removeChild($('.grid-item:last-child'));
  updateVar();
}

function updateVar(action) {
  let htmlStyles = window.getComputedStyle($(""html""));
  let rowNum = parseInt(htmlStyles.getPropertyValue(""--rowNum""));
  let colNum = parseInt(htmlStyles.getPropertyValue(""--colNum""));
  let gridItemsCount = document.querySelectorAll('.grid-item').length;
  document.documentElement.style.setProperty(`--rowNum`, Math.ceil(gridItemsCount/colNum));  
}
