public class MainOffscreen extends Application {

   private List<String> stringsList = new ArrayList<>();

   @Override
   public void start(Stage primaryStage) throws Exception {
      // Populates stringsList
      stringsList.add(""String1"");
      stringsList.add(""String2"");
      stringsList.add(""String3"");
      stringsList.add(""String4"");

      VBox offscreenRootVbox = new VBox(10.0);
      Scene offScreen = new Scene(offscreenRootVbox, 900, 700);

      // Replace the Hashset by list in order to keep order, more interesting for testing.
      List<Text> textSet = new ArrayList();

      // Text text.
      Text textText = new Text(""Text"");
      textSet.add(textText);

      // Text id.
      Text idText = new Text(""Id"");
      textSet.add(idText);

      // Populate String list.
      for(String s: stringsList) {
         textSet.add(new Text(s));
      }

      // Print the width of Texts before applying Css.
      for(Text text: textSet) {
         System.out.println(""BEFORE Width of "" + text.getText() + "" : "" + text.getLayoutBounds().getWidth());
      }
      System.out.println(""\n----------\n"");

      for(Text text: textSet) {
         text.setStyle(""-fx-font-size: 48;""); // <- HERE!
         // First add it to the parent.
         offscreenRootVbox.getChildren().add(text);

         // Either apply the CSS on the each Text, or Apply it on the parent's Text, I choose the
         // second solution.
         // text.applyCss();
      }
      // Apply the css on the parent's node
      offscreenRootVbox.applyCss();

      for(Text text: textSet) {
         System.out.println(""AFTER Width of "" + text.getText() + "" : "" + text.getLayoutBounds().getWidth());
      }

      // primaryStage.setScene(offScreen);
      // primaryStage.show();
   }
}
