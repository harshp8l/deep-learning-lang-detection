  public markContent(): void {
    const selection: any = window.getSelection();
    const range: any = selection.getRangeAt(0);

    if (range.startOffset !== range.endOffset) {
        const htmlSelection = this.getHtmlSelection(selection);
        const textSeleted: string = selection.toString();
        const highlight: any = range.commonAncestorContainer;
        if (this.markerEvent !== 'mark') {
          const marker: any = document.createElement('mark');
          marker.setAttribute('class', this.colorMarker);
          marker.innerHTML = htmlSelection;
          range.deleteContents();
          range.insertNode(marker);
          this.hideBubble();
          return;
        }
        const p = document.createElement('p');
        p.style.display = 'inline';
        p.style.margin = '0';
        p.innerHTML = highlight.innerHTML;
        highlight.remove();
        range.deleteContents();
        range.insertNode(p);
        this.hideBubble();

    }

  }
