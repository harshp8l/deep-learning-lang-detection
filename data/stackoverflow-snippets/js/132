w = {:a=>[4, 2], :b=>[8, 3], :c=>[10, 3], nil =>[0, 0]}
[1, 2, 3].flat_map do |count|
  %i[a b c].repeated_combination(count).map do |a, b, c|
    [
      [a, b, c].join.upcase,
      a == b ? 
        w[a].first + (b == c ? w[a].last * 2 : w[a].last + w[c].first) :
        [w[a], w[b], w[c]].map(&:first).reduce(:+)
    ]
  end
end.to_h

#â‡’ {""A""=>4, ""B""=>8, ""C""=>10,
#   ""AA""=>6, ""AB""=>12, ""AC""=>14, ""BB""=>11, ""BC""=>18, ""CC""=>13,
#   ""AAA""=>8, ""AAB""=>14, ""AAC""=>16, ""ABB""=>20, ""ABC""=>22,
#      ""ACC""=>24, ""BBB""=>14, ""BBC""=>21, ""BCC""=>28, ""CCC""=>16}
