"use strict";

function Aircraft(a, b, c) {
    this.manufacturer = a;
    this.numberOfEngines = b;
    this.costPerEngine = c;
}

// Prototype modifications should happen outside of the 
// constructor function so that they are processed just 
// once and not every time the constructor is invoked.
Aircraft.prototype.totalCost = function() {
  return this.numberOfEngines * this.costPerEngine;
}

// At this point, the prototype is all set, so calling the 
// constructor (which inherits from the prototype) creates
// a new object instance that has inherited the method.
let thunderbolt = new Aircraft('Republic', 1, 20000);

console.log(thunderbolt.totalCost());
