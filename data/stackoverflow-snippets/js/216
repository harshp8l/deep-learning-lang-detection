function flatten(oldObj) {
    return Object.keys(oldObj).reduce(function(newObj, oldKey) {   // for each key "oldKey" in oldObj 
        var value = oldObj[oldKey];                                // get the value of the current oldKey from oldObj
        if(value && typeof(value) === "object") {                  // if the value is also an object (add "&& !Array.isArray(value)" to exclude arrays)
            value = flatten(value);                                // then flatten it first
            Object.keys(value).forEach(function(key) {             // and for each key in the new flattened value object
                newObj[oldKey + "-" + key] = value[key];           // add a key-value to newObj where key is "oldKey-key" and the value is value[key]
            });
        } else {
            newObj[oldKey] = value;                                // otherwise (if the value is not an object), just copy the key-value to newObj as it is
        }
        return newObj;
    }, {});
}
