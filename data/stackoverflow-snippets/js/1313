const originalObj = {
    field: ""parent"",
    msg: [
    {
        field: ""child1a"",
        msg: [
        {
            field: ""child2a"",
            msg: ""child2a-msg""
        },
        {
            field: ""child2b"",
            msg: ""child2b-msg""
        }
      ]
    },
    {
      field: ""child1b"",
      msg: ""child1b-msg""
    }
  ]
};

const flatten = ({field, msg}) =>  {
    const res = []; // creating an array to create the msg array in case of multiple entries in msg
    if (typeof msg === ""string"") {
        return {field, msg}; // return plain object if the msg is ""string""
    }
    if (msg.constructor === Array) {
        // recursion here
        msg.map(message => flatten(message, msg))
        .forEach(m => {
            // after flattening array msg, we push them to msg field
            res.push({field, msg: m})
        });
    }
    return res; // returning final result here
}
const newObj = flatten(originalObj);
