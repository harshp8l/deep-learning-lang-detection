class FunWithEvents extends React.Component {
  handleKeyUpWithoutReact(e) {
    console.warn(""OMG I handled an event without React ðŸ˜±"");
    // I noticed that `e.cancelBubble` is `true` here...
  }

  handleKeyUpParent(e) {
    // This handler appears to be under React's supervision...
    console.info(""I get prevented :)"");
  }

  handleKeyUpTarget(e) {
    console.info(""I'm shown in the console :)"");
    e.stopPropagation();
    e.nativeEvent.stopImmediatePropagation();
  }

  componentDidMount() {
    document.addEventListener(""keyup"", this.handleKeyUpWithoutReact);
  }

  componentWillUnmount() {
    document.removeEventListener(""keyup"", this.handleKeyUpWithoutReact);
  }

  render() {
    return (
      <div onKeyUp={e => this.handleKeyUpParent(e)}>
        <input onKeyUp={e => this.handleKeyUpTarget(e)} />
      </div>
    );
  }
}
