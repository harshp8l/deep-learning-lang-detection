for (var i = 0; i < imageNames.length; i+=increment) {
    let urlParams = {Bucket: 'bucket_name', Key: imageNames[i]+'.jpg'};
    let pathToSave = 'img/analysis/'+urlParams.Key;
    getBucketObject(urlParams).then(function(pathToSave){
      console.log("image saved");
    })
}

function getBucketObject(urlParams){
    return  new Promise ((resolve, reject)=> { 
      let pathToSave = '/local-files/'+params.Key;
      let tempFile = fs.createWriteStream(pathToSave);
      let stream = s3.getObject(params).createReadStream().pipe(tempFile);
      let had_error = false;
      stream.on('error', function(err){
        had_error = true;
      });
      stream.on('close', function(){
        if (!had_error) {
          resolve(pathToSave);
        } 
      });
    })
}
