#!/usr/bin/env node

/**
 * @name Reboot Arris modem. 
 *
 * @desc Puppeteer script for rebooting an Arris modem. 
 * since the specific navigation for your modem will vary, this 
 * is more of an example and isn't guaranteed to work for your particular
 * modem. 
 * Many thanks to https://stackoverflow.com/users/6870228/keith for his help!
 *
 */

const puppeteer = require('puppeteer')
const screenshot = 'arris.png';

/* Enter your user name and password here between the 's */
const USER = '';
const PASS = '';

    const delay = (ms) =>
    new Promise((resolve) => setTimeout(resolve, ms));

(async () => {

    const browser = await puppeteer.launch({headless: true})
    const page = await browser.newPage()

        console.log(""Login..."");
    await page.goto('http://192.168.0.1/login.asp');
    await page.type('#id_username', USER, { delay: 10 });
    await page.type('input[type=""password""]', PASS, { delay: 10 });
    await page.click('[value=""Login""]');
        console.log(""Going home..."");
    await page.goto('http://192.168.0.1/home.asp');
    await page.click('#alertExitButton');
        console.log(""Config..."");
    await page.goto('http://192.168.0.1/RgConfiguration.asp');
    console.log('Submit request...');
    page.click('input[type=""submit""]');
    console.log('Pause...');

    await page.on(""dialog"", (dialog) => {
    console.log(""Dialog is up..."");
        delay(1000);
    console.log(""Accepted..."");
    dialog.accept();
        delay(1000);
    });

        await delay(3000);
        console.log(""Exiting."");
    browser.close();
    process.exit(1);
})()
