// Simulate the Movie DB
const movies = [
  { title: 'Sammy goes to the store', poster_path: 'http://www.com/photo.jpg', popularity: 2, url: 'http://www.com' },
  { title: 'Sammy doesnt go to the store', poster_path: 'http://www.com/photo.jpg', popularity: 4, url: '' },
  { title: 'Willy goes to Whalemart', poster_path: 'http://www.com/photo.jpg', popularity: 6, url: 'http://www.com' },
  { title: 'Jimmy only had one job', poster_path: 'http://www.com/photo.jpg', popularity: 8, url: '' },
  { title: 'Jimmy no longer has one job', poster_path: 'http://www.com/photo.jpg', popularity: 10, url: 'http://www.com' },
  { title: 'Fred goes to the farm', poster_path: undefined, popularity: 12, url: 'http://www.com' },
  { title: 'Fred doesnt go to the farm', poster_path: 'http://www.com/photo.jpg', popularity: 14, url: '' },
  { title: 'Helga goes to the hackathon', poster_path: 'http://www.com/photo.jpg', popularity: 16, url: 'http://www.com' },
  { title: 'Bhima only had one job', poster_path: 'http://www.com/photo.jpg', popularity: 18, url: '' },
  { title: 'Bhima no longer has one job', poster_path: null, popularity: 20, url: 'http://www.com' },
]

// Simulate the network request to get the movies
const response = { results: movies }

// Start with your existing code
const findMovies = response.results

// Rather than forEach, we will use Array.map() or Array.reduce()
// and set the filtered results into a new Array,
// because it provides you more utility overall
const filteredMovies = findMovies.reduce((acc, movie) => {
  if (movie.poster_path == null) {
    // console.log('REJECTING:', movie, 'REASON: no photo')
    movie.rejectReason = 'no photo'
    acc.rejects.push(movie)
    return acc
  }
  if (movie.popularity < 8) {
    // console.log('REJECTING:', movie, 'REASON: bad rating')
    movie.rejectReason = 'bad rating'
    acc.rejects.push(movie)
    return acc
  }
  acc.matches.push(movie)
  return acc
}, { matches: [], rejects: [] })

console.log('MATCHES', filteredMovies.matches)

console.log('\nREJECTS', filteredMovies.rejects)
