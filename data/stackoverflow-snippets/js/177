//register parallelogram component

AFRAME.registerComponent('parallelogram', {

//create schema
schema: {    
},

//define vertices of a parallelogram
//made up of 4 triangles that are combined together
para_vertices: [
    //first triangle
    {
        'x': -1,
        'y': 0,
        'z': 0,
    },
    {
        'x': 0,
        'y': 0,
        'z': 0,
    },
    {
        'x': 0,
        'y': 1,
        'z': 0,
    },
    //second triangle
    {
        'x': 0,
        'y': 0,
        'z': 0,
    },
    {
        'x': 1,
        'y': 0,
        'z': 0,
    },
    {
        'x': 0,
        'y': 1,
        'z': 0,
    }, 
    //third triangle  
    {
        'x': 1,
        'y': 0,
        'z': 0,
    },
    {
        'x': 1,
        'y': 1,
        'z': 0,
    },
    {
        'x': 0,
        'y': 1,
        'z': 0,
    },
    //fourth triangle  
    {
        'x': 1,
        'y': 0,
        'z': 0,
    },
    {
        'x': 2,
        'y': 1,
        'z': 0,
    },
    {
        'x': 1,
        'y': 1,
        'z': 0,
    }, 

],


init: function (){

    //create 3.js geometry      
    this.geometry = new THREE.Geometry();
    var geometry = this.geometry

    //get the vertices that we described above
    var verts = this.para_vertices
    //calculate number of faces     
    var faceCount = verts.length/3

    //loop through vertices and add to the geometry
    for (var i = 0; i < verts.length; i++) {
        var v3 = verts[i]
        geometry.vertices.push ( new THREE.Vector3(v3.x, v3.y, v3.z) );
    }
    //add faces to geometry 
    for (var i = 0; i < faceCount; i++) {
        a = i+i*2
        geometry.faces.push(new THREE.Face3(a, a+1, a+2))
    }
    geometry.computeBoundingBox();
    geometry.computeFaceNormals();
    geometry.computeVertexNormals();
    geometry.mergeVertices();

    //use out of the box material that you add to the entity in the primitive below
    this.material = this.el.components.material.material
    //make a new 3.js mesh combining the geometry and the material
    this.mesh = new THREE.Mesh(this.geometry, this.material);
    //add this mesh to our parent element
    this.el.setObject3D('mesh', this.mesh);

},

});
