function someHandler( doneFn ) {
    const toBeResolvedLate = new Promise( ( resolve, reject ) => {
        setTimeout( resolve, 5000 );
    } );
    const toBeRejectedEarly = new Promise( ( resolve, reject ) => {
        setTimeout( reject, 1000, new Error( "timeout" ) );
    } );

    Promise.race( [
        toBeRejectedEarly,
        toBeResolvedLate,
    ] )
        .then( doneFn )
        .catch( error => {
            doneFn( error );
        } );
}


someHandler( ( ...args ) => {
    console.log( "directly:", args );
} );


const { Writable } = require( "stream" );

const stream = new Writable( {
    write: function( a, b, done ) {
        someHandler( ( ...args ) => {
            console.log( "in _write:", args );
            done( ...args );
        } );
    },
} );

stream.write( Buffer.from( "chunk" ) );
