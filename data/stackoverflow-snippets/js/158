function addSelectionChangedListener(selectionEle, onChangeDoWithEle) {

  function isArrowDownKey(eve)  { return eve.keyCode == 40 }
  function isArrowUpKey(eve)    { return eve.keyCode == 38 }
  function isKeyDownEvent(eve)  { return eve.type == 'keydown' }
  function isKeyUpEvent(eve)    { return eve.type == 'keyup' }

  function onChangeEvent(eve) {
    // If selection-change was caused of an option's click-event:
    if(eve.explicitOriginalTarget.tagName.toLowerCase() == 'option') {
      // We want to trigger passed event-handler:
      onChangeDoWithEle(eve.target)
    }
  }

  function onKeyEvent(eve) {

    var selectedIndex = null

    // We have an arrow-up or -down key-event:
    if( isArrowDownKey(eve) || isArrowUpKey(eve) ) {

      // Key-event is keydown:
      if(isKeyDownEvent(eve)) {
        // Remember current selectedIndex:
        selectedIndex = eve.target.selectedIndex
      }
      // Key-event is keyup:
      else if(isKeyUpEvent(eve)) {
        // If current selection differs of remembered selection:
        if(selectedIndex != eve.target.selectedIndex) {
          // Trigger passed event-handler:
          onChangeDoWithEle(eve.target)
        }
      }
    }
  }

  selectionEle.onchange  = function(eve) onChangeEvent(eve)
  selectionEle.onkeydown = function(eve) onKeyEvent(eve)
  selectionEle.onkeyup   = function(eve) onKeyEvent(eve)

}
