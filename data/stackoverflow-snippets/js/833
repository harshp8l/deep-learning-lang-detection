class Parent extends React.Component {
  constructor(props) {
    super(props)
    this.handleChange = this.handleChange.bind(this)
    this.state = {
        childrenState: [
        { id: '1', checked: true },
        { id: '2', checked: false },
        { id: '3', checked: false },
      ]
    }
  }

  handleChange(id) {
    const childrenState = this.state.childrenState
    const child = childrenState.find(child => child.id === id)
    child.checked = !child.checked
    this.setState({childrenState})
  }

  render() {
    return this.state.childrenState.map(child => 
        <Child key={child.id} id={child.id} checked={child.checked} onChange={this.handleChange} />)
  }
}

class Child extends React.Component {
  constructor(props) {
    super(props)
      this.onChange = this.onChange.bind(this)
  }

  onChange() {
    this.props.onChange(this.props.id)
  }

  render() {
    return (
       <input type=""checkbox"" checked={this.props.checked} onChange={this.onChange} /> 
    )
  }
}
