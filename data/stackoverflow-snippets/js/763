import 'reflect-metadata'
// Decorator does nothing but metadata is emitted only for decorated symbols by the compiler so we need an empty decorator
function EmitType(target: Object, propertyKey: string | symbol){

}

export class Model {
    @EmitType name: string;
    @EmitType size: number;
    @EmitType child: Model;
    @EmitType data :  { test: string };
}

// Will output function String() { … }
console.log(Reflect.getMetadata("design:type", Model.prototype, "name"));

// Will output function Number() { … }
console.log(Reflect.getMetadata("design:type", Model.prototype, "size"));

// Will output function Model() { … }
console.log(Reflect.getMetadata("design:type", Model.prototype, "child"));

// Will output function Object() { … }
console.log(Reflect.getMetadata("design:type", Model.prototype, "data"));
