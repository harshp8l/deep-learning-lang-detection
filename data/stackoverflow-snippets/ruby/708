O  = Struct.new(:name, :price)
o1 = O.new('a', 1)
o2 = O.new('b', 2)
o3 = O.new('c', 3)
o4 = O.new('d', 4)
o5 = O.new('e', 5)
MASTER_INVENTORY = [o1, o2, o3, o4, o5]

def buy_item_index(p)
    puts "-----buy #{p}"
end

def main_menu
    puts '-----Main Menu'
end

def prepare_buy_menu_and_case
    choices = ['Go [B]ack']
    i = 1
    MASTER_INVENTORY.each do |obj| 
        choices << "[#{i}] Buy #{obj.name} Price: #{obj.price}"
        i += 1
    end
    @choice_map = choices.join("\n")

    @case_body = ''
    MASTER_INVENTORY.size.times do | number0 |
        number = number0 + 1
        @case_body <<
            "when '#{number}'
                buy_item_index(#{number})
                buy_menu\n"
        puts "when #{number} generated"
    end
    puts "@case_body=#{@case_body}"
end

def buy_menu
    puts @choice_map
    input = gets.chomp

    eval("
    case input
    when 'b', 'B'
        main_menu
    #{@case_body}
    else
        puts 'Not a valid input'
        buy_menu
    end
    ")
end

prepare_buy_menu_and_case
buy_menu
