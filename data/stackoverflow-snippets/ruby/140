def count_entries_in_bin(array, bin_min, bin_max, chart)
  (array.count {|entry| entry >= bin_min and entry <= bin_max}).to_s.rjust((chart))
end

def generate_random_ordered_data
  array = []
  200.times do
    array.push(rand(1..100)).sort!
  end
  array
end

def print_histogram_header
  puts ""  Range     #Found      Chart""
  puts "" -------     ------    ------------------------------""
  puts
end

def start_new_row(array, bin_min, bin_max)
  print ""\n""
  print ""#{bin_min.to_s.center(RANGE_FIELD_MIN_WIDTH)} ""
  print ""- #{bin_max.to_s.rjust(FOUND_FIELD_MIN_WIDTH)}      ""
  print ""|#{count_entries_in_bin(array, bin_min, bin_max, CHART_FIELD_MIN_WIDTH)}|     *""
end

RANGE_FIELD_MIN_WIDTH = 1
FOUND_FIELD_MIN_WIDTH = 3
CHART_FIELD_MIN_WIDTH = 2
bin_min = 1
bin_max = 10

array = generate_random_ordered_data
print_histogram_header
print "" 1 -  10      |#{count_entries_in_bin(array, bin_min, bin_max, CHART_FIELD_MIN_WIDTH)}|     ""
array.each do |entry|
  if entry > bin_max
    bin_min += 10
    bin_max += 10
    start_new_row(array, bin_min, bin_max)
  else
    print ""*""
  end
end
