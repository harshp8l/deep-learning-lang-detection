# spec/requests/v1/lists_controller_create_spec.rb

require ""rails_helper""

RSpec.describe V1::ListsController do
  describe 'success' do
    it 'returns ok and creates a list', :aggregate_failures do # :aggregate_failures is available only for RSpec 3.3+
      expect do
        post '/list', title: 'foo' # This will also test your route, avoiding routing specs to be necessary
      end.to change { List.count }.from(0).to(1)

      expect(response).to have_http_status(:ok)
    end
  end

  describe 'bad request' do
    before do
      # This is needed because your controller is not validating the object, but look at my
      # comment below (out of the code), to think about this behavior, please.
      allow_any_instance_of(List).to receive(:save).and_return(false) 
    end

    it 'returns a bad request and does not create a list' do
      expect do
        post '/list', title: 'foo' # This will also test your route, avoiding routing specs to be necessary
      end.not_to change { List.count }

      expect(response).to have_http_status(:bad_request)
    end
  end 
end
