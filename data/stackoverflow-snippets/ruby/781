def regroup(arr)
  out, pos = [], 0

  loop do
    should_retry = regroup_worker(arr.drop(pos)) do |elem, size=1|
      out << elem

      pos += size
    end

    break out unless should_retry
  end
end

def regroup_worker(arr)
  buf, count = [], 0

  arr.each do |elem|
    if buf.empty? && !elem.start_with?('(')
      yield elem
    else
      buf << elem

      if elem.start_with?('(')
        count += 1
      elsif elem.end_with?(')')
        count -= 1
      end

      if count.zero?
        yield buf.join(' '), buf.size

        buf.clear
      end
    end
  end

  # we have unbalanced parens, so let the caller consume the "bad" opening
  # paren and try again (returns false if nothing left to do)
  yield buf.first unless buf.empty?
end

regroup(["(a", "(b", "c)"]) # => ["(a", "(b c)"]
