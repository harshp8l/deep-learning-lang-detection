AVG_FNs_PER_DIGIT = 4.784971966781667

def first_fibonacci_with_n_digits(n)
  return [1, 1] if n == 1
  idx = (n * AVG_FNs_PER_DIGIT).round
  fn, prev_fn = fib(idx)
  fn.to_s.size >= n ? fib_down(n, fn, prev_fn, idx) : fib_up(n, fn, prev_fn, idx)
end

def fib(idx)
  a = 1
  b = 2
  (idx - 2).times {a, b = b, a + b }
  [b, a] 
end

def fib_up(n, b, a, idx)
  loop do
    a, b = b, a + b
    idx += 1
    break [idx, b] if b.to_s.size == n
  end
end

def fib_down(n, b, a, idx)
  loop do
    a, b = b - a, a
    break [idx, b] if a.to_s.size == n - 1
    idx -= 1
  end
end
