class Foo    
  def say_something_that_doesnt_exist
    # Foo is free to try to make use of @nothing, 
    # in case it's been provided by a child class' 
    # instance, but if it's not present, its value 
    # will just be nil
    puts ""say_something_that_doesnt_exist, like #{@nothing}!""
  end

  def say_something_that_does_exist
    puts ""say_something_that_does_exist, like #{@bar}!""
  end
end

class Bar < Foo
  attr_reader :bar

  def initialize
    super
    @bar = ""bar""
  end
end

bar = Bar.new
bar.say_something_that_doesnt_exist # say_something_that_doesnt_exist, like !
bar.say_something_that_does_exist # say_something_that_does_exist, like bar!
