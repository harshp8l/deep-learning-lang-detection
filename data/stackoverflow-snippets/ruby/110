module SecretChecker
  module_function

  # Return true if all secrets are present
  def secrets?(secret_list, under:)
    secret_root = Rails.application.secrets
    if under
      if under.is_a?(Array)
        secret_root = secret_root.public_send(under.shift)&.dig(*under.map(&:to_s))
      else
        secret_root = secret_root.public_send(under)
      end
      secret_list.map do |secret|
        secret_root&.dig(secret.to_s).present?
      end
    else
      secret_list.map do |secret|
        secret_root&.public_send(secret.to_s).present?
      end
    end.reduce(:&)
  end

  def check_secrets(theme, secret_list, under: nil)
    return if secrets?(secret_list, under: under)
    message = ""WARNING - Missing secrets for #{theme} - #{yield}""
    puts message and Rails.logger.warn(message)
  end
end

SecretChecker.check_secrets('Slack', %i[martine], under: [:slack, :webhooks]) do
  'Slack Notifications will not work'
end

SecretChecker.check_secrets('MongoDB', %i[user password], under: :mongodb) do
  'No Database Connection if auth is activated'
end
