class QueryRunner
  DEFAULT_TIMEOUT=70

  def self.query(query, timeout_limit=DEFAULT_TIMEOUT)
    new(query, timeout_limit).run
  end

  def initialize(query, timeout_limit)
    @query = query
    @timeout_limit = timeout_limit
  end

  def run
    start_time = Time.now.to_i
    Thread.new { @result = Neo4j::Session.query(@query) }
    sleep 0.5

    return @result if @result

    id = if query_ref = Neo4j::Session.query(""CALL dbms.listQueries;"").to_a.find {|x| x.query == @query }
      query_ref.queryId
    end

    while @result.nil?
      if (Time.now.to_i - start_time) > @timeout_limit
        puts ""killing query #{id} due to timeout""
        Neo4j::Session.query(""CALL dbms.killQuery('#{id}');"")
        @result = []
      else
        sleep 1
      end
    end
    @result
  end
end
