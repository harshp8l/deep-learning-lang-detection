module ActionDispatch
  module Assertions
    module CustomResponseAssertions
      # Use this method when you want to assert a response body but also print the exception
      # and full stack trace to the test console.
      # Useful when you are getting errors in integration tests but don't know what they are.
      #
      # Example:
      # user_session.post create_gene_path, params: {...}
      # user_session.assert_response_with_errors :created
      def assert_response_with_errors(type, message = nil)
        assert_response(type, message)
      rescue Minitest::Assertion => e
        message = e.message
        message += ""\nException message: #{@response.parsed_body[:exception]}""
        stack_trace = @response.parsed_body[:traces][:'Application Trace'].map { |line| line[:trace] }.join ""\n""
        message += ""\nException stack trace start""
        message += ""\n#{stack_trace}""
        message += ""\nException stack trace end""
        raise Minitest::Assertion, message
      end
    end
  end
end
