#!/usr/bin/env ruby

A = [
  [""red"",    ""00:00:00""],
  [""orange"", ""00:00:02""],
  [""green"",  ""00:00:05""],
  [""red"",    ""00:00:07""],
  [""green"",  ""00:00:27""],
  [""red"",    ""00:00:28""],
  [""green"",  ""00:00:29""]
]


def seconds(string) # hh:mm:ss
  hours, minutes, seconds = string.split(':').map(&:to_i)
  hours * 60 * 60 + minutes * 60 + seconds
end


def seconds_diff_relative_to_next(array, i)
  seconds(array[i+1].last) - seconds(array[i].last)
end


reds_and_greens = A.select { |a| a.first == 'red' || a.first == 'green' }
puts ""Reds and greens:\n\n""
p reds_and_greens; puts;


matches = (0..(reds_and_greens.size - 2)).select do |i|
  if reds_and_greens[i].first == 'red' && reds_and_greens[i+1].first == 'green'
    seconds = seconds_diff_relative_to_next(reds_and_greens, i)
    puts ""#{i}, red -> green, difference in seconds = #{seconds}""
    seconds <= 10
  end
end


puts
matches.each do |match|
  puts ""Match: #{match}: #{reds_and_greens[match..match+1].inspect}""
end


=begin

Produces:

Reds and greens:

[[""red"", ""00:00:00""], [""green"", ""00:00:05""], [""red"", ""00:00:07""], [""green"", ""00:00:27""], [""red"", ""00:00:28""], [""green"", ""00:00:29""]]

0, red -> green, difference in seconds = 5
2, red -> green, difference in seconds = 20
4, red -> green, difference in seconds = 1

Match: 0: [[""red"", ""00:00:00""], [""green"", ""00:00:05""]]
Match: 4: [[""red"", ""00:00:28""], [""green"", ""00:00:29""]]

=end
