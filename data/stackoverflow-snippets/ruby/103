class City < ApplicationRecord
  has_many :families
  validates :name, presence: true, uniqueness: {scope: :state}
  validates :state, presence: true, numericality: false

  scope :query_by_name_and_state, -> (city, state) {
      where(name: city.downcase, state: state.downcase)
  }

  before_save :normalize_data

  def normalize_data
    self.name.downcase!
    self.state.downcase!
  end
end


simple_soundcloud_app(main)> existing_city = City.query_by_name_and_state('Boston', 'MA').first
  City Load (0.1ms)  SELECT  ""cities"".* FROM ""cities"" WHERE ""cities"".""name"" = ? AND ""cities"".""state"" = ? ORDER BY ""cities"".""id"" ASC LIMIT ?  [[""name"", ""boston""], [""state"", ""ma""], [""LIMIT"", 1]]
=> #<City:0x007fce6a34e5c8
 id: 3,
 name: ""boston"",
 state: ""ma"",
 created_at: Sun, 08 Apr 2018 01:29:43 UTC +00:00,
 updated_at: Sun, 08 Apr 2018 01:29:43 UTC +00:00>
 simple_soundcloud_app(main)> existing_city = City.query_by_name_and_state('', '').first
  City Load (0.1ms)  SELECT  ""cities"".* FROM ""cities"" WHERE ""cities"".""name"" = ? AND ""cities"".""state"" = ? ORDER BY ""cities"".""id"" ASC LIMIT ?  [[""name"", """"], [""state"", """"], [""LIMIT"", 1]]
=> nil
