class Reservation < ApplicationRecord

  # code ...

  # assuming Reservation has start_time and end_time attributes
  # and you validate that start_time is always before end_time

  # time param can also be a date or datetime
  def self.overlap(time)
    # Reservation start_time is less than or equal to the given time
    # and reservation end_time is greater than or equal to the given 
    # time.
    where(arel_table[:start_time].lteq(time))
      .where(arel_table[:end_time].gteq(time))
  end

  def self.overlap_window(start_time, end_time)
    # Reservation start_time is less than or equal to the given
    # end_time and reservation end_time is greater than or equal 
    # to the given start_time.
    where(arel_table[:start_time].lteq(end_time))
      .where(arel_table[:end_time].gteq(start_time))
  end

  # code ...

end
