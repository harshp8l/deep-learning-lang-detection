module Filterable
  extend ActiveSupport::Concern

  module ClassMethods
    def filter(filtering_params)
      results = self.where(nil)
      filtering_params.each do |key, value|
        results = results.public_send(key, value) if value.present?
      end
      results
    end
  end
end


#Controller
def index
  @products = Product.filter(params.slice(:status, :location, :over_price, :under_price))
end

#class Car < ApplicationRecord
class Product < ApplicationRecord
  include Filterable

  scope :status, -> (status) { where status: status }
  scope :location, -> (location_id) { where location_id: location_id }
  scope :over_price, -> (price) { where "price > ?", price) }
  scope :under_price, -> (price) { where "price < ?", price) }

  #continue adding more scopes here
end
