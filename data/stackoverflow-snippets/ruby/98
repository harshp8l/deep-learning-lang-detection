def permute ((x, *xs))

  all_pos = lambda do |(y,*ys)|
    if y.nil?
      [[ x ]]
    else
      [[ x, y, *ys ]] + (all_pos.call ys) .map { |rest| [ y, *rest ] }
    end
  end

  if x.nil? or xs.empty?
    [[x]]
  else
    (permute xs) .flat_map &all_pos
  end

end

permute [1,2,3,4]

# [ [1, 2, 3, 4]
# , [2, 1, 3, 4]
# , [2, 3, 1, 4]
# , [2, 3, 4, 1]
# , [1, 3, 2, 4]
# , [3, 1, 2, 4]
# , [3, 2, 1, 4]
# , [3, 2, 4, 1]
# , [1, 3, 4, 2]
# , [3, 1, 4, 2]
# , [3, 4, 1, 2]
# , [3, 4, 2, 1]
# , [1, 2, 4, 3]
# , [2, 1, 4, 3]
# , [2, 4, 1, 3]
# , [2, 4, 3, 1]
# , [1, 4, 2, 3]
# , [4, 1, 2, 3]
# , [4, 2, 1, 3]
# , [4, 2, 3, 1]
# , [1, 4, 3, 2]
# , [4, 1, 3, 2]
# , [4, 3, 1, 2]
# , [4, 3, 2, 1]
# ]
