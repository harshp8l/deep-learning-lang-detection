class Car
    attr_reader :make, :model, :year

    def initialize(make, model, year)
        @make  = make
        @model = model
        @year  = year
    end

    def self.make_car # class method (more precisely : singleton method)
        print 'How many cars do you want to create? '
        array_of_cars = Array.new
        num_cars = gets.to_i

        num_cars.times do | i |
            real_index = i + 1
            puts
            print "Enter make for car #{real_index}: "
            make = gets.chomp

            print "Enter model for car #{real_index}: "
            model = gets.chomp

            print "Enter year for car #{real_index}: "
            year = gets.to_i

=begin
            c = Car.new(make, model, year)
            array_of_cars << c 
=end
            # some will tell you to avoid unnecessary variables ...
            array_of_cars << Car.new(make, model, year)
        end

        puts
        puts 'You have the following cars:' # sorted by year for fun

        array_of_cars.sort_by{ | car | car.year }.each do | car |
            puts "#{car.year} #{car.make} #{car.model}"
        end
    end
end # class Car

Car.make_car
