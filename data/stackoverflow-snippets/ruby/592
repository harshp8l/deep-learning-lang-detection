require 'benchmark'

def detail_1
  sorted_sizes = [""S"", ""M"", ""L"", ""XL""]
  products = Product.where(:name => 'some name')
  if products.empty?
    return redirect_to shop_path, :notice => 'The item is no longer available'
  end 
  @product = products.first
  @sizes = sorted_sizes & products.pluck(:size).uniq
  @colors = products.pluck(:color).uniq
  @quantity = products.where(""size = :size AND color = :color AND available = :bool"",
                              size: @sizes[0], color: @colors[0], bool: true).count
end

def detail_2
  sorted_sizes = [""S"", ""M"", ""L"", ""XL""]
  products = Product.where(:name => 'some name').to_a
  if products.empty?
    return redirect_to shop_path, :notice => 'The item is no longer available'
  end 
  @product = products.first
  @sizes = sorted_sizes & products.pluck(:size).uniq
  @colors = products.pluck(:color).uniq
  @quantity = products.select do |elem|
                elem.size == @sizes[0] && elem.color == @colors[0] && elem.available == true
              end
  @quantity = @quantity.count
end

Benchmark.bmbm do |x|
  x.report('first implementation') do
    10000.times { detail_1 }
  end
  x.report('second implementation') do
    10000.times { detail_2 }
  end
end
