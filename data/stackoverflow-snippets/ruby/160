require "ox"
require "stringio"

class Handler < ::Ox::Sax
  def initialize
    @stack = []
  end

  def start_element(element_name)
    @stack << [element_name, {}]
  end

  def end_element(element_name)
    parent_name, parent_attributes = @stack[-2]
    if parent_name == :child && parent_attributes[:id].to_i.odd?
      name, attributes = @stack[-1]
      if name == :barcode && attributes[:value].to_i.even?
        puts "Here is one record that seems interesting: Child: #{parent_attributes[:id]}, Barcode: #{attributes[:value]}"
      end
    end
    @stack.pop
  end

  def attr(attribute_name, attribute_value)
    _name, attributes = @stack.last
    attributes[attribute_name] = attribute_value
  end

end

handler = Handler.new
Ox.sax_parse(handler, StringIO.new(xml))
