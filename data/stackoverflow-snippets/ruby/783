# necessary require of chef and knife ...

class Chef::Knife # reopen the Knife class and replace this method
    def run_with_pretty_exceptions(raise_exception = false)
      unless respond_to?(:run)
        ui.error ""You need to add a #run method to your knife command before you can use it""
      end
      enforce_path_sanity
      maybe_setup_fips
      Chef::LocalMode.with_server_connectivity do
        run
      end
    rescue Exception => e
      raise if e.class == Interrupt # <---------- added ********************
      raise if raise_exception || Chef::Config[:verbosity] == 2
      humanize_exception(e)
      exit 100
    end
end

name = cookbook_name(File.join(path, 'Metadata.rb'))
error = 0

begin
  ::Chef::Knife.run(['cookbook', 'site', 'show', ""#{name}""])
rescue SystemExit => e
  puts ""in rescue SystemExit e=#{e.inspect}""
  error = 1
rescue Interrupt
  puts 'in rescue Interrupt'
end
