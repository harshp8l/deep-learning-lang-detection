require_relative 'm'

class MyClass
    include MyModule
end

puts ""you can send create_class to MyModule because it's a singleton (class) method""
puts ""MyModule.respond_to?(:create_class) => #{MyModule.respond_to?(:create_class)}""

puts 'mm is not a singleton method of MyModule'
puts ""MyModule.respond_to?(:mm) => #{MyModule.respond_to?(:mm)}""

puts 'mm is an instance method of MyClass, cannot be sent to MyClass'
puts ""MyClass.respond_to?(:mm) => #{MyClass.respond_to?(:mm)}""

puts 'mm is an instance method of MyClass, can be sent to an instance of MyClass'
puts ""MyClass.new.respond_to?(:mm) => #{MyClass.new.respond_to?(:mm)}""

puts ""instance methods of MyModule : #{MyModule.instance_methods}""

puts ""MyModule.method_defined?(:create_class) => #{MyModule.method_defined?(:create_class)}""
puts ""MyModule.method_defined?(:mm) => #{MyModule.method_defined?(:mm)}""

puts ""singleton methods of MyModule : #{MyModule.singleton_methods}""

module MyModule
    class << self
        puts 'we are in the singleton class / eigenclass'
        puts ""method_defined?(:create_class) => #{method_defined?(:create_class)}""
    end
end
