module Commandable
  def inputs(*arguments)
    define_method(:initialize) do |*parameters|
      unless arguments.size == parameters.size
        raise ArgumentError, ""wrong number of arguments (given #{parameters.size}, expected #{arguments.size})""
      end

      arguments.zip(parameters).each do |argument, parameter|
        instance_variable_set(""@#{argument}"", parameter)
      end
    end

    define_singleton_method(:perform) do |*parameters|
      unless arguments.size == parameters.size
        raise ArgumentError, ""wrong number of arguments (given #{parameters.size}, expected #{arguments.size})""
      end

      new(*parameters).perform
    end
  end
end

class Foo
  extend Commandable
  inputs :foo, :bar

  def perform
    [@foo, @bar]
  end
end

Foo.perform 1, 2 # => [1, 2]
