# ***** Emulation of the gem *****

class Chef end

class Chef::Knife
    def self.run(x)
        puts 'in original run'
        self.new.run_with_pretty_exceptions
    end

    def run_with_pretty_exceptions
        print 'Press Ctrl_C > '
        gets
        rescue Exception => e
            puts
            puts ""in run_with_pretty...'s Exception e=#{e.inspect} #{e.class}""
            raise if false # if raise_exception || Chef::Config[:verbosity] == 2
#            humanize_exception(e)
            puts ""now $!=#{$!.inspect}""
            puts ""about to exit,                     self=#{self}""
            exit 100
    end
end

# ***** End of gem emulation *****

#----------------------------------------------------------------------

# ***** This is what you put into your script. *****

class Chef::Knife # reopen the Knife class and define one's own exit
    alias_method :object_exit, :exit

    def exit(p)
        puts ""in my own exit with parameter #{p}, self=#{self}""
        puts ""$!=#{$!.inspect}""

        if Interrupt === $!
            puts 'then about to raise Interrupt'
            raise # re-raise Interrupt
        else
            puts 'else about to call Object#exit'
            object_exit(p)
        end
    end
end

begin
  ::Chef::Knife.run([])
rescue SystemExit => e
  puts ""in script's rescue SystemExit e=#{e.inspect}""
rescue Interrupt
  puts ""in script's rescue Interrupt""
end
