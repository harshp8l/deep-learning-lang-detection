module HashUtil
    refine Hash do
        # simple but can not adapt to nested hash
        def squeeze
            select{|_, v| !v.nil? }
        end
        # complex but can adapt to nested hash
        def squeeze_deep
            each_with_object({}) do |(k, v), squeezed_hash|
                if v.is_a?(Hash)
                    squeezed_hash[k] = v.squeeze
                else
                    squeezed_hash[k] = v unless v.nil?
                end
            end
        end
    end
end

class Article
    using HashUtil
    def attributes
        hash = {
            "author" => @author,
            "title" => @title,
            "summary" => @summary,
            "images" => @images,
            "source" => @source,
            "date" => @date
        }
        hash.squeeze
    end
end
