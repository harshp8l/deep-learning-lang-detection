$raw_nodes = [
  ['id' => 1, 'dest_id' => 2],
  ['id' => 2, 'dest_id' => 3],
  ['id' => 3, 'dest_id' => null],
  ['id' => 4, 'dest_id' => 5],
  ['id' => 5, 'dest_id' => null]
];

$nodes = [];
// get the nodes in such a way that you can access them from their id
foreach($raw_nodes as $raw_node) {
  $nodes[$raw_node['id']] = [
    ""id"" => $raw_node['id'],
    ""dest_id"" => $raw_node['dest_id'],
    ""parent_id"" => null
  ];
}

// find the parent to each node
foreach($nodes as $node) {
  if ($node['dest_id'] && $nodes[$node['dest_id']]) {
    $nodes[$node['dest_id']]['parent_id'] = $node['id'];
  }
}

function buildPath($nodes, $node) {
  $path = [];
  if ($node['parent_id']) {
    $path = buildPath($nodes, $nodes[$node['parent_id']]);
  }
  array_push($path, $node['id']);
  return $path;
}

$paths = [];
// for every node without a destination,
// build its full path by recursive search starting from its own parent
foreach($nodes as $node) {
  if ($node['dest_id'] === null) {
    $path = buildPath($nodes, $node);
    array_push($paths, $path);
  }
}
