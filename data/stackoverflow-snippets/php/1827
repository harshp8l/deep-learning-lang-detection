<?php

//error_reporting(E_ALL);
//ini_set("display_errors", 1);

require_once __DIR__.'/vendor/autoload.php'; 

$client = new Google_Client();
$credentialJson= __DIR__ . '/My Project-somehexidecimal.json'; //name of your My Project .json file
$calendarId='youremail'; //your google calendar id
$phone= $_GET['phone'];

$display = preg_replace('/^(\d{3})(\d{3})(\d{4})$/', '\1-\2-\3', $phone);
$display1 = preg_replace('/^(\d{3})(\d{3})(\d{4})$/', '(\1) \2-\3', $phone);
$display2 = preg_replace('/^(\d{3})(\d{3})(\d{4})$/', '\1\2\3', $phone);
$display3 = preg_replace('/^(\d{3})(\d{3})(\d{4})$/', '\1 \2 \3', $phone);
$display4 = preg_replace('/^(\d{3})(\d{3})(\d{4})$/', '(\1)\2-\3', $phone);

$client->setAuthConfig($credentialJson);
$client->addScope('https://www.googleapis.com/auth/calendar');

$service = new Google_Service_Calendar($client);

$params = array(
'q' => $display,
'singleEvents' => true,
//'orderBy' => 'startTime',
'timeMin' => date(DateTime::ATOM),
'maxResults' => 1
);
$params1 = array(
'q' => $display1,
'singleEvents' => true,
//'orderBy' => 'startTime',
'timeMin' => date(DateTime::ATOM),
'maxResults' => 1 
);
$params2 = array(
'q' => $display2,
'singleEvents' => true,
//'orderBy' => 'startTime',
'timeMin' => date(DateTime::ATOM),
'maxResults' => 1 
);
$params3 = array(
'q' => $display3,
'singleEvents' => true,
//'orderBy' => 'startTime',
'timeMin' => date(DateTime::ATOM),
'maxResults' => 1
);
$params4 = array(
'q' => $display4,
'singleEvents' => true,
//'orderBy' => 'startTime',
'timeMin' => date(DateTime::ATOM),
'maxResults' => 1
);

$events = $service->events->listEvents($calendarId, $params);

if (count($events->getItems()) == 0) {
$events = $service->events->listEvents($calendarId, $params1);
}
if (count($events->getItems()) == 0) {
$events = $service->events->listEvents($calendarId, $params2);
}
if (count($events->getItems()) == 0) {
$events = $service->events->listEvents($calendarId, $params3);
}
if (count($events->getItems()) == 0) {
$events = $service->events->listEvents($calendarId, $params4);
}
if (count($events->getItems()) == 0) {
print "No upcoming events found.\n";
}
$calTimeZone = $events->timeZone;

date_default_timezone_set($calTimeZone);

foreach ($events->getItems() as $event) {

        $starttime= $event->getstart()['dateTime'];
        $endtime= $event->getend()['dateTime'];
        $description=$event->getDescription();
        $summary=$event->getSummary();
        $eventid = $event->getid();
        $location = $event->getlocation();

     $eventDateStr = $event->start->dateTime;
     if(empty($eventDateStr))
     {
         $eventDateStr = $event->start->date;
     }

     $temp_timezone = $event->start->timeZone;

     if (!empty($temp_timezone)) {
     $timezone = new DateTimeZone($temp_timezone);
 } else { $timezone = new DateTimeZone($calTimeZone);
     }

     $eventdate = new DateTime($eventDateStr,$timezone);
     $link = $event->htmlLink;
             $TZlink = $link . "&ctz=" . $calTimeZone;
     $newmonth = $eventdate->format("M");
     $newday = $eventdate->format("j");
            }


    ?>
    <div class="event-container">
    <div class="eventDate">
    <span class="month"><?php

    echo $newmonth;

     ?></span><br />
    <span class="day"><?php

    echo $newday;

     ?></span><span class="dayTrail"></span>
</div>
<div class="eventBody">
    <a href="<?php echo $TZlink;
?>">

    <?php echo $summary, '<br>', $location, '<br>', $description;
    ?>
    </a>
</div>
</div>
 <?php

 $notes= html_entity_decode ($description)
?>
