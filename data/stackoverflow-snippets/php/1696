function splitUrl() 
{
    if (isset($_GET['url'])) {        
        require(ROOT. 'core/routes.php');

    $tmp_url = trim($_GET['url'], ""/"");
    $tmp_url = filter_var($tmp_url, FILTER_SANITIZE_URL);

    $tmp_url = explode(""/"", $tmp_url);
    $param = ['params' => [], 'found' => false];
    foreach ($routes as $route => $value) {
        //echo(""We iterate over a new route called <strong>"". $route. ""</strong><br>"");
        $tmp_route = explode(""/"", $route);

        // Variables for the length of the arrays;
        $route_count = count($tmp_route);
        $url_count = count($tmp_url);

        //echo(""The route count = <strong>"". $route_count . ""</strong> and the url count = <strong>"". $url_count. ""</strong><br>"");

        // Check if the length of the route in our acceptable routes array is equal to the length of the url. 
         if ($route_count == $url_count) {
             $indexCount = null;
             for ($i = 0; $i < $route_count; $i++) { 
                 if ($tmp_route[$i] == '{param}') {
                     $indexCount = $i;
                     //echo(""A parameter has been found at index <strong>"" . $indexCount . ""</strong><br>"");
                     break;
                 }
             }

             if ($indexCount == null) {
                 $indexCount = count($tmp_route); 
                //echo(""A parameter has NOT been found so the index has been set to <strong>"". $indexCount. ""</strong><br>"");
             }

            $doContinue = false;
             for ($i = 0; $i < $indexCount; $i++) { 
                 //echo(""We are comparing value <strong>"". $tmp_route[$i] . ""</strong> to <strong>"". $tmp_url[$i] .""</strong><br>""); 

                 if ($tmp_route[$i] == $tmp_url[$i]) {
                     //echo(""Value <strong>"". $tmp_route[$i] .""</strong> appears to be valid<br>"");
                     continue;
                 } else {
                     //echo(""Value <strong>"". $tmp_route[$i] .""</strong> appears to be invalid<br><hr>"");
                     $doContinue = true;
                     break;
                 }
             }

             if ($doContinue) continue;

             $count = 0;
             for ($i = 0; $i < $route_count; $i++) { 
                 if ($tmp_route[$i] == $tmp_url[$count]) {
                     $count++;
                    continue;
                 } else {
                     array_push($param['params'], $tmp_url[$count]);
                    $count++;
                 }
             }
        } else {
            // This means the route that we are iterating over right now can not possibly be the one we are looking for as the length is not equal to the length of the url.
            continue;
        }

        $param['controller'] = explode(""@"", $value)[0];
        $param['action'] = explode(""@"", $value)[1];

        return $param;
     }
}
