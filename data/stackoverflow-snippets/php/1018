$(document).ready(function () {
    $('#searchButton').click(function (event) {
        ajaxSearch();
    });
});

function ajaxSearch() {
    $.ajax({
        method: 'post',
        dataType: 'json',
        url: 'search.php',
        data: $('.user-input').serialize(),
        success: function (response, textStatus, jqXHR) {
            /*
             * Just for testing: diplay the whole response
             * in the console. So look unto the console log.
             */
            console.log(response);

            // Get the success message from the response object.
            var successMessage = response.message;

            // Get the list of the found cities from the response object.
            var cities = response.cities;

            // Display the success message.
            displayMessage('.messages', 'success', successMessage);

            // Display the list of the found cities.
            $('.cities').html('');
            $.each(cities, function (index, value) {
                var city = index + ": " + value.name + ' (' + value.isCapital + ')' + '<br/>';
                $('.cities').append(city);
            });
        },
        error: function (jqXHR, textStatus, errorThrown) {
            // Handle the raised errors. In your case, display the error message.
            handleAjaxError(jqXHR);
        },
        complete: function (jqXHR, textStatus) {
            // ... Do something here, after all ajax processes are finished.
        }
    });
}

/**
 * Display a user message.
 *
 * @param selector string The jQuery selector of a message container.
 * @param type string The message type: success|danger|warning.
 * @param message string The message text.
 * @return void
 */
function displayMessage(selector, type, message) {
    $(selector).html('<div class="message ' + type + '">' + message + '</div>');
}

/**
 * Handle an error raised by an ajax request.
 *
 * If the status code of the response is a custom one (420), defined by
 * the developer, then the corresponding error message is displayed.
 * Otherwise, e.g. if a system error occurres, the displayed message must
 * be a general, user-friendly one. So, that no system-related infos will be shown.
 *
 * @param jqXHR object The jQuery XMLHttpRequest object returned by the ajax request.
 * @return void
 */
function handleAjaxError(jqXHR) {
    var message = 'An error occurred during your request. Please try again, or contact us.';

    if (jqXHR.status === 420) {
        message = jqXHR.statusText;
    }

    displayMessage('.messages', 'danger', message);
}
