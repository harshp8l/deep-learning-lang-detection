// Utility pricing function
function filtering_product_prices( $price, $product ) {
    // Get the product ID
    $product_id = $product->is_type('variation') ? $product->get_parent_id() : $product->get_id();

    // Only for Woocomerce Product Tag ""ama""
    if ( ! has_term( 'ama', 'product_tag', $product_id ) ) return $price; // Exit

    if ( $price < 5 ) {
        $price *= 2.5;
    } elseif ( $price >=  5 && $price < 10 ) {
        $price *= 2;
    } elseif ( $price >= 10 && $price < 20 ) {
        $price *= 1.75;
    } elseif ( $price >= 20 && $price < 40 ) {
        $price *= 1.5;
    } elseif ( $price >= 40 && $price < 60 ) {
        $price *= 1.35;
    } elseif ( $price >= 60 && $price < 80 ) {
        $price *= 1.25;
    } elseif ( $price >= 80 && $price < 1000 ) {
        $price *= 1.20;
    }
    return ceil($price + 0.01) - 0.01;
}

// Simple, grouped and external products
add_filter('woocommerce_product_get_price', 'custom_price', 90, 2 );
add_filter('woocommerce_product_get_regular_price', 'custom_price', 90, 2 );

// Product variations (of a variable product)
add_filter('woocommerce_product_variation_get_regular_price', 'custom_price', 99, 2 );
add_filter('woocommerce_product_variation_get_price', 'custom_price', 90, 2 );

function custom_variation_price( $price, $variation, $product ) {
    return filtering_product_prices( $price, $product );
}

// Variable product price range
add_filter('woocommerce_variation_prices_price', 'custom_variation_price', 90, 3 );
add_filter('woocommerce_variation_prices_regular_price', 'custom_variation_price', 90, 3 );

function custom_price( $price, $product ) {
    return filtering_product_prices( $price, $product );
}
