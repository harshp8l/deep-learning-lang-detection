class MyStdClass extends stdClass {
    protected $data = [];
    public function __construct(array $array) {
        $this->data = $array;
    }
    public function __get($key) {
        return isset($this->data[$key]) ? $this->data[$key] : null;
    }
    public function __call($key, $args = []) {
        if (isset($this->data[$key])) {
            $test = $this->data[$key];
            // not an object = not an instance, skip!
            if (!is_object($test)) {
                return $this->__get($key);
            }
            if (!empty($args) && get_class($test) && method_exists($test, '__invoke')) {
                // or `return $test(...$args)`
                return call_user_func([$test, '__invoke'], ...$args);
            } 
        }
        return $this->__get($key);
    }
    public function __set($key, $value = null) {
        $this->data[$key] = $value;
    }
    public function __toString() {
        return json_encode($this->data);
    }
    public function __isset($key) {}
    public function __unset($key) {}
}
