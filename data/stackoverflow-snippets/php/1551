app.service('pager', ['$http', '$compile', '$q', '$templateCache', function($http, $compile, $q, $templateCache) {
var pages = {'Normal':['pag1.html', 'pag2.html'], 'Config':['config.html'],'Caixa': ['caixa.html']};
var pavailable = {'Normal':['pag1.html', 'pag2.html'], 'Config':['config.html'],'Caixa': ['caixa.html']};
var pinuse = [];
var template = {'pag1.html':'none','pag2.html':'none','pag3.html':'none','pag4.html':'none','pag5.html':'none','pag6.html':'none','config.html':'none','caixa.html':'none'};
return {
    getPages: function(type){return pavailable[type];},
    setPages: function(type, page){pavailable[type].splice(pavailable[type].indexOf(page),1);pinuse.push(page);},
    closePages: function(type, page) { pinuse.splice(pinuse.indexOf(page),1);pavailable[type].push(page);},
    getinuse: function(){return pinuse;},
    setTemplate: function(page, url, scope){
        var deferred = $q.defer(); template[page]=url; if(page==undefined || url=='none') $templateCache.put(page, '<p>none</p>'); 
        else $http.get(url).then(function(response){$templateCache.put(page, response.data);deferred.resolve($compile($templateCache.get(page))(scope));});
        return deferred.promise;
    },
    getTemplate: function(page){return $templateCache.get(page);}
}
}]); 
