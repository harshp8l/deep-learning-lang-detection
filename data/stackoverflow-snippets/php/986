 $id_order_state = (int)$order->getCurrentState();
            $carrier = new Carrier((int)$order->id_carrier, (int)$order->id_lang);
            $addressInvoice = new Address((int)$order->id_address_invoice);
            $addressDelivery = new Address((int)$order->id_address_delivery);

            $inv_adr_fields = AddressFormat::getOrderedAddressFields($addressInvoice->id_country);
            $dlv_adr_fields = AddressFormat::getOrderedAddressFields($addressDelivery->id_country);

            $invoiceAddressFormatedValues = AddressFormat::getFormattedAddressFieldsValues($addressInvoice, $inv_adr_fields);
            $deliveryAddressFormatedValues = AddressFormat::getFormattedAddressFieldsValues($addressDelivery, $dlv_adr_fields);

            if ($order->total_discounts > 0) {
                $this->context->smarty->assign('total_old', (float)$order->total_paid - $order->total_discounts);
            }
            $products = $order->getProducts();

            /* DEPRECATED: customizedDatas @since 1.5 */
            $customizedDatas = Product::getAllCustomizedDatas((int)$order->id_cart);
            Product::addCustomizationPrice($products, $customizedDatas);

            OrderReturn::addReturnedQuantity($products, $order->id);
            $order_status = new OrderState((int)$id_order_state, (int)$order->id_lang);

            $customer = new Customer($order->id_customer);
