privat $event;

public function preUpdate(LifecycleEventArgs $args)
{
if (php_sapi_name()!='cli') {

    $entity = $args->getEntity();
    $entityManager = $args->getEntityManager();

    // perhaps you only want to act on some ""User"" entity
    if ($entity instanceof User) {

        if($args->hasChangedField('password')){
            //log as eventlog
            $this->event = new \My_Project\UserBundle\Entity\EventLog();
            $this->event->setEventInfo(UserEventLogParams::$PASSWORD_CHANGE);
            $this->event->setIp($this->container->get('request')->getClientIp());
            $this->event->setUserId($entity->getId());

        }
    }
}
}

public function postUpdate(LifecycleEventArgs $args)
{
    $entityManager = $args->getEntityManager();
    $entityManager->persist($this->event);
    $entityManager->flush();
}
