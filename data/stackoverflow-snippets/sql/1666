class ItemProvider

  attr_reader :keyword, :filters

  FACET_CONTENT_TO_SEARCH = %w[summary description]

  def initialize(keyword, filters)
    @keyword = keyword
    @filters = filters
  end

  def retrieve
    @items = Item.all

    filter_by_keyword
    filter_items
  end

  private

  def filter_by_keyword
    return @items if keyword.blank?

    @items = @items
      .joins(:facets)
      .where('facets.identifier' => FACET_CONTENT_TO_SEARCH)
      .where('items.label LIKE ? OR facets.content LIKE ?', "%#{keyword}%", "%#{keyword}%").uniq
  end

  def filter_items
    return @items if filters.blank?

    filters_to_hash.each do |filter, value|
      @items = Item
      .unscoped
      .select("items.*")
      .joins("INNER JOIN facets ON facets.facetable_id = items.id AND facets.facetable_type = 'Item'")
      .where('facets.identifier' => filter)
      .where('facets.content' => value)
    end
  end

  def filters_to_hash
    filters.reduce({}) do |acc, filter|
      if acc[filter[:identifier]]
        acc[filter[:identifier]] << filter[:value]
      else
        acc[filter[:identifier]] = [filter[:value]]
      end
      acc
    end
  end
end
