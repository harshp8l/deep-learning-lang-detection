   SELECT 
             a.YOA YOA, 
             SUM(CASE a.Claim_Status_Type 
                   WHEN N'OPEN' 
                   THEN Cumulative_Total_Incurred_Cost*Exchange_Rate_Multiplier 
                   ELSE 0.0 END) AS Open_Cumulative_Total_Incurred_Cost,        
             SUM(CASE a.Claim_Status_Type 
                   WHEN N'CLOSED' 
                   THEN Cumulative_Total_Incurred_Cost*Exchange_Rate_Multiplier 
                   ELSE 0.0 END) AS Closed_Cumulative_Total_Incurred_Cost

   FROM   F_Claims_Monthly_Snapshot a 
             inner join Dim_period b on (b.Period_Key = a.Accounting_Period_Key)
             inner join tgt.Dim_BusinessDate c 
                on (b.Month_End_Date_Key = c.Business_Date_Key)
             inner join tgt.Dim_BusinessUnit h on (a.Business_Unit_Key = h.Business_Unit_Key)
             inner join tgt.Dim_Currency ccy on ccy.Currency_Key= a.Currency_Key
             inner join tgt.Dim_Currency input_curr on input_curr.Currency_Key = a.Currency_Key
             inner join tgt.Fct_CurrencyRate cr on cr.FROM_Currency_Key = a.Currency_Key and cr.Exchange_Date_Key = a.Month_End_Date_Key and Exchange_Rate_Type = 'Actual Rates'
             inner join tgt.Dim_Currency report_curr on report_curr.Currency_Key = cr.To_Currency_Key and report_curr.Currency_Code='GBP'
             inner join tgt.Dim_PRAClass i on (a.PRA_Class_Key=i.PRA_Class_Key)
             inner join tgt.Dim_MasterAgreement j on (a.Master_Agreement_Key = j.Master_Agreement_Key)
             inner join tgt.Dim_BusinessDate k on (a.Month_End_Date_Key = k.Business_Date_Key)

   WHERE   a.YOA between 2014 and 2018
     and left(convert(date,(cast(a.Month_End_Date_Key as char(10))),3),8) = left(convert(date,(cast(First_Cost_Movement_Date_Key as char(10))),3),8)
     and h.Business_Unit_name = 'Delegated Commercial'

   GROUP BY  a.YOA;
