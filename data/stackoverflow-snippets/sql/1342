declare @order table (rowid int identity, user_id varchar(max), day_session datetime, isconsecutive int)



 insert @order

 select distinct user_id, day_session, 

   case 

    when 

     lag(user_id, 1,0) over (order by user_id desc,                                     day_session)=user_id and 

     lag(day_session, 1,0) over 

  (order by user_id desc, day_session)=dateadd(dd,-1,day_session)  

    then 1 

    else 0 

   end 

from #temp 

order by user_id desc, day_session



declare @holding table (user_id varchar(max), consday int, day_session datetime)



declare @iterator int=1 

declare @userid varchar(max) 

declare @userid2 varchar(max) 

declare @isconsecutive int=1 

while @iterator<=(select max(rowid) from @order)

begin   

  select @userid=user_id, @isconsecutive=isconsecutive  

  from @order 

  where rowid=@iterator

if @isconsecutive=0 and 

(select user_id from @order where rowid=@iterator-1)=

(select user_id from @order where rowid=@iterator)

select @userid2=@userid+'_'+cast(@iterator as varchar)



if (select user_id from @order where rowid=@iterator-1)<>(select user_id from @order where rowid=@iterator)

select @userid2=null



 insert @holding

 select isnull(@userid2, @userid) ,  isconsecutive, day_session

 from @order 

 where rowid=@iterator



 set @iterator=@iterator+1

 end 



select user_id, max(cnt) maxconsdays from(

select substring(user_id, 1, len(user_id)-charindex('_', reverse(user_id)))user_id, sum(consday)+1 cnt from @holding

group by user_id)a

group by user_id

order by user_id desc
