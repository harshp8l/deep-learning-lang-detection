WITH Splitted AS
(
    SELECT Id
          ,DOB 
          ,CAST('<x>' + REPLACE(DOB,'/','</x><x>') + '</x>' AS XML).value('/x[1]','varchar(10)') AS DOB_Day
          ,CAST('<x>' + REPLACE(DOB,'/','</x><x>') + '</x>' AS XML).value('/x[2]','varchar(10)') AS DOB_Month
          ,CAST('<x>' + REPLACE(DOB,'/','</x><x>') + '</x>' AS XML).value('/x[3]','varchar(10)') AS DOB_Year
    FROM @sample
)
,Casted AS
(
    SELECT Id
          ,DOB
           --below SQL-Server 2012 you can use `CASE` with `ISNUMERIC` instead of TRY_CAST
          ,TRY_CAST(DOB_Day AS INT)  AS CastedDay 
          ,TRY_CAST(DOB_Month AS INT)  AS CastedMonth
          ,TRY_CAST(DOB_Year AS INT)  AS CastedYear 
    FROM Splitted
)
,Checked AS
(
    SELECT Id
          ,DOB
          --You can use further logic to get the month's days correctly (instead of the plain 31)  
          ,CASE WHEN CastedDay BETWEEN 1 AND 31 THEN CastedDay ELSE NULL END AS TheDay
          ,CASE WHEN CastedMonth BETWEEN 1 AND 12 THEN CastedMonth ELSE NULL END AS TheMonth
          ,CASE WHEN CastedYear BETWEEN 1900 AND 2100 THEN CastedYear ELSE NULL END AS TheYear
    FROM Casted
)
SELECT *
FROM Checked; 
