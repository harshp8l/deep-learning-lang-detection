WITH rd ( range_month, range_day_cnt ) AS (
    SELECT TRUNC(range_dt, 'MONTH'), COUNT(*) FROM (
        SELECT start_dt + LEVEL - 1 AS range_dt
          FROM dual
       CONNECT BY start_dt + LEVEL - 1 < end_dt
    ) WHERE TO_CHAR(range_dt, 'DY') != 'SUN'
     GROUP BY TRUNC(range_dt, 'MONTH')
)
SELECT range_month, Sales_Category, Sales_Val_Monthly
     , range_day_cnt, working_day_cnt, Target_Value
     , Target_Value*range_day_cnt/working_day_cnt AS prorated_target_value
  FROM (
    SELECT r.range_month, r.range_day_cnt
         , EXTRACT( DAY FROM LAST_DAY( TRUNC(s.Sales_Date, 'MONTH') ) ) - CEIL( ( LAST_DAY(TRUNC(s.Sales_Date, 'MONTH')) - NEXT_DAY(TRUNC(s.Sales_Date, 'MONTH')-1, 'SUN') + 1 ) / 7 ) AS working_day_cnt
         , s.Sales_Category, SUM(s.Sales_Value) AS Sales_Val_Monthly
         , t.Target_Value -- Target_Month and Target_Category are superfluous
      FROM rd INNER JOIN Sales_Data s
        ON rd.range_month = TRUNC(s.Sales_Date, 'MONTH')
     INNER JOIN Target_Data t
        ON TO_CHAR(s.Sales_Date, 'MM') = t.Target_Month
       AND TO_CHAR(s.Sales_Date, 'YYYY') = t.Target_Year
       AND s.Sales_Category = t.Target_Category
     WHERE s.Sales_Date >= TRUNC(start_dt)
       AND s.Sales_Date < TRUNC(end_dt+1)
     GROUP BY r.range_month, r.range_day_cnt, s.Sales_Category, t.Target_Value
) ORDER BY range_month;
