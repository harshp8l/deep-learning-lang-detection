;With cte AS
(--we start with all records 
select [ID], [BranchID_New], [BranchID_Old],DateCreated,[BranchID_New] as [New_BranchID_New],cast('' as varchar(max)) as BranchPath 
from #Temp
UNION ALL
select c.[ID],c.[BranchID_New], c.BranchID_Old,c.DateCreated,t.BranchID_New as New_BranchID_New
,c.BranchPath+cast(c.New_BranchID_New as varchar(max))+'/'--we add the child's newest to the path, which means we will need to add then most new later.
from #Temp t
join cte c on c.New_BranchID_New=t.BranchID_Old and c.ID=t.ID
WHERE c.New_BranchID_New<>t.BranchID_New  --we avoid recusion over parents with the same parent
)
select [ID], [BranchID_New], [BranchID_Old],New_BranchID_New, DateCreated,BranchPath
into #NewBranches
from cte

--we need to remove all the lower hierarchy records, so we will delete them from the results
delete nb1
from #NewBranches nb1
join #NewBranches nb2 on nb1.ID=nb2.ID and nb1.BranchID_New=nb2.BranchID_New and nb1.BranchID_Old=nb2.BranchID_Old and nb1.DateCreated=nb2.DateCreated
where nb1.BranchPath<nb2.BranchPath

--we create the path based on hierarchy and add the BranchID_Newest
select ID, BranchID_New,BranchID_Old,DateCreated,New_BranchID_New as New_BranchID_New
,case when BranchID_New=New_BranchID_New then ''--current record is the newest
when BranchID_New<>New_BranchID_New then ''+BranchPath--keep path
end +cast(New_BranchID_New as varchar(max))+'/'
 as New_BranchID_New_Path
 from #NewBranches
 order by 1,2,3
