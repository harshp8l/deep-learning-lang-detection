        WITH derivedTable 
        AS 
        (
            SELECT {vLov}.LPR_VIGILANT_LOV_ID, 
            {vLov}.CAMERA, 
            {vLov}.LOCATION, 
            {vLov}.CREATED_DT, 
            ROW_NUMBER() OVER (Partition By {vLov}.CAMERA 
                                ORDER BY {vLov}.CREATED_DT DESC) rn 
            FROM {vLov}
        ) 
        SELECT LEFT({vData}.PLATE,7) AS Plates, 
        {vData}.SIGHTING_DT AS LPRReadDate,          
        derivedTable.LOCATION 
        FROM {vData} 
        INNER JOIN derivedTable ON {vData}.CAMERA = derivedTable.CAMERA 
        WHERE ({vData}.SIGHTING_DT >= @sdate AND {vData}.SIGHTING_DT <= @edate) 
        AND (LEN(COALESCE({vData}.PLATE,'')) = @slen1 OR LEN(COALESCE({vData}.PLATE,'')) = @slen2) 
        AND {vData}.PLATE NOT LIKE @rx1 
        AND {vData}.LOCATION = @lf 
        AND derivedTable.rn = 1 
        UNION 
        SELECT LEFT({EOCdata}.PLATE,7) AS Plates, 
            {EOCdata}.SIGHTING_DT AS LPRReadDate, 
            {EOClov}.LOCATION AS LPRLocation 
        FROM {EOCdata} 
        INNER JOIN {EOClov} ON ({EOCdata}.CAMERA = {EOClov}.CAMERA) AND ({EOCdata}.READER = {EOClov}.READER) 
        WHERE ({EOCdata}.SIGHTING_DT >= @sdate AND {EOCdata}.SIGHTING_DT <= @edate) 
        AND (LEN(COALESCE({EOCdata}.PLATE,'')) = @slen1 OR LEN(COALESCE({EOCdata}.PLATE,'')) = @slen2) 
        AND {EOCdata}.PLATE NOT LIKE @rx1 
        AND {EOCdata}.LOCATION = @lf 
