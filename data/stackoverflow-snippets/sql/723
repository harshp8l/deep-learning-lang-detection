--sample data
CREATE TABLE dbo.TallyTable (
      Id int
    , Date datetime
    , Lines int 
    , Amount decimal(18, 2)
    );
INSERT INTO dbo.TallyTable
VALUES
     (1, '2017-12-05', 1, 50.00)
    ,(2, '2017-12-06', 1, 150.00)
    ,(3, '2018-01-10', 1, 100.00)
    ,(4, '2018-01-11', 1, 100.00)
    ,(5, '2018-01-12', 1, 100.00)
    ,(6, '2018-03-15', 1, 225.00)
    ,(7, '2018-03-15', 1, 25.00)
    ,(8, '2018-03-15', 1, 50.00)
    ,(9, '2018-04-20', 1, 100.00);
GO

DECLARE @Months int = 5; --number of historical months
WITH
     t10 AS (SELECT n FROM (VALUES(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)) t(n))
    ,t100 AS (SELECT ROW_NUMBER() OVER (ORDER BY (SELECT 0)) - 1 AS num FROM t10 AS a CROSS JOIN t10 AS b)
    , periods AS (SELECT
              CONVERT(varchar(7), DATEADD(month, DATEDIFF(month, '', GETDATE()) - num, ''),121) AS Month
            , DATEADD(month, DATEDIFF(month, '', CAST(GETDATE() AS date)) - num, '') AS PeriodStart
            , DATEADD(month, DATEDIFF(month, '', CAST(GETDATE() AS date)) - num + 1, '') AS NextPeriodStart
        FROM t100
        WHERE num <= @Months
    )
SELECT periods.Month, COALESCE(SUM(Amount), 0) AS TotalAmount, COALESCE(COUNT(ID), 0) AS TotalCount
FROM periods
LEFT JOIN dbo.TallyTable ON
    TallyTable.Date >= PeriodStart
    AND TallyTable.Date < NextPeriodStart
GROUP BY periods.Month
ORDER BY periods.Month;
