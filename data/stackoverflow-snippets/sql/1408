Delimiter //

Create Procedure sp_RingAccounts (in Radius int, in Latitude decimal(9,6), in Longitude decimal(9,6))

Begin

Select
   *
From

          (
        Select
          b.ID,
          b.ContractID,
          b.InsuredName,
          b.UserDefined1,
          b.Line,
          b.Limit,
          b.Excess,
          b.Deductible,
          sum(b.TIV) TIV,
            case 
            when sum(b.TIV) - (b.Excess + b.Deductible) >= b.Limit then (b.Limit * b.Line)
            when sum(b.TIV) - (b.Excess + b.Deductible) < b.Limit and sum(b.TIV) - (b.Excess + b.Deductible) > 0 then (sum(b.TIV) - (b.Excess + b.Deductible)) * b.Line
            when sum(b.TIV) - (b.Excess + b.Deductible) <= 0 then 0 end Exposure$
        From

                (
                Select
                  a.ID,
                  a.ContractID,
                  a.InsuredName,
                  a.UserDefined1,
                  a.Line,
                  a.Limit,
                  a.Excess,
                  a.Deductible,
                  TIV
                From

                      (
                        Select
                            a.ID,
                            a.ContractID,
                            a.InsuredName,
                            a.UserDefined1,
                            a.Line,
                            a.Limit,
                            a.Excess,
                            a.Deductible,
                            TIV,
                            case when cos(radians(l.Latitude))*cos(radians(Latitude))* cos(radians(Longitude)- radians(l.Longitude))+ sin(radians(l.Latitude))* sin(radians(Latitude)) > 1 
                                then sign(cos(radians(l.Latitude))*cos(radians(Latitude))* cos(radians(Longitude)- radians(l.Longitude))+ sin(radians(l.Latitude))* sin(radians(Latitude))) 
                                else (6378100 * acos(cos(radians(l.Latitude))*cos(radians(Latitude))* cos(radians(Longitude)- radians(l.Longitude))+ sin(radians(l.Latitude))* sin(radians(Latitude)))) 
                                end Distance
                        From
                            Location l
                            inner join Account a on a.ID = l.ID
                            )a
                        Where
                          a.Distance <= Radius

                )b

        Group by
          b.ID,
          b.ContractID,
          b.InsuredName,
          b.UserDefined1,
          b.Line,
          b.Limit,
          b.Excess,
          b.Deductible
        )c
Where
  c.Exposure$ > 0 ;

End ;

 //
 Delimiter ;
