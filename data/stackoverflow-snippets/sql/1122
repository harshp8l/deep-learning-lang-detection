/*******************CALENDAR*******************/
/* The calendar table is for general use in your database, so add whatever calculations you need. */
/* dim is just a holding table for intermediate calculations. */
CREATE TABLE #dim (
      theDate           date        PRIMARY KEY
    , theDay            AS DATEPART(day, theDate)           --int
    , theWeek           AS DATEPART(week, theDate)          --int 
    , theMonth          AS DATEPART(month, theDate)         --int
    , theYear           AS DATEPART(year, theDate)          --int
    , yyyymmdd          AS CONVERT(char(8), theDate, 112)   /* yyyymmdd */
    , mm_dd_yy          AS CONVERT(char(10), theDate, 101)  /* mm/dd/yyyy */
);

/****************************************************************************************************************/
/* Use the catalog views to generate as many rows as we need. */

INSERT INTO #dim ( theDate ) 
SELECT d
FROM (
    SELECT d = DATEADD(day, rn - 1, '20180101')
    FROM 
    (
        SELECT TOP (DATEDIFF(day, '20180101', '20190101')) 
            rn = ROW_NUMBER() OVER (ORDER BY s1.object_id)
        FROM sys.all_objects AS s1
        CROSS JOIN sys.all_objects AS s2
        ORDER BY s1.object_id
    ) AS x
) AS y;

/* Now create the final ref table for the dates. */
CREATE TABLE refDateDimension
(
      DateKey             int         NOT NULL PRIMARY KEY
    , theDate             date        NOT NULL
    , theDay              tinyint     NOT NULL  
    , theMonth            tinyint     NOT NULL
    , theYear             int         NOT NULL
    , isWeekend           bit         DEFAULT 0
    , isHoliday           bit         DEFAULT 0
    , isWorkDay           bit         DEFAULT 0
);

/* Insert data in the dimension table. */
INSERT INTO refDateDimension WITH (TABLOCKX)
SELECT
      DateKey              = CONVERT(int, yyyymmdd)
    , theDate              = theDate
    , theDay               = CONVERT(tinyint, theDay)
    , theMonth             = CONVERT(tinyint, theMonth)
    , theYear              = theYear
    , isWeekend            = CONVERT(bit, CASE WHEN DATEPART(dw,theDate) IN (1,7) THEN 1 ELSE 0 END)
    , isHoliday            = CONVERT(bit, CASE WHEN theDate IN ('2018-01-01','2018-07-01','2018-12-25') THEN 1 ELSE 0 END) /* New Years, Independence Day and Christmas. Calc others. */
    , isWorkday            = NULL
FROM #dim
OPTION (MAXDOP 1);

/* If not a weekend or holiday, it's a WorkDay. */
UPDATE refDateDimension 
SET isWorkDay = CASE WHEN isWeekend = 0 AND isHoliday = 0 THEN 1 ELSE 0 END
;

/* CLEANUP */
DROP TABLE #dim ;
/****************************************************************************************************************/
