

    CREATE OR REPLACE FUNCTION update_text_columns_newline(target_schema text)
    RETURNS void  
    AS $$
    DECLARE
              r      information_schema.columns%ROWTYPE;   
              _sql text := ' ';
              _new_line_character varchar;
    BEGIN

    FOR r IN
        select table_schema, table_name, column_name
        from information_schema.columns
        where upper(data_type) = 'TEXT'
        and UPPER(table_schema) = upper(target_schema)
    LOOP

    _sql = _sql + ' UPDATE ' || quote_ident(r.table_schema) || '.' || quote_ident(r.table_name) || ' SET   ' || quote_ident(r.column_name) || ' =  REPLACE(' || quote_ident(r.column_name) || ', ' || quote_literal(_new_line_character) || ', CHR(10));';                

    END LOOP;

    EXECUTE _sql;
    END;
    $$ LANGUAGE plpgsql;

