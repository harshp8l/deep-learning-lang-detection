// Very inefficient, can't handle sub expressions, no error reporting...
//  Please use this as an illustration only, not production code
let stupidParse =
  let split (c: char) (s: string) = s.Split c
  let trim (s: string) = s.Trim ()
  let op c r f  = split c >> Seq.map (trim >> f) >> Seq.reduce r
  int |> op '/' (/) |> op '*' (*) |> op '-' (-) |> op '+' (+)

[<EntryPoint>]
let main argv = 
  let examples = [| "1"; "1-3"; "1*3"; "1 + 2*3 - 2" |]
  for example in examples do
    printfn "%s -> %d" example <| stupidParse example
  0
