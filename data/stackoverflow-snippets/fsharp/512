let packWhile predicate list =
  let folder item = function
  | []                          -> [[ item ]]
  | (subHead :: _ as subList) :: accTail
    when predicate item subHead -> (item :: subList) :: accTail
  | accList                     -> [ item ] :: accList

  List.foldBack folder list []

// usage (you can replace (<=) by (fun x y -> x <= y) if it's clearer for you)
packWhile (<=) [1;2;3;5;6;3;2;5;6;3]

// you can also define a function to bake-in the comparison
let packIncreasing list = packWhile (<=) list
packIncreasing [1;2;3;5;6;3;2;5;6;3]
