let justDoIt (attributes : Attribute list) : Result = 

  let result =  { 
                   a = Array.empty;  
                   b = Array.empty 
                 }

  let accumulate (a : Attribute) (accum : Result) : Result =
       match a with
       | A o -> { accum with a = Array.append (accum.a) [|o|] } // don't need to cast as 'o' is already of type 'A'
       | B o -> { accum with b = Array.append (accum.b) [|o|] } 
       | None -> accum                        

  let rec foo (attributes : Attribute list) (accum : Result) : Result =
       match attributes with
       | [] -> accum
       | hd::tail -> foo tail (accumulate hd accum)             

  foo attributes result
