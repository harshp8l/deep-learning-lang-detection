  // simple add function
  let add (a1 : int) (a2 : int) (a3 : int) = a1 + a2 + a3

  // what I want to achieve
  let result = match [1; 2; 3] with | [a;b;c] -> add a b c // pattern matching works on lists

  // or
  let result' = let (a,b,c) = (1, 2, 3) in add a b c // unpacking tuples

  // flattening list
  let a = [1; 2; 3]
  let b =                            // sequence expressions with yield!
    seq {
        yield! a
        yield 4
        yield 5
      } |> Seq.toList

  let c = [4; 5]
  let b' = 
    seq {
        yield! a
        yield! c
      } |> Seq.toList
