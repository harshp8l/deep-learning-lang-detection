let rec quicksort (A:int[]) = 

    let swap a b =
        let tmp = A.[a]
        A.[a] <- A.[b]
        A.[b] <- tmp

    let todo =  ... (* empty list *)

    let rec partition low high = 
       .... (* run the swapping loop, 
               find the two new pairs of indices,
               put one into TODO and call *)
       partition new_low new_high

    let L = A.Length

    match L with 
     | 1 -> (* do nothing   A *)
     | 2 -> count <- count + 1
            if (A.[0]<A.[1]) then (* do nothing   A *)
               else (* [|A.[1];A.[0]|] *) swap 1 0

     | x -> ....
            partition 0 L
