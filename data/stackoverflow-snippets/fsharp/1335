let getProp name x = 
    x.GetType().InvokeMember(
        name, BindingFlags.Public ||| BindingFlags.InvokeMethod |||
            BindingFlags.Instance ||| BindingFlags.GetProperty, null, x, null )

let rec PrintMap x = 
    match x.GetType().GetInterface ""IDictionary`2"" with
    | null -> sprintf ""%A"" x
    | _ ->
        let sb = StringBuilder()
        sb.Append ""{ "" |> ignore
        for o in unbox<System.Collections.IEnumerable> x do
            let (k, v) = getProp ""Key"" o, getProp ""Value"" o
            sb.AppendLine(sprintf ""%s => %s"" (string k) (PrintMap v)) |> ignore
        sb.Append "" }"" |> ignore
        string sb

dict[""k1"", dict[""k2"", dict[""k3"", ""foo""]]]
|> PrintMap
