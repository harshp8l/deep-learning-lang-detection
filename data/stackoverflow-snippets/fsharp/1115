let MyFunction1 x = 
    let workingVariable1 = x + 1
    let workingVariable2 = workingVariable1 + 1
    let y = workingVariable2 + 1
    y,workingVariable1,workingVariable2

MyFunction1 2 |> printfn "%A"

type OneType()=
    member val Y = 0 with get,set
    member val WV1 = 0 with get,set
    member val WV2 = 0 with get,set

    override this.ToString() =
        sprintf "Y: %d; WV1: %d; WV2: %d\n" this.Y this.WV1 this.WV2

let MyFunction2 x = 
    let workingVariable1 = x + 1
    let workingVariable2 = workingVariable1 + 1
    let y = workingVariable2 + 1
    new OneType(Y=y,WV1=workingVariable1,WV2=workingVariable2)

MyFunction2 2 |> printfn "%A"
