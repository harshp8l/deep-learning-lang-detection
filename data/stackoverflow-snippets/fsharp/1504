// Step 1 - pseudo-code with tail recursion substituted by goto
let find(words:string[]) (value:string) =
    let mutable fpos = 0
    let mutable lpos = words.Length - 1
    findRec:
        match fpos - lpos > 0 with
        | true -> return false
        | _ -> let mid = (fpos + lpos) / 2
               match sign(value.CompareTo(words.[mid])) with
               | -1 -> lpos <- mid - 1
                       goto findRec
               | 1 ->  fpos <- mid + 1
                       goto findRec
               | _ -> return true
