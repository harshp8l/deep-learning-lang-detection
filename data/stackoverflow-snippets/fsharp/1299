// We inherit from this type later, so I moved it to an earlier location in the file
type IRepository<'T> =
  // Read-only properties are easier to define in F#
  abstract All : IQueryable<'T>
  // Annotating parameter with the 'params' attribute and also specifying param name
  abstract AllIncluding 
    : [<ParamArray>] includeProperties:Expression<Func<'T, obj>>[] -> IQueryable<'T>


type IDinnerRepository =
  // Inherit from another interface
  inherit IRepository<Dinner>

  // And add a bunch of other members (here I did not specify parameter names)
  abstract FindUpcomingDinners : unit -> IQueryable<Dinner>
  abstract FindDinnersByText : string -> IQueryable<Dinner>
