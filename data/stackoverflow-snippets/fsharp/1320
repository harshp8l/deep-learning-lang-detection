type MyClass() =
    let random  = new System.Random() 
    [<DefaultValue>] val mutable field : int
    member val AutoProperty = random.Next() with get, set
    member this.ExplicitProperty = random.Next()

let c = new MyClass()
// class1.random is not accessible
c.field <- 42 // 'field' is accessible

// An automatic property is only evaluated upon initialization, and not every time the property is accessed
printfn ""AutoProperty = %d"" c.AutoProperty // x
printfn ""AutoProperty = %d"" c.AutoProperty // Still x

// The value of the explicit property is evaluated each time
printfn ""ExplicitProperty = %d"" c.ExplicitProperty // y
printfn ""ExplicitProperty = %d"" c.ExplicitProperty // The value is re-evaluated so you'll get a different value
