type PersonService(context: IDataContext) =
    member this.GetPerson(personId) = 
        async {
            // get the actual context object
            let! person = Async.AwaitTask
                           (query { for p in context.Persons do
                                    where (p.Id = personId)
                                    select (p.Id, p.Name)
                            }).FirstOrDefaultAsync()

            // map context object, if it's not null
            if obj.ReferenceEquals(person, null)
                then return None
                else return person |> (fun (id, name) -> Some ({ Id = id; Name = name }))
        } |> Async.StartAsTask
