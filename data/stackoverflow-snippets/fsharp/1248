let rec readBranch checkOne readInner acc = function
    | h :: t when checkOne h ->
        let dat, inp' = readInner t
        readBranch checkOne readInner ((h, dat) :: acc) inp'
    | l -> List.rev acc, l

let rec readCs acc = function
    | C(s) :: t -> readCs (C(s) :: acc) t
    | l -> List.rev acc, l

let readBs = readBranch (function B _ -> true | _ -> false) (readCs []) []
let readAs = readBranch (function A _ -> true | _ -> false) readBs []

input |> readAs |> fst
