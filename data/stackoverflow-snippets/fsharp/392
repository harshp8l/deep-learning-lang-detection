type TotalSizeToken<'u> = TotalSizeToken of 'u with
    static member TotalSize(x: TotalSizeToken<int*int*int*int*int>): int = 
        match x with TotalSizeToken (a,b,c,d,e) -> a*b*c*d*e
    static member TotalSize(x: TotalSizeToken<int*int*int*int>): int = 
        match x with TotalSizeToken (a,b,c,d) -> a*b*c*d
    static member TotalSize(x: TotalSizeToken<int*int*int>): int = 
        match x with TotalSizeToken (a,b,c) -> a*b*c
    static member TotalSize(x: TotalSizeToken<int*int>): int = 
        match x with TotalSizeToken (a,b) -> a*b
    static member TotalSize(x: TotalSizeToken<int>): int = 
        match x with TotalSizeToken x -> x

let inline size_to_total_size x = 
    ((^s) : (static member TotalSize: ^s -> int) x)

let t = size_to_total_size (TotalSizeToken(1,5))
