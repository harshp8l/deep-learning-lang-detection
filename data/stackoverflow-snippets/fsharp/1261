#r@""DocumentFormat.OpenXml.dll""
#r""WindowsBase.dll""
open DocumentFormat.OpenXml
open DocumentFormat.OpenXml.Packaging
open DocumentFormat.OpenXml.Wordprocessing
open System.Linq
// Add the DocumentFormat.OpenXml assembly
// Add the WindowsBase assembly

module public Word =

    let query_plain_text_content_control document_path_and_file_name content_control_tag =
        use theDoc = WordprocessingDocument.Open((document_path_and_file_name :string), true)
        let mainPart = theDoc.MainDocumentPart
        let block = mainPart.Document.Body.Descendants<SdtElement>().Where(fun r -> r.SdtProperties.GetFirstChild<Tag>().Val.ToString() = content_control_tag).Single()
        let t = block.Descendants<Text>().FirstOrDefault()
        t.Text

    let update_plain_text_content_control document_path_and_file_name content_control_tag new_text = async {
        use theDoc = WordprocessingDocument.Open((document_path_and_file_name :string), true)
        let mainPart = theDoc.MainDocumentPart
        let block = mainPart.Document.Body.Descendants<SdtElement>().Where(fun r -> r.SdtProperties.GetFirstChild<Tag>().Val.ToString() = content_control_tag).Single()
        let t = block.Descendants<Text>().FirstOrDefault()
        t.Text <- new_text
        mainPart.Document.Save() |> ignore
    }
    let oldtext = query_plain_text_content_control @"".\text.docx"" ""ctrltag""

    let update = update_plain_text_content_control @"".\text.docx"" ""ctrltag"" ""new text""
    Async.RunSynchronously(update)
    let newtext = query_plain_text_content_control @"".\text.docx"" ""ctrltag""
