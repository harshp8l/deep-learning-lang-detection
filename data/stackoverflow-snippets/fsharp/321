open System
open System.Diagnostics
open System.Globalization

let clock =
  let sw = Stopwatch ()
  sw.Start ()
  fun () ->
    sw.ElapsedMilliseconds

let time a =
  let before  = clock ()
  let v       = a ()
  let after   = clock ()
  after - before, v

let perfTest c cf () =
  let dateTimeStyles = DateTimeStyles.AllowWhiteSpaces ||| DateTimeStyles.RoundtripKind
  let text = DateTime.Now.ToString ("""", cf ())
  for i = 1 to c do
    let culture = cf ()
    DateTime.TryParse(text, culture, dateTimeStyles) |> ignore

[<EntryPoint>]
let main argv = 
  Environment.CurrentDirectory <- AppDomain.CurrentDomain.BaseDirectory

  let ct    = ""sv-SE""
  let cct   = CultureInfo ct
  let count = 10000

  printfn ""Using cached CultureInfo object...""
  let ms, _ = time (perfTest count (fun () -> cct))
  printfn ""  took %d ms"" ms

  printfn ""Using fresh CultureInfo object...""
  let ms, _ = time (perfTest count (fun () -> CultureInfo ct))
  printfn ""  took %d ms"" ms

  0
