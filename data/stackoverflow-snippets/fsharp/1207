// Sample data set with a bunch of parties
let election =
 [ "Party A", 304
   "Party B", 25 
   "Party C", 570
   "Party Y", 2
   "Party Z", 258 ]
 |> series

// Sort the data by -1 times the value (descending)
let byVotes = election |> Series.sortBy (~-)
// Create a set with top 3 keys (for efficient lookup)
let top3 = byVotes |> Series.take 3 |> Series.keys |> set

// Group the series using key selector that tries to find the party in top3
// and using an aggregation function that sums the values (for one or multiple values)
byVotes |> Series.groupInto 
    (fun k v -> if top3.Contains(k) then k else "Other")
    (fun k s -> s |> Series.mapValues float |> Stats.sum)
