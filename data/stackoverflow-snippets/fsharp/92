let fileReplace (filename : string) (needle : string) (replace : string) : unit = 
    try // uses try-with to catch fail-cases
        let lines = 
            [ use file = IO.File.OpenText filename // uses OpenText
              while not file.EndOfStream do // runs through the file 
                yield file.ReadLine().Replace(needle, replace)
            ]
        use writer = IO.File.CreateText filename // creates the file 
        for line in lines do
            writer.WriteLine line
    with
        _ -> failwith ""Something went wrong opening this file"" // uses failwith exception
