open System
[<AttributeUsage(AttributeTargets.Property)>]
type PrimaryKeyAttribute() =
    inherit Attribute()
[<CLIMutable()>]
type Customer =
    {
        [<PrimaryKey>] 
        Id: int
        Name: string
    }
let getPrimaryKey<'T, 'U when 'U:> IComparable> (): 'T -> 'U =
    printfn ""Starting to search for keys.""
    typeof<'T>.GetProperties()
    |> Seq.tryFind (fun p -> 
        let attr = p.GetCustomAttributes(typeof<PrimaryKeyAttribute>, false)
        attr.Length > 0
    )
    |> function 
        | Some p -> 
            (fun t -> p.GetMethod.Invoke(t, [| |]) :?> 'U)
        | _ -> failwith ""No PrimaryKey attribute found""
