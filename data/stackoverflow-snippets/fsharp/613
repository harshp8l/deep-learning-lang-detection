let rec chunk inseq (accumelem,accumlist) = 
    match inseq with
    |(a,b)::c -> 
        match accumelem with
        |Some(t) -> if t=a then chunk c (accumelem,b::accumlist) else (t,accumlist)::(chunk c (Some(a),b::[]))
        |None -> chunk c (Some a,b::[])
    |[] ->         
        match accumelem with
        |Some(t) -> (t,accumlist)::[]
        |None -> []


chunk [(""a"", 1); (""a"", 2); (""a"", 111); (""bb"", 1); (""bb"", -1); (""a"", 5);(""a"", 6)] (None,[])

val it : (string * int list) list =
     [(""a"", [111; 2; 1]); (""bb"", [-1; 1]); (""a"", [6; 5])]
