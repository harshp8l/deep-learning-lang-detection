type MainViewModel() as self = 
    inherit ViewModelBase()    

    let temp = self.Factory.Backing(<@ self.TEMP @>, "")
    let ph = self.Factory.Backing(<@ self.PH @>, "")
    let soil = self.Factory.Backing(<@ self.SOIL @>, "")
    let slope = self.Factory.Backing(<@ self.SLOPE @>, "")
    let aspect = self.Factory.Backing(<@ self.ASPECT @>, "")

    let display = self.Factory.Backing(<@ self.Display @>, "")

    let go() = 
        self.Display <- sprintf "The data that has been enter is:\n%s,\n %s,\n %s,\n %s,\n %s" 
            self.TEMP self.PH self.SOIL self.SLOPE self.ASPECT

    let goCommand = self.Factory.CommandSync(go)

    member x.TEMP with get() = temp.Value and set value = temp.Value <- value
    member x.PH with get() = ph.Value and set value = ph.Value <- value
    member x.SOIL with get() = soil.Value and set value = soil.Value <- value
    member x.SLOPE with get() = slope.Value and set value = slope.Value <- value
    member x.ASPECT with get() = aspect.Value and set value = aspect.Value <-value
    member x.Display with get() = display.Value and set value = display.Value <- value
    member x.GoCommand = goCommand 
