// All instances of this specified month/day beginning with 'start'.
let myDate (dw:System.DayOfWeek) (start:System.DateTime) =
    // Start with a sequence of one date for each year...
    seq {
        // Don't run the date past DateTime.MaxValue, there lurks an
        // ArgumentOutOfRangeException. Comparison also must be on the
        // valid side of DateTime.MaxValue. Don't bother with try/with
        // here in a sequence expression, you can't do that.
        let maxDateBarrier = DateTime.MaxValue.AddYears(-1)
        let mutable keepGoing, date = true, start

        while keepGoing do
            yield date

            // if date.Year % 100 = 0 then printfn ""%A"" date.Year

            if date <= maxDateBarrier then
                date <- date.AddYears(1)
            else
                keepGoing <- false
    }
    |> Seq.where (fun date -> date.DayOfWeek = dw)
