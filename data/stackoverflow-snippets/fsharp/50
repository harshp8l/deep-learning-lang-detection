#I __SOURCE_DIRECTORY__
#r @"..\packages\MathNet.Numerics.3.8.0\lib\net40\MathNet.Numerics.dll"
#r @"..\packages\MathNet.Filtering.0.4.0\lib\net40\MathNet.Filtering.dll"
#load @"..\packages\FSharp.Charting.0.91.1\lib\net45\FSharp.Charting.fsx"

open FSharp.Charting
open MathNet.Numerics
open MathNet.Filtering
open System.Drawing

let length, samplingRate,  amplitude = 250, 44100.,20.
let lo = Generate.Sinusoidal(length,samplingRate,1000.,amplitude)
let hi = Generate.Sinusoidal(length,samplingRate,15000.,amplitude/3.)
let sumLoHi = lo |> Array.map2 (+) hi
let fs ,fcut, order = 44100., 5000., 10
let lowPass2 = MathNet.Filtering.OnlineFilter.CreateLowpass(MathNet.Filtering.ImpulseResponse.Finite,fs,fcut,order)
let filtered = sumLoHi |> lowPass2.ProcessSamples
Chart.Combine([Chart.Line(lo, Name="lo", Color=Color.DarkBlue);
               Chart.Line(sumLoHi, Name="sumLoHi", Color=Color.LightSkyBlue);
               Chart.Line(filtered, Name="filtered", Color=Color.Purple)])
|> Chart.WithLegend(Title="Combined",Docking=ChartTypes.Docking.Bottom)
