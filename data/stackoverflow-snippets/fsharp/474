let rec findGovernment (gov : Government)
                       (governmentStructure : GovernmentStructure<Government> list) =
    [
        for x in governmentStructure do
            match x with
            | Root(gov', subGov) ->
                if gov = gov' then yield gov' else yield findGovernment gov subGov
            | Node(gov', subGov) ->
                if gov = gov' then yield gov' else yield findGovernment gov subGov
            | Leaf(gov') ->
                if gov = gov' then yield gov'
    ] |> List.head
