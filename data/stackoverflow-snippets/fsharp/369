let transform (x:Source) : List<Target> =
    if x.Group = A then
        let init x ntype nvalue =
            {
                Group = x.Group
                Typ = x.Typ
                Value = x.Value
                NType = ntype
                NValue = nvalue
            }
        let tp0 :: tp1 :: _ = x.Typ.split('/')
        // Swap order X/Y -> Y/X.
        if tp0 = ""X"" && tp1 <> ""X"" then
            [init x (tp1 + ""/X"") (x.value / 10)]
        // Split row into two rows Z/Y -> {Z/X, Y/X}.
        elif tp0 <> ""X"" && tp1 <> ""X""
            [
                init x (tp0 + ""/X"") (x.value * 2)
                init x (tp1 + ""/X"") (x.value * 3)
            ]
        else
            [x]
    else
        [x]
