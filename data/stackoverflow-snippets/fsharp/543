type Quote = {QuoteNum: decimal option; ShipToID: decimal option}
type Sales = {SalesNum: decimal option; ShipToID: decimal option}

let inline fx (y: Map<decimal option, 'a list>) = 
    let inline getId x = ( ^a : (member ShipToID : decimal option) x)

    y |> Map.map (fun key list -> list |> List.map getId)


let q : Quote = { QuoteNum = None; ShipToID = None}
let s : Sales = { SalesNum = None; ShipToID = None}

fx <| Map.ofList [ None, [q]]
fx <| Map.ofList [ None, [s]]
