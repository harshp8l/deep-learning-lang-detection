[<AutoOpen>]
module Score = 

    type Score = private InvalidScore | ValidScore of int<pts> with
       static member Create n = 
          if n > 11<pts> then InvalidScore else ValidScore n
       member this.GetPoints = 
          match this with 
          | InvalidScore -> None 
          | ValidScore x -> Some x

    let (+) s1 s2 = 
       match (s1, s2) with
       | ValidScore a, ValidScore b when (a + b) <= 11<pts> -> ValidScore (a + b)
       | _ -> InvalidScore


let x = ValidScore 12<pts> // won't compile

let y = Score.Create 12<pts> // compiles, but if you call y.GetPoints you get None
