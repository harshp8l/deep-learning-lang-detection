open System.Runtime.InteropServices

type uint32_t = uint32 // likely correct type, but you must check
type MMAL_STATUS_T = int32 // replace with correct type
type MMAL_PORT_T = int32 // replace with correct type

#nowarn "9"
[<Struct; StructLayout(LayoutKind.Sequential)>]
type MMAL_BUFFER_HEADER_T =
    val next: MMAL_BUFFER_HEADER_T ref // will ref work here, or should it be byref<MMAL_BUFFER_HEADER_T>?
    val priv: nativeint // or you could use a type (with ref?) here also
    val cmd: uint32_t // assuming uint32_t is uint32
    // etc
    val typ: MMAL_BUFFER_HEADER_TYPE_SPECIFIC_T ref
    val user_data: nativeint // void pointer in C

[<DllImport("SomeDll.dll", CallingConvention=CallingConvention.Cdecl)>]
extern MMAL_STATUS_T mmal_port_event_get(MMAL_PORT_T port, MMAL_BUFFER_HEADER_T& buffer, uint32_t event)
