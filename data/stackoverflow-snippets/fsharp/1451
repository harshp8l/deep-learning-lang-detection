let toShape list =
    match list with
    | Label(""Circle"") :: Number(x) :: Number(y) :: Number(diam) :: Label(colorName) :: [] ->
        Circle({X = x; Y = y; Diameter = diam; Brush = new SolidBrush(Color.FromName(colorName)); })
    | Label(""Circle"") :: rest -> raise <| new ArgumentException(""parse error:expected Circle num num num color but got "" + list.ToString())
    | Label(""Square"") :: Number(x) :: Number(y) :: Number(length) :: Number(height) :: Label(colorName) :: [] ->
        Square({X = x; Y = y; Length = length; Height = height; Brush = new SolidBrush(Color.FromName(colorName)); })
    | Label(""Square"") :: rest -> raise <| new ArgumentException(""parse error:expected Square num num num num color but got "" + list.ToString())
    | _ -> raise <| new ArgumentException(""parse error: unknown shape: "" + list.ToString())
