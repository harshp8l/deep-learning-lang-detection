type Person (name) =
    member this.Name : string = name

type Student (name, university) =
    inherit Person (name)
    member this.University : string = university

type Adult (name, job) =
    inherit Person (name)
    member this.Job : string = job

let greet (person : Person) =
    match person with
    | :? Student as student -> printfn ""Hello, %s of %s"" student.Name student.University
    | :? Adult   as adult   -> printfn ""Hello, %s.  I hope you enjoy working at %s!"" adult.Name adult.Job
    | _                     -> printfn ""Nice to meet you, %s"" person.Name
