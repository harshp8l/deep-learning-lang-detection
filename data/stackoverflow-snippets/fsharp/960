let sep10 = System.DateTime(2015,9,10)

type Money =
    | DKK of decimal
    | JPY of decimal

type Expense = {
    name: string
    quantity: int
    amount: Money
    date : System.DateTime
}

type RatesTime = { JPY_TO_DKK : decimal ; DKK_TO_JPY : decimal ; Date : System.DateTime}

let rates_sep10Tosep12 = [
    { JPY_TO_DKK = 1773.65m ; DKK_TO_JPY = 5.36m ; Date = sep10}
    { JPY_TO_DKK = 1779.42m ; DKK_TO_JPY = 5.31m ; Date = sep10.AddDays(1.0)}
    { JPY_TO_DKK = 1776.07m ; DKK_TO_JPY = 5.33m ; Date = sep10.AddDays(2.0)}
    ]

let travel_expenses = [
    { name = ""flight tickets""; quantity = 1; amount = DKK 5000m; date =sep10 }
    { name = ""shinkansen ->""; quantity = 1; amount = JPY 10000m; date = sep10.AddDays(1.0)}
    { name = ""shinkansen <-""; quantity = 1; amount = JPY 10000m ; date = sep10.AddDays(2.0)}
]

let IN_DKK (rt : RatesTime list) (e : Expense) = 
    let {name= _ ;quantity = _ ;amount = a ;date = d} = e
    match a with
    |DKK x -> x
    |JPY y -> 
         let rtOfDate = List.tryFind (fun (x:RatesTime) -> x.Date = d) rt
         match rtOfDate with
         | Some r -> y * r.JPY_TO_DKK
         | None -> failwith ""no rate for period %A"" d

let total_expenses_IN_DKK = 
    travel_expenses
    |> List.fold(fun acc e -> (IN_DKK rates_sep10Tosep12 e) + acc) 0m 
