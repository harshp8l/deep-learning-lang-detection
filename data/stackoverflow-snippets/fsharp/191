namespace ios_fsharp_foo

open System
open Foundation
open UIKit

[<Register ("ViewController")>]
type ViewController (handle:IntPtr) =
    inherit UIViewController (handle)

    let mutable _fsharpButton = null :> UIButton

    let addUpdateHandler =
        new EventHandler (fun sender eventargs ->
            Console.WriteLine("Hello StackOverflow")
    ) 

    [<Outlet>] 
    member this.fsharpButton
           with get() = _fsharpButton
           and set value = _fsharpButton <- value

    override x.DidReceiveMemoryWarning () =
        // Releases the view if it doesn't have a superview.
        base.DidReceiveMemoryWarning ()
        // Release any cached data, images, etc that aren't in use.

    override x.ViewDidLoad () =
        base.ViewDidLoad ()
        // Perform any additional setup after loading the view, typically from a nib.
        _fsharpButton.TouchUpInside.AddHandler addUpdateHandler

    override x.ShouldAutorotateToInterfaceOrientation (toInterfaceOrientation) =
        // Return true for supported orientations
        if UIDevice.CurrentDevice.UserInterfaceIdiom = UIUserInterfaceIdiom.Phone then
           toInterfaceOrientation <> UIInterfaceOrientation.PortraitUpsideDown
        else
           true
