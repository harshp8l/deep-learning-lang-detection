let rec sum2 (numArray : int list) (symArray : string list)  =
    let newNum, newSym = 
        match numArray with
        | [] -> failwith "No numbers left to process"
        | arg1 :: [] -> failwith "There's only one number left to process"
        | arg1 :: arg2 :: args -> 
            match symArray with
            | op1 :: ops ->
                let result = 
                    match op1 with
                    | "+" -> Add arg1 arg2
                    | "-" -> Sub arg1 arg2
                    | "*" -> Mul arg1 arg2
                    | _ -> failwithf "Operator not recognized: '%s'" op1
                // Return the result, concatenate the non-processed 
                // numbers. Return the non-processed operators
                result :: args, ops
            | _ -> failwith "I've run out of operators?"
<snip>
