// Step 2 - conversion of pseudo-code back to F#
let find(words:string[]) (value:string) =
    let mutable fpos = 0
    let mutable lpos = words.Length - 1
    let mutable state = (true,false)
    while (fst state) do
        match fpos - lpos > 0 with
        | true -> state <- (false,false)
        | _ -> let mid = (fpos + lpos) / 2
               match sign(value.CompareTo(words.[mid])) with
               | -1 -> lpos <- mid - 1
               | 1 -> fpos <- mid + 1
               | _ -> state <- (false,true)
    snd state
