let rec blocklist l prevtrue idx =
    match l,prevtrue with
    |true ::t,None       ->               blocklist t (Some idx) (idx+1)
    |true ::t,ptrue      ->               blocklist t ptrue      (idx+1)
    |false::t,None       ->               blocklist t None       (idx+1)  
    |false::t,Some(sval) -> (sval,idx-1)::blocklist t None       (idx+1)
    |[],Some(t)          -> (t,idx-1)::[]
    |[],_                -> []

let blockify a = a |> Array.toList |> fun f -> blocklist f None 0

> blockify [|true; false; true; true; true; false; true; false; true; true; true; false;
- true; true; false; true; true; true; false; true|];;                                  
val it : (int * int) list =
  [(0, 0); (2, 4); (6, 6); (8, 10); (12, 13); (15, 17); (19, 19)]
