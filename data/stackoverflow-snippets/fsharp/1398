module TestCurrentPrinciple

open System
open System.Security.Principal
open System.Threading

let rand = Random()

let spawnWorkflow userName = 
    async { 
        let identity = GenericIdentity(userName)
        let principle = GenericPrincipal(identity, [||])
        Thread.CurrentPrincipal <- principle
        for i in 1..10000 do
            let principleName = Thread.CurrentPrincipal.Identity.Name
            if principleName <> userName then 
                failwithf ""Mismatch! Principle name %s does not match username %s (Iteration %d)""
                    principleName userName i
            do! Async.Sleep(rand.Next(10))
    }

let names = 
    [ ""mavnn""; ""ploeh""; ""dsyme""; ""biboudis""; ""MattDrivenDev""; ""fssnip""; ""marprz_93""; ""skillsmatter""; ""thinkb4coding"" ]

printfn ""Starting""
names
|> List.map spawnWorkflow
|> Async.Parallel
|> Async.RunSynchronously
|> ignore
printfn ""Done""
Console.ReadLine() |> ignore
