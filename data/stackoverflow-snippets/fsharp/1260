open IntelliFactory.WebSharper

// Helper for handling localstorage, making a stored value work like a ref cell.
[<JavaScript; AutoOpen>]
module LocalStorage =
    open IntelliFactory.WebSharper.Html5

    let localStorage = Window.Self.LocalStorage

    type IValue<'T> = 
        abstract Value: 'T with get, set

    let [<Inline>] ( ! ) (x: IValue<_>) = x.Value
    let [<Inline>] ( := ) (x: IValue<_>) v = x.Value <- v

    // Redefining Ref to use IValue
    type Ref<'T> (value: 'T) =
        let mutable v = value 
        interface IValue<'T> with
            member this.Value
                with get() = v
                and set value = v <- value

    let [<Inline>] ref v = Ref  v
    let incr i = i := !i + 1
    let decr i = i := !i - 1

    type IStorageItem<'T> =
        inherit IValue<'T>
        abstract Save: unit -> unit
        abstract Delete: unit -> unit

    type JSONStorageItem<'T>(key, defaultVal) = 
        let mutable value = None

        let getValue() =
            match value with
            | Some v -> v
            | _ ->
                let v =
                    match localStorage.GetItem key with
                    | null -> defaultVal
                    | s -> 
                        Json.Parse s :?> _
                value <- Some v
                v

        interface IStorageItem<'T> with
            member this.Value
                with get() = getValue()
                and  set v =
                    try localStorage.SetItem(key, Json.Stringify v)  
                        value <- Some v 
                    with _ -> JavaScript.Alert ""Saving data to storage failed.""

            member this.Save() = 
                try localStorage.SetItem(key, Json.Stringify (getValue()))  
                with _ -> JavaScript.Alert ""Saving data to storage failed.""

            member this.Delete() =
                localStorage.RemoveItem key
                value <- None

    let [<Inline>] getJSONStorage key defaultVal = JSONStorageItem<_>(key, defaultVal) :> IStorageItem<_>
