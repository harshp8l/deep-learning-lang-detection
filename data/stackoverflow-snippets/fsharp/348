type Tag = Tag1 | Tag2
type ResultOrError = 
| Result of Tag * decimal
| Error of string

let bind2 f = function
| Result(tag, value) -> f tag value
| error -> error
let lift2EqualTag op mx my =
    bind2 (fun tagX x ->
        bind2 (fun tagY y ->
            if tagX = tagY then Result(tagX, op x y)
            else Error "Mixed tags" ) my ) mx
let add = lift2EqualTag (+)

add (Result(Tag1, 22m)) (Result(Tag1, 10m))
// val it : ResultOrError = Result (Tag1,32M)
add (Result(Tag1, 22m)) (Result(Tag2, 10m))
// val it : ResultOrError = Error "Mixed tags"
