let (|InvariantEqual|_|) : string list -> string list -> unit option =
    fun x y ->
        let f : unit option -> string * string -> unit option =
            fun state (x, y) ->
                match state with
                | None -> None
                | Some() ->
                    if x.Equals(y, System.StringComparison.OrdinalIgnoreCase)
                    then Some()
                    else None
        if x.Length <> y.Length then None
        else List.zip x y |> List.fold f (Some())

match [""HeLlO wOrLd""] with
| InvariantEqual [""hello World"";""Part Two!""] -> printfn ""Bad input""
| InvariantEqual [""hello WORLD""] -> printfn ""World says hello""
| _ -> printfn ""No match found""
