// Eugene's answer
let filterEven1 x =
    match x with
    | _ when x % 2 = 0 -> printfn "%d is even!" x
    | _ -> printfn "%d is not even" x

// equivalent to above, but with "function" match syntax
let filterEven2 = function
    | x when x % 2 = 0 -> printfn "%d is even!" x
    | x -> printfn "%d is not even" x

// variation on Gene's answer
let (|Even|Odd|) x =
    if x % 2 = 0 then Even(x) else Odd(x)

let filterEven3 = function
    | Even(x) -> printfn "%d is even!" x
    | Odd(x) -> printfn "%d is not even" x

// probably how I would do it
let filterEven4 x =
    match x % 2 with
    | 0 -> printfn "%d is even!" x
    | _ -> printfn "%d is not even" x
