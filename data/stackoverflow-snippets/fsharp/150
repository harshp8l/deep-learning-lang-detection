//your ""trait""
type IFoo<'a> =
  abstract member Foo : float -> float

//your ""witness"", defines what ""Foo"" means for the ""Point"" type.  Other witnesses could define what ""Foo"" means for other types.
let fooablePoint = { new IFoo<Point> with member this.Foo x = Point.foo x }

let bar (fooable:IFoo<'a>) = fooable.Foo //this isn't really necessary anymore, but illustrates that a function can use a polymorphic ""static"" function, given a witness
let pt0 = Point(bar fooablePoint 6.0)
