// Alias the types for ease of use later
let studentRecords = Map.empty<int, Map<string, string>>
let grades = Map.empty<string, string>

// create a collection of students 
// (note use of aliases here but could use Map.empty<>.Add if preferred)
let students = 
    studentRecords
        .Add(1, grades.Add(""class1"", ""A"").Add(""class2"", ""B""))
        .Add(2, grades.Add(""class1"", ""D"").Add(""class2"", ""C""))

// can index into the student map by the integer key
// and print out the value of the embedded map based on it's key
let studentId = 1
let className = ""class2""
let student1 = students.[studentId]

printfn 
    ""StudentId: %i obtained %s in %s"" 
    studentId 
    student1.[className] 
    className

// can use Map.map to iterate and obtain some specifics from the embedded map
// eg.  This prints out all students and their grades for ""class2""
printfn ""%s results:"" className
students 
    |> Map.map (fun key value -> printfn ""Student %i - %s"" key value.[className] )
