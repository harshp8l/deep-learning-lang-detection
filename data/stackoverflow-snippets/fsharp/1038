let private ConfigureUnity (config : HttpConfiguration) =
        let rec unityResolver (container : IUnityContainer) =
            { new IDependencyResolver with
                member this.BeginScope() =
                    unityResolver(container.CreateChildContainer()) :> IDependencyScope
                member this.GetService serviceType =
                    try container.Resolve(serviceType) with
                        | :? ResolutionFailedException -> null
                member this.GetServices serviceType = 
                    try container.ResolveAll(serviceType) with
                        | :? ResolutionFailedException -> Seq.empty
                member this.Dispose() = container.Dispose()
            }

        config.DependencyResolver <- (new UnityContainer())
            .RegisterType<IFoo, FooImplementation>(new HierarchicalLifetimeManager())
            .RegisterType<IBar, BarImplementation>(new HierarchicalLifetimeManager())
            |> unityResolver
