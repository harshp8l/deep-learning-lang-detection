open Microsoft.FSharp.Reflection

type Person =  { Name:string; Age:int; Comp1:float; Comp2:float }

let peopleRecds = 
    [ { Name = ""Joe""; Age = 51; Comp1=12.1; Comp2 =20.3 }
      { Name = ""Tomas""; Age = 28; Comp1=1.1; Comp2 =29.3 }
      { Name = ""Eve""; Age = 2; Comp1=2.1; Comp2 =40.3 }
      { Name = ""Suzanne""; Age = 15; Comp1=12.4; Comp2 =26.3} ]

let peopleList = Frame.ofRecords peopleRecds   

let toListOfTuple (frame:Frame<_,_>) tupleType = 
    frame.Rows
    |> Series.mapValues(Series.values >> Seq.toArray)
    |> Series.mapValues(fun x -> FSharpValue.MakeTuple(x, tupleType))
    |> Series.values
    |> Seq.toList

let tupleType = typeof<(string*int*float*float)>

(peopleList, tupleType)
||> toListOfTuple 
|> List.iter(printfn ""%A"")
