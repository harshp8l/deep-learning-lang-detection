let rec iterateTupleMemberTypes (tupleArgTypes: System.Type[]) (columnNames: string[]) startingIndex = 
    seq {
        let index = ref startingIndex
        for t in tupleArgTypes do
            match t.IsGenericType with
            | true ->
                yield! iterateTupleMemberTypes (t.GetGenericArguments()) columnNames !index
            | false ->
                printfn ""Name: %s Type: %A"" (columnNames.[!index]) t
                yield (columnNames.[!index]), t
                index := !index + 1
    } |> dict

let myFile = CsvProvider<""""""d:\temp\sample.txt"""""">.GetSample()
let firstRow = myFile.Rows |> Seq.head
let tupleType = firstRow.GetType()
let tupleArgTypes = tupleType.GetGenericArguments()
let m = iterateTupleMemberTypes tupleArgTypes myFile.Headers.Value 0
