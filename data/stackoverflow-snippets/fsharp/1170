// create sample tuples
let t1 = (2014, 35, 18, 5, 45)
let t2 = (2014, 32, 28, 8, 75)
let t3 = (2014, 25, 11, 9, 55)
let t4 = (2015, 16, 13, 2, 15)
let t5 = (2015, 29, 15, 1, 35)

// create sample list
let lst = [t1;t2;t3;t4;t5]

// a function to return third item in a tuple
let trd (_,_,t,_,_) = t

// process list recursively
let rec prcsLst l max =
    match l with
    | [] -> max
    | hd::tl ->
        if (trd hd) > max then
            prcsLst tl (trd hd)
        else
            prcsLst tl max


// invoke the method on the sample list
// as a starting point use the first item in the list
prcsLst lst (trd t1);;
