type Node = 
    {
        Key: Option<string>
        Children: List<Node>
        XPathFromParent: string
    }

let defaultNode = 
    {
        Key = None; 
        Children = [];
        XPathFromParent = ".//somePath"
    }

let withNodes children node = { node with Children = children }
let withXpathFromParent xpath node = { node with XPathFromParent = xpath }
let withKey key node = { node with Key = Some key }

let mkNode xpath children = { Key = None
                              Children = children
                              XPathFromParent = xpath }

// Usage example

let rootNode =
    mkNode ".//somePath" [
        mkNode "somepath" [] |> withKey "childkey1"
        mkNode "someOtherPath" [] // No key specified, so this one will be None
    ] |> withKey "parentKey"
