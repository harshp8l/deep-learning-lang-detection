type Players =
    | Individual
    | Team of numberOfPlayers:int

type Sport = { Name : string; Players : Players }

let MK = { Name = "Combate Mortal"; Players = Individual }
let SF = { Name = "Lutadores de Rua"; Players = Individual }
let Tk = { Name = "Tekken Chupa"; Players = Individual }

let MvC = { Name = "Marvel Contra Capcom"; Players = Team 3 }
let Dbz = { Name = "Bolas do Dragao"; Players = Team 3 }

let interpretSport (sport:Sport) =
    let players =
        match sport.Players with
        | Individual -> ""
        | Team numberOfPlayers -> sprintf ". No of players: %d" numberOfPlayers
    let rank =
        match sport.Name with
        | "Combate Mortal" -> Some 1
        | "Lutadores de Rua" -> Some 2
        | "Tekken Chupa" -> Some 3
        | "Bolas do Dragao" -> Some 4
        | "Marvel Contra Capcom" -> Some 5
        | _ -> None
    match rank with
    | Some r -> printfn "Rank%d%s" r players
    | None -> printfn "not a sport in our list..."
