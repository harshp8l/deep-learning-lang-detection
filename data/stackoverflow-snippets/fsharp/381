let getNewPosAndSetMaxLength maxLen pos len = // For each new position, check if the result of `getLenth pos` is larger than previous ones.
    let direction = if len < 1 then -1 else 1
    let newPos = 
        match [1..abs(len)] |> List.tryFind (fun i -> reject (pos + i * direction)) with
        | Some p -> p
        | None -> pos + len
    let newLen = getLength newPos
    let maxLen' = if newLen > maxLen then newLen else maxLen
    (newPos, maxLen')

[<EntryPoint>]
let main argv = 
    let (lastPos, maxLen) = [3; -2; 6; 7] |> List.fold (fun (pos, maxLen) x -> 
        getNewPosAndSetMaxLength maxLen pos x) (0, 0)
    printfn ""%d"" maxLen
    0 // return an integer exit code
