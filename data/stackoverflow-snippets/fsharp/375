let primelist n =
    let rec prim n = function
        | []                   -> true
        | x::xs when n % x = 0 -> false
        | x::xs                -> prim n xs

    let rec help n list arg =
        let prime n = prim n list
        match arg with
        | n when (prime n = true) -> List.rev (n::list)
        | n                       -> List.rev list
        | i when (prime i = true) -> help n (i::list) (i+1)
        | i                       -> help n list (i+1)
    help [2] n
