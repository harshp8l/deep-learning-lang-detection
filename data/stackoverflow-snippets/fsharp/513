let splitByInc x lls = // x is an item from the list, lls is a list of lists 
    match lls with
    | y::xs -> // split the list of lists into head and tail
        match y with 
        | h::_ when x <= h ->  (x::y)::xs // take the head, and compare it with x, then cons it together with the rest 
        | _ -> [x]::lls  // in the other case cons the single item with the rest of the list of lists  
    | _ -> [[x]] // nothing else to do, return the whole thing

let ls = [ 1;2;3;5;6;3;2;5;6;3] 
List.foldBack splitByInc ls [] //foldBack needs  a folder function, a list and a starting state
