let (result, result_of_b_param) = function 3
let (result, int_value) = Int32.TryParse ""3""

match Int32.TryParse ""23"" with
| (true, x) -> ...
| _ -> ...
</code>
</pre>

<p>You can use the the attribute 
<code>System.Runtime.InteropServices.OutAttribute</code> on function parameters:</p>

<pre><code>open System.Runtime.InteropServices

type foo () =
member x.Foo ([] y : int32 ref) =
y := 0
</code>
</pre>
","<f#><unity3d>"
"<p>F# extension methods work differently from C# extension methods. You don't need to pass the <code>this</code> argument when declaring the method, it is done by the <code>this.</code> notation:</p>

<pre><code>type Row with
    member this.xlNewCell() =
        // ...
