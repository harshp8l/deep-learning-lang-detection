let SomeExpensiveOpSeq op : seq<Async<string>>=
    seq {
        for some in [Bar(); Baz()] do
            yield async {
                let! someAfterWaiting = some
                return (String.Concat (op, someAfterWaiting))
            }
    }

let DoSomething() =
    let newOp = SomeExpensiveOpAs() |> Async.RunSynchronously
    let someAsyncOps = SomeExpensiveOpSeq newOp |> Async.Parallel |> Async.RunSynchronously
    let allStrings = newOp::(List.ofArray someAsyncOps)
    for str in allStrings do
        Console.WriteLine str
    Console.WriteLine()

> DoSomething();;
about to begin expensive OP
finished expensive OP
foo
foobar
foobaz
