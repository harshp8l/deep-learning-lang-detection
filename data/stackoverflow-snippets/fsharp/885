type StateType =
    State of int * string | Exit
    static member ($) (this, f) =
        match this with
        | Exit -> Exit
        | State (scene, cash) -> f (scene, cash) |> State

type UnitType =
    | Etats of float * unit
    static member ($) (Etats (scene, ()), f) =
        f (scene, ()) |> Etats

let inline f (x,y) = (x+x,y)

let st = State (5,""Hallo"")
st $ f   // val it : StateType = State (10,""Hallo"")

let ut = Etats (5., ())
ut $ f   // val it : UnitType = Etats (10.0,null)
