let chop (txt:string) =
    let rec chopInner txtArr (word: char[]) (res: List<string>) =
        match txtArr with
        | h::t when word.[0] = h -> chopInner t (Array.append word [|h|]) res
        | h::t when word.[0] <> h -> 
            let newWord = word |> (fun s -> System.String s)
            chopInner t [|h|] (List.append res [newWord])
        | [] -> 
            let newWord = word |> (fun s -> System.String s)
            (List.append res [newWord])

    let lst = txt.ToCharArray() |> Array.toList 
    chopInner lst.Tail [|lst.Head|] []
