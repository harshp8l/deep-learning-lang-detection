let test = [(""a"", 1); (""a"", 2); (""a"", 111); (""bb"", 1); (""bb"", -1); (""a"", 5); (""a"", 6)]

let groupByAdjacentElements alist = 
    let rec group a groupAcc prevElement adjacentAcc =
        match a with
        | [] -> match adjacentAcc with
                | [] -> groupAcc
                | _ -> (prevElement, List.rev adjacentAcc)::groupAcc
        | (b, c)::tail -> if b = prevElement then
                             group tail groupAcc prevElement (c::adjacentAcc)
                          else
                             group tail ((prevElement, List.rev adjacentAcc)::groupAcc) b [c]

    group alist [] (fst alist.Head) []
    |> List.rev

let b = groupByAdjacentElements test
