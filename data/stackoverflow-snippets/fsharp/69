let split2 (li: int list) =
    let n = (List.length li) / 2
    let rec looprec (len: int) (l1: int list) (l2: int list) =
         if len > 0 then
            match l1 with 
               | x::tail -> looprec (len-1) tail (x::l2)
               | _ -> (List.rev l2, l1)               
         else 
           (List.rev l2, l1)
     in looprec n li []

let rec merge (l1: int list) (l2: int list) =
    match (l1,l2) with
        | (x,[]) -> x
        | ([],y) -> y
        | (x::tx,y::ty) ->
            if x <= y 
            then x::merge tx l2
            else y::merge l1 ty

let rec msort (li: int list) = 
    match li with
        | [] -> []
        | [x] -> [x]
        | _ -> let (l1,l2) = split2 li
               in merge (msort l1) (msort l2)

let d=  msort [3;20;12]

printfn ""%A"" d
