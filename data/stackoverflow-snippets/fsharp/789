let between (first : int) (second : int) (l : 'a list) : 'a list =
    if first < 0 then
        failwith "first cannot be less than zero"
    if second < 0 then
        failwith "second cannot be less than zero"
    if first > (l.Length * 2) then
        failwith "first cannot be greater than length of list times 2"
    if second > (l.Length * 2) then
        failwith "second cannot be greater than length of list times 2"

    let diff = second - first
    match diff with
    | 0 -> []
    | _ when diff > 0 && (abs diff) < l.Length -> l.[(first + 1) .. (second - 1)]
    | _ when diff > 0 -> (l@l).[(first + 1) .. (second - 1)]
    | _ when diff < 0 && (abs diff) < l.Length -> l.[(second + 1)  .. (second + first - 1)]
    | _ when diff < 0 -> (l@l).[(second + 1)  .. (second + first - 1)]
