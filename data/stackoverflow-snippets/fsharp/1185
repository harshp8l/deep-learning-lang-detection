let (|Lt|Eq|Gt|) (a, b) =
    if a = b 
        then Eq
        elif a > b then Gt else Lt

let rec balance below above balanced = 
    match below, above with
    | (x, required)::xs, (y, available)::ys ->
        match required, available with
        | Lt -> balance xs ((y, available - required) :: ys) (x::balanced)
        | Eq -> balance xs ys (x::y::balanced)
        | Gt -> balance ((x, required - available) :: xs) ys (y::balanced)
    | _, _ -> 
        below, above, balanced

balance [(""a"", 4); (""b"", 1)] [ (""c"", 2); (""d"", 2) ] [ ""e"" ]
balance [(""a"", 1); (""b"", 1)] [ (""c"", 2); (""d"", 2) ] [ ""e"" ]
