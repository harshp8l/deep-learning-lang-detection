// startAngle is the angle in degrees of this segment, angle is the angle of
// the segment itself.
let drawLabel (gr: Graphics) title startAngle angle = 
    // So this is the angle of the centre of this segment.
    let lblAngle = float(startAngle + angle / 2)
    // And ra is the same angle, now in radians.
    let ra = Math.PI * 2.0 * lblAngle / 360.0
    // So these work out the position of the label in the usual
    // way, using cosine(angle-in-radians) and then scaling for the X
    // and using sine for the Y. Both relative to the centre of the
    // circle.
    let x = centerX + labelDistance * cos(ra)
    let y = centerY + labelDistance * sin(ra)
    // How long, in pixels, is the text?
    let size = gr.MeasureString(title, fnt)
    // Create an instance of the right data structure adjusting
    // so the calculated point is the centre of the rectangle
    // in which the text will be drawn.
    let rc = new PointF(float32(x) - size.Width / 2.0f,
                        float32(y) - size.Height / 2.0f)
    // And, thus, we can now draw the text.
    gr.DrawString(title, fnt, Brushes.Black, new RectangleF(rc, size))
