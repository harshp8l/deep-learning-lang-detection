let calculation arg = async {
    do! Async.Sleep 1000
    return arg }

open System.Threading
let backgroundLoop uiAction = async {
    let ctx = SynchronizationContext.Current
    for arg in 0..100 do
        do! Async.SwitchToThreadPool()
        let! result = calculation arg
        do! Async.SwitchToContext ctx
        uiAction result }

open System.Windows.Forms
let fm = new Form()
let lb = new ListBox(Dock = DockStyle.Fill)
fm.Controls.Add lb

let cToken = new CancellationTokenSource()
fm.Load.Add <| fun _ ->
    Async.StartImmediate (backgroundLoop (lb.Items.Add >> ignore), cToken.Token)
lb.KeyDown.Add <| fun _ -> cToken.Cancel()
