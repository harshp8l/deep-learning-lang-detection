open NLog
open NLog.Config
open NLog.Targets

let private logger =
    let config = new LoggingConfiguration()
    let consoleTarget = new ColoredConsoleTarget()
    config.AddTarget("console", consoleTarget)
    consoleTarget.Layout <- Layouts.SimpleLayout.FromString
        @"${longdate}|${level:uppercase=true}|${logger}|${message}"

    let rule = new LoggingRule("*", LogLevel.Debug, consoleTarget)
    config.LoggingRules.Add rule

    LogManager.Configuration <- config
    LogManager.GetLogger "MyLogger"

type LoggingBuilder(lf: string -> unit) =
    let log format =
        let doAfter (s: string) = lf s
        Printf.ksprintf doAfter format

    member this.Bind(x, f) = 
        log "%A" x
        f x

    member this.Return(x) = 
        x

let logger = new LoggingBuilder(logger.Info)
