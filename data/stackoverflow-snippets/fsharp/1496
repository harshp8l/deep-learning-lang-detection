let mult2 (values : int list) =
    let rec mult2withAccumulator (values : int list) (accumulator : int list) =
        match (values : int list) with
        | (headValue : int)::(tailValues : int list) -> 
            let (newValue : int) = headValue * 2
            let (accumulator : int list) = 
              (((newValue : int) :: (accumulator : int list)) : int list)
            mult2withAccumulator tailValues accumulator
        | [] ->
            ((List.rev accumulator) : int list)
    mult2withAccumulator values []
