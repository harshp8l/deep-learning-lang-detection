module TestHof = 
    let make n = 
        seq { 1 .. n }
        |> Seq.map (fun x -> x * x)
        |> Seq.filter (fun x -> x > n/2)
        |> Seq.toList

module TestExpr = 
    let make n =
        [ for i in 1 .. n do
              let x = i * i 
              if x > n/2 then yield x ]

module TestSeqExpr = 
    let make n =
        seq { for i in 1 .. n do
                let x = i * i 
                if x > n/2 then yield x }
        |> Seq.toList

module TestQuery =
    let make n =
        query { for i in 1 .. n do
                    select (i * i) into x
                    where (x > n/2) }
        |> Seq.toList
