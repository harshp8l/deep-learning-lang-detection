type Suit = Spades | Clubs | Hearts | Diamonds
type Rank = Ace | Two | Three | Four | Five | Six | Seven | Eight | Nine | Ten | Jack | Queen | King
type Card = Suit * Rank

type Hand = Card seq

let cardValue (card:Card) = 
    match card with 
    | _, Ace -> 1
    | _, Two -> 2
    | _, Three -> 3
    | _, Four -> 4
    | _, Five -> 5
    | _, Six -> 6
    | _, Seven -> 7
    | _, Eight -> 8
    | _, Nine -> 9
    | _, Ten | _, Jack | _, Queen | _, King -> 10


let hand = seq [(Hearts, Three); (Spades, Jack); (Diamonds, Two)]

hand |> Seq.sortBy cardValue 
//val it : seq<Suit * Rank> =
//seq [(Diamonds, Two); (Hearts, Three); (Spades, Jack)]
