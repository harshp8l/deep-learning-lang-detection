> let res1 =
    attempt throwyFunction
    |> attemptNext (fun () -> throwyFunction' 42 ""foo"")
    |> attemptNext goodFunction
    |> attemptNext (fun () -> goodFunction' true 13.37);;

val res1 : string option = Some ""Hooray""

> let res2 =
    attempt goodFunction
    |> attemptNext throwyFunction
    |> attemptNext (fun () -> throwyFunction' 42 ""foo"")
    |> attemptNext (fun () -> goodFunction' true 13.37);;

val res2 : string option = Some ""Hooray""

> let res3 =
    attempt (fun () -> throwyFunction' 42 ""foo"")
    |> attemptNext throwyFunction    
    |> attemptNext (fun () -> goodFunction' true 13.37)
    |> attemptNext goodFunction;;

val res3 : string option = Some ""Yeah""

> let res4 =
    attempt (fun () -> throwyFunction' 42 ""foo"")
    |> attemptNext (fun () -> goodFunction' true 13.37)
    |> attemptNext throwyFunction    
    |> attemptNext goodFunction;;

val res4 : string option = Some ""Yeah""
