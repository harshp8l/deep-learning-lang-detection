Process[] processlist = Process.GetProcesses();

foreach (Process process in processlist)
{
    string owner = GetProcessOwner(process.ProcessName);
    bool admin = isAdmin(owner);
}
...
...
...
public string GetProcessOwner(string processName)
{
    string query = "Select * from Win32_Process Where Name = \"" + processName + "\"";
    ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);
    ManagementObjectCollection processList = searcher.Get();

    foreach (ManagementObject obj in processList)
    {
        string[] argList = new string[] { string.Empty, string.Empty };
        int returnVal = Convert.ToInt32(obj.InvokeMethod("GetOwner", argList));
        if (returnVal == 0)
        {
            // return user
            string owner = argList[0];
            return owner;
        }
    }

    return "NO OWNER";
}

public static bool isAdmin(string name)
{
    if(name == "NO OWNER")
    {
        return false;
    }
    WindowsIdentity identity = new WindowsIdentity(name);
    WindowsPrincipal principal = new WindowsPrincipal(identity);
    bool isAdmin = principal.IsInRole(WindowsBuiltInRole.Administrator);
    return isAdmin;
}
