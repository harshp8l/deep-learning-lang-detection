private static Expression<Func<Foo, bool>> InExpression<T>(string propertyName, IEnumerable<int> array)
{
    C.<>c__DisplayClass0_0<T> <>c__DisplayClass0_ = new C.<>c__DisplayClass0_0<T>();
    <>c__DisplayClass0_.array = array;
    ParameterExpression parameterExpression = Expression.Parameter(typeof(Foo), ""x"");
    Expression arg_77_0 = null;
    MethodInfo arg_77_1 = methodof(IEnumerable<!!0>.Contains(!!0));
    Expression[] expr_38 = new Expression[2];
    expr_38[0] = Expression.Field(Expression.Constant(<>c__DisplayClass0_, typeof(C.<>c__DisplayClass0_0<T>)), fieldof(C.<>c__DisplayClass0_0<T>.array));
    Expression[] expr_5F = expr_38;
    expr_5F[1] = Expression.Property(parameterExpression, methodof(Foo.get_Id()));
    Expression arg_86_0 = Expression.Call(arg_77_0, arg_77_1, expr_5F);
    ParameterExpression[] expr_82 = new ParameterExpression[1];
    expr_82[0] = parameterExpression;
    return Expression.Lambda<Func<Foo, bool>>(arg_86_0, expr_82);
}
