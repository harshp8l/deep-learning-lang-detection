public static class Extenctions {
    public static IEnumerable<IXYPoint> IsInSector(this IEnumerable<IXYPoint> source, Vector2 pointToCheck, Vector2 direction, double halfAngle)
    {
        if(!source.Any() || pointToCheck == null || halfAngle <= 0)
            return new IXYPoint[0];

        var dirVector = new Vector2() {
            X = direction.X - pointToCheck.X,
            Y = direction.Y - pointToCheck.Y
        };

        var radius = Distance(direction, pointToCheck);
        var result = new List<IXYPoint>();

        foreach(var p in source)
        {
            if(Distance(p, pointToCheck) > radius){ // check is point in circle
                continue;
            }


            if(IsPointInSector(dirVector, p, halfAngle)) // main check 
                result.Add(p);
        }

        return result;
    }

    private static double Distance(IXYPoint from, IXYPoint to)
    {
        return Math.Sqrt(Math.Pow(to.X - from.X,2) + Math.Pow(from.Y-to.Y,2));
    }

    private static bool IsPointInSector(IXYPoint directionVector, IXYPoint pointToCheck, double halfAngle)
    {
        var rq0 = Math.Pow(directionVector.X,2) + Math.Pow(directionVector.Y,2);
        var rq = Math.Pow(pointToCheck.X,2) + Math.Pow(pointToCheck.Y,2);
        return rq0 >= rq && (directionVector.X*pointToCheck.X + directionVector.Y*pointToCheck.Y)/Math.Sqrt(rq0*rq) >= Math.Cos(halfAngle/180.0*Math.PI);
    }

}
