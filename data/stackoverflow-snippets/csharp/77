float timer;
Coroutine theCoroutine;

public void SlerpRot(){
    if (theCoroutine != null)
        StopCoroutine (theCoroutine);
    theCoroutine = StartCoroutine (SlerpRotation(this.transform,Quaternion.identity));
}
public IEnumerator SlerpRotation(Transform trans, Quaternion slerpTo)
{
    timer = 0;
    Quaternion rotation = trans.localRotation;
    while (timer < 2)
    {
        trans.localRotation = Quaternion.Slerp(rotation, slerpTo, timer/2f);
        timer += Time.deltaTime;
        yield return null;
    }
}
