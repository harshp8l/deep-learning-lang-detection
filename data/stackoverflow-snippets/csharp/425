using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Reflection;

namespace StackSolve
{
    public class Student
    {
        public int StudentID { get; set; }
        public string StudentName { get; set; }
        public DateTime? DateOfBirth { get; set; }
        public Grade Grade { get; set; }
    }

    public class Grade
    {
        public int GradeId { get; set; }
        public string GradeName { get; set; }
        public string Section { get; set; }
        public GradGroup GradeGroup { get; set; }
    }

    public class GradGroup
    {
        public int Id { get; set; }
        public string GroupName { get; set; }
    }


    class Program
    {
        public static string GetFullPropertyName(Type baseType, string propertyName)
        {
            // how to implement that??
            string result = """";

            PropertyInfo[] properties= baseType.GetProperties();
            foreach (PropertyInfo prop in properties)
            {
                if (!(prop.PropertyType.Equals(typeof(int)) || prop.PropertyType.Equals(typeof(string))|| prop.PropertyType.Equals(typeof(DateTime?))))
                {
                    Type temp = prop.PropertyType;
                    result = temp.Name + ""."" + temp.GetProperty(propertyName).Name;  // temp.GetProperty(propertyName).PropertyType.FullName; you can use this if you want full name with namespace like in my case StackSolve.GradType

                }
            }

            return result;
        }
        static void Main(string[] args)
        {


           string result=  GetFullPropertyName(typeof(Student), ""GradeGroup"");
            Console.WriteLine(result);
            Console.Read();
        }
    }
}
`
