private void AddOnChangeHandlerToInputControls(Control ctrl) 
    {
        foreach (Control subctrl in ctrl.Controls)
        {
            if (subctrl is TextBox)
            {
                ((TextBox)subctrl).TextChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is CheckBox)
            {
                ((CheckBox)subctrl).CheckedChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is RadioButton)
            {
                ((RadioButton)subctrl).CheckedChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is ListBox)
            {
                ((ListBox)subctrl).SelectedIndexChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is ComboBox)
            {
                ((ComboBox)subctrl).SelectedIndexChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is MaskedTextBox)
            {
                ((MaskedTextBox)subctrl).TextChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is DateTimePicker)
            {
                ((DateTimePicker)subctrl).MouseCaptureChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is RichTextBox)
            {
                ((RichTextBox)subctrl).TextChanged += new EventHandler(InputControls_OnChange);
            }
            else if (subctrl is NumericUpDown)
            {
                ((NumericUpDown)subctrl).TextChanged += new EventHandler(InputControls_OnChange);
            }
            else
            {
                if (subctrl.Controls.Count > 0)
                {
                    this.AddOnChangeHandlerToInputControls(subctrl);
                }
            }
        }
    }
