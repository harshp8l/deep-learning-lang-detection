IEnumerable<IGrouping<int, MyType>> mygrouping = new List<MyType>().GroupBy(x => x.Key); // this is your grouped list

var allData = Enumerable.Range(0, 60) // here you take 60 values (0-59)
            .Select(
              actualKey =>
              {
                  var p = mygrouping.SingleOrDefault(y => y.Key == actualKey);
                  int counter = actualKey;
                  while (p == null && counter >= 0) // as long as the value is null and the counter is greater or equal to 0
                      p = mygrouping.SingleOrDefault(y => y.Key == counter--);
                  return new KeyValuePair<int, IEnumerable<MyType>>(actualKey, p.Select(v => v)); // return the data of the last value
              });
