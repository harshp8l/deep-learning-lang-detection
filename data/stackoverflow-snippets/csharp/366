Private Sub Main()
    Dim values As String = <values>
1
  14
    141
        141010
        141020
        141030
        141040
        141050
        141060
    142
        142010
        142020
    144
       1440
          144010
          144020
          144030
          144040
    145020
    145030
    145010
</values>

' Splitting and converting to a collection of integers ordered by randomly
' just to show initial order does not matter
    Dim myValue As Integer
    Dim myData = values _
        .Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries) _
        .Select(Function(s) If(Integer.TryParse(s.Trim(), myValue), myValue, -1)) _
        .Where(Function(n) n <> -1) _
        .OrderBy(Function(n) Guid.NewGuid())

' We have the collection. Sort it "directory" style
    Dim myList As List(Of String) = New List(Of String)()
    Dim list = myData.Select(Function(d) d.ToString())
    For Each v In myData
        myList.Add(Fullpath(v.ToString(), list))
    Next

' Write out the result intended
    Dim ordered = myList.OrderBy(Function(l) l)
    For Each element In ordered
        Dim levels = element.Count(Function(e) e = "/"c)
        Dim value = If(levels > 0, element.Remove(0, element.LastIndexOf("/"c) + 1), element)
        Console.WriteLine("".PadLeft(levels * 4, " ") + value)
    Next
End Sub

' Get the full path for a value with ancestors
' ie: 1/14/1440/144010 is the full path for 144010
Private Function Fullpath(ByVal key As String, ByVal list As IEnumerable(Of String)) As String
    Dim paths As List(Of String) = New List(Of String)()
    For i As Integer = 1 To key.Length
        If list.Any(Function(v) key.Substring(0, i) = v) Then
            paths.Add(key.Substring(0, i))
        End If
    Next

    Return String.Join("/", paths)
End Function

'=======================================================
'Service provided by Telerik (www.telerik.com)
'Conversion powered by Refactoring Essentials.
'Twitter: @telerik
'Facebook: facebook.com/telerik
'=======================================================
