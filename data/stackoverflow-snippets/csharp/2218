public static void Main()
{
    DoIt().GetAwaiter().GetResult();
}

public async static Task DoIt() 
{
    var results = await Task.WhenAll(
        RunTimeLimitedTask(10),
        RunTimeLimitedTask(1000));

    foreach(var result in results) Console.WriteLine(result);
}

public async static Task<string> RunTimeLimitedTask(int timeLimit)
{
    // A
    var source = new CancellationTokenSource();
    source.CancelAfter(timeLimit);

    // B
    try {
        await Task.Run(async () => await Task.Delay(500, source.Token));

         // C
        return ""Complete"";
    }
    catch (TaskCanceledException) {
        // C
        return ""Cancelled"";
    }
}
