[HttpPost(""ExportExcel"")]
public IActionResult ExportExcel([FromBody]RequestParameters customparameters)
{
    IEnumerable<Data> mydata = mydatamanager.FilterWithSelection(customparameters);

    DataTable myDataTable = ConvertListToDatatable(mydata.ToList());

    XLWorkbook wb = new XLWorkbook();

    // Add a DataTable as a worksheet
    wb.Worksheets.Add(myDataTable);

    wb.SaveAs(""AddingDataTableAsWorksheet.xlsx"");

    //TODO: Stream the file to the browser
}

private DataTable ConvertListToDatatable<T>(List<T> data) where T : class, new()
{
    PropertyDescriptorCollection props = TypeDescriptor.GetProperties(typeof(T));
    DataTable table = new DataTable();

    for (int i = 0; i < props.Count; i++)
    {
        PropertyDescriptor prop = props[i];

        if (prop.PropertyType.IsGenericType && prop.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>))
        {
            table.Columns.Add(prop.Name, prop.PropertyType.GetGenericArguments()[0]);
        }
        else
        {
            table.Columns.Add(prop.Name, prop.PropertyType);
        }
    }

    object[] values = new object[props.Count];

    foreach (T item in data)
    {
        for (int i = 0; i < values.Length; i++)
        {
            values[i] = props[i].GetValue(item);
        }

        table.Rows.Add(values);
    }

    return table;
}
