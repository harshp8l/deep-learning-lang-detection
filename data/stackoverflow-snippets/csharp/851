 //Compilation of ""if (j - left > Threshold && right - i > Threshold)""

//Slow method:
    // [106 13 - 106 63]
    IL_012f: ldloc.0      // 'CS$<>8__locals0'
    IL_0130: ldfld        int32 parallelQuicksort.ParallelQuickSort/'<>c__DisplayClass2_0'::j
    IL_0135: ldloc.0      // 'CS$<>8__locals0'
    IL_0136: ldfld        int32 parallelQuicksort.ParallelQuickSort/'<>c__DisplayClass2_0'::left
    IL_013b: sub          
    IL_013c: ldc.i4.s     100 // 0x64
    IL_013e: ble.s        IL_0153
    IL_0140: ldloc.0      // 'CS$<>8__locals0'
    IL_0141: ldfld        int32 parallelQuicksort.ParallelQuickSort/'<>c__DisplayClass2_0'::right
    IL_0146: ldloc.0      // 'CS$<>8__locals0'
    IL_0147: ldfld        int32 parallelQuicksort.ParallelQuickSort/'<>c__DisplayClass2_0'::i
    IL_014c: sub          
    IL_014d: ldc.i4.s     100 // 0x64
    IL_014f: cgt          
    IL_0151: br.s         IL_0154
    IL_0153: ldc.i4.0     
    IL_0154: stloc.s      V_8


//fast separate method

    // [151 13 - 151 63]
    IL_006b: ldloc.1      // j
    IL_006c: ldarg.1      // left
    IL_006d: sub          
    IL_006e: ldc.i4.s     100 // 0x64
    IL_0070: ble.s        IL_007b
    IL_0072: ldarg.2      // right
    IL_0073: ldloc.0      // i
    IL_0074: sub          
    IL_0075: ldc.i4.s     100 // 0x64
    IL_0077: cgt          
    IL_0079: br.s         IL_007c
    IL_007b: ldc.i4.0     
    IL_007c: stloc.s      V_8
