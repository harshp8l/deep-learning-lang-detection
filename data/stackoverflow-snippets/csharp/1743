// Stacks: 200, 200, 53
// Ranges: <1,200>, <201,400>, <401,453>

void Main()
{
    var stacks = CreateStacks(453, 200);
    Console.WriteLine(""Stacks: "" + string.Join("", "", stacks.Select(n => n.ToString()).ToArray()));
    var ranges = CreateRanges(453, stacks);
    Console.WriteLine(""Ranges: "" + string.Join("", "", ranges.Select(t => $""<{t.Item1},{t.Item2}>"").ToArray()));
    Console.WriteLine();
}

public static List<Tuple<int, int>> CreateRanges(Int32 number, List<int> stacks)
{
    var ranges = new List<Tuple<int, int>>();
    var index = 0;
    foreach (var stack in stacks){
        ranges.Add(new Tuple<int, int>(index + 1, stack + index));
        index += stack;
    }
    return ranges;
}

public static List<int> CreateStacks(Int32 number, Int32 stackSize)
{
    List<int> stacks = new List<int>();
    int d = number / stackSize;
    if (d == 0)
    {
        return stacks;
    }
    int r = number % stackSize;

    string str = string.Join("","", Enumerable.Repeat(""200"", d));
    if (number % 100 > 0)
    {
        str = str + "", "" + r;
        foreach (var s in str.Split(',').ToList())
        {
            stacks.Add(Convert.ToInt32(s));
        }
    }
    return stacks;
}
