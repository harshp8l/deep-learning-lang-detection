// a date before DST starts
var beforeDstUtc = new DateTime(2018, 3, 1, 13, 0, 0, DateTimeKind.Utc);
// a date after DST starts
var afterDstUtc = new DateTime(2018, 4, 1, 13, 0, 0, DateTimeKind.Utc);

var cstZone = TimeZoneInfo.FindSystemTimeZoneById(""Central Standard Time"");

var cstTime1 = TimeZoneInfo.ConvertTimeFromUtc(beforeDstUtc, cstZone);
var cstTime2 = TimeZoneInfo.ConvertTimeFromUtc(afterDstUtc, cstZone);

var expectedBeforeDstLocal = new DateTime(2018, 3, 1, 07, 0, 0, DateTimeKind.Local);
var expectedAfterDstLocal = new DateTime(2018, 4, 1, 08, 0, 0, DateTimeKind.Local);

// should be -6 hours
Assert.AreEqual(expectedBeforeDstLocal, cstTime1);
// should be -5 hours
Assert.AreEqual(expectedAfterDstLocal, cstTime2);
