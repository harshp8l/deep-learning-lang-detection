#include <iostream>

class simple {
    public:
        simple() { std::cout << ""constructor"" << std::endl; }
        simple(const simple& copy) { std::cout << ""copied"" << std::endl; }
        ~simple() { std::cout << ""destructor"" << std::endl; }
        void addr() const { std::cout << &(*this) << std::endl; }
};

void simple_ref(const simple& ref) { ref.addr(); }
void simple_val(simple val) { val.addr(); }

int main(int argc, char* argv[])
{
    simple val;      // output: 'constructor'
    simple_ref(val); // output: address of val
    simple_val(val); // output: 'copied', address of copy made, 'destructor' (the destructor of the copy made)
    return 0;
    // output: 'destructor' (destructor of 'val')
}
