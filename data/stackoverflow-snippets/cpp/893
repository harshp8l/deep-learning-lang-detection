void CameraFPSQuaternion::Update(float deltaTimeSeconds)
{
  //FPS camera:  RotationX(pitch) * RotationY(yaw)
  glm::quat qPitch = glm::angleAxis(m_d_pitch, glm::vec3(1, 0, 0));
  glm::quat qYaw = glm::angleAxis(m_d_yaw, glm::vec3(0, 1, 0));
  glm::quat qRoll = glm::angleAxis(m_d_roll,glm::vec3(0,0,1));  

  //For a FPS camera we can omit roll
  glm::quat m_d_orientation = qPitch * qYaw;
  glm::quat delta = glm::mix(glm::quat(0,0,0,0),m_d_orientation,deltaTimeSeconds);
  m_orientation = glm::normalize(delta) * m_orientation;
  glm::mat4 rotate = glm::mat4_cast(orientation);

  glm::mat4 translate = glm::mat4(1.0f);
  translate = glm::translate(translate, -eye);

  viewMatrix = rotate * translate;
}
