int main() { 
    std::locale out("""");
    std::cout.imbue(out);
    using namespace std::chrono;
    std::cout << ""my_vect\n"";
    for (int size = 100; size <= 1000000000; size *= 10) {
        auto start = high_resolution_clock::now();

        my_vect b;
        for(int i = 0; i < size; i++) {
            b.push_back(i);
        }    

        auto stop = high_resolution_clock::now();

        std::cout << ""Size: "" << std::setw(15) << size << "", Time: "" << std::setw(15) << duration_cast<microseconds>(stop-start).count() << "" us\n"";
    }

    std::cout << ""\nstd::vector\n"";

    for (int size = 100; size <= 1000000000; size *= 10) {
        auto start = high_resolution_clock::now();

        std::vector<int> b;
        for (int i = 0; i < size; i++) {
            b.push_back(i);
        }

        auto stop = high_resolution_clock::now();

        std::cout << ""Size: "" << std::setw(15) << size << "", Time: "" << std::setw(15) << duration_cast<microseconds>(stop - start).count() << "" us\n"";
    }
}
