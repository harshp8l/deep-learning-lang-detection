template<typename U>
struct Value
{
    double val;
    constexpr Value(double d) : val(d) {}

    std::string Units() const
    {
        return ""m^"" + to_string(U::m) + 
               "" kg^"" + to_string(U::kg) +
               "" s^"" + to_string(U::s);
    }
};

template <typename U>
std::ostream& operator<<(std::ostream& out, Value<U> val)
{
    out << val.val
        << "" m^"" << U::m << "" kg^"" << U::kg << "" s^"" << U::s;
    return out;
}
