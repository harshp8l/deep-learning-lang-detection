#include<iostream>

using namespace std;


class Sorter
{
public:
  template <typename T>
  typename std::enable_if<std::is_pointer<typename T::type>::value, void>::type
  sort(T & data)
  {
    cout<<""sort pointers\n"";
  }
  template <typename T>
  typename std::enable_if<!std::is_pointer<typename T::type>::value, void>::type
  sort(T & data)
  {
    cout<<""sort non pointers\n"";
  }
};

template<typename T>
class DataStructure
{
public:
    using type = T;
};

int main() {
    Sorter s;
    DataStructure<int> d1;
    DataStructure<int*> d2;
    s.sort(d1);
    s.sort(d2);
    return 0;
}
