# include<iostream> #
using namespace std;
##include<conio.h>##
###include<string.h>###
struct dll
{
int data;
dll *next,*prev;
}*start,*last,*trav;

class doublell
{
 private:
    //dll *start,*last,*trav;
    int info;
public:
    doublell()
    {
        start=NULL;
        last=NULL;
        trav=NULL;
    }

    void create();
    dll *takedata();

    void display(); 
};

//  code for data to take from user
dll *doublell :: takedata( )
{       
int info;
    cout<<"\n enter Data:\n";
    cin>>info;
    dll *newnode1;
    newnode1= new dll;
    newnode1->data=info;
    newnode1->next=NULL;
    newnode1->prev=NULL;
    return (newnode1);

}


//  code to create double link list
 void doublell:: create()
{
    /*string e;
    cout<<"\n press any time end to terminate\n";*/
    char ch;
   while(1)
  {
    cout<<"\n do you want to terminate, press Y/y to terminate\n\n\n";
    ch=getch();
    if((ch=='y')||(ch=='Y'))
        {
            display();
            cout<<"\n\n";
            break;
        }
    else
        {
            dll *newnode;
            newnode= new dll;
            newnode=takedata( );

            /*cout<<"\n enter Data:\n";
            cin>>info;
            newnode->data=info;
            newnode->next=NULL;
            newnode->prev=NULL;*/

            if (start==NULL )
            {
                /*newnode->prev=start;
                newnode->next=last;*/
                start=newnode;
                last=newnode;
            }

            else
            {   
                last->next=newnode;
                newnode->prev=last;
            //newnode->next=NULL;
                last=newnode;
            }
        }
}
}



 /* cout<<"\n enter Data:\n";
    cin>>info;
    dll *newnode;
    newnode->data=info;
    newnode->next=NULL;
    newnode->prev=NULL;

   do{

        takedata();
        if (start==NULL && last==NULL)
        {
            start=last=newnode;
        }
        else
        {   
            newnode->pre=last;
            last=newnode;
        }
        cin>>e;
    }while(strcmp(e,"end")!=0)
}*/

//  code to display
void doublell:: display()
{   
    if (start==NULL)
    {
    cout<<"\n double link list is empty./n";
    return;
}
    else
    {
        dll *trav=start;
        dll *arrow= trav;           // arrow pointer is used for coreect 
 usage of --> @ last

    cout<<"\n start is:-";
    cout<<"\n"<<start->data;
    cout<<trav->data;
    getch();
    cout<<"\n\n NULL <-- ";
    while(trav!=NULL)
    {
            /*if(arrow==NULL)
            {
                cout<<trav->data<<"<--";
            }
            else*/

                cout<<trav->data<<" <--> ";
                trav=trav->next;
                arrow=trav;
                if((arrow->next)->next==NULL)
                {   
                    arrow=trav->next;
                    cout<<trav->data<<" <--> ";
                    cout<<arrow->data<<" --> ";
                    trav=(trav->next)->next;
                }

    }
    cout<<" NULL ";
}

 }

main()
{
char ch;
int c;
class doublell ok;

do{

    cout<<"\n 1> create list"<<endl;
    cout<<"\n 4> display list"<<endl;
    cout<<"\n Choose your choice: ";
    cin>>c;
    switch(c)
    {

        case 1:  
                ok.create();
                ok.display();
                break;              
        case 4: exit;
                break;
    }
}while(c!=4);

getch();


}
