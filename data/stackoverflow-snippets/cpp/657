class Pet {
    public: //Pet's constructor can be protected, if you only want derived classes to create them
        Pet(std::string initName="""", std::string initSound="""", std::string initCoat="""");
        virtual ~Pet(){} //Only needed if deleting derived class through Pet*
        std::string getName(){ return name; }
    private:
        std::string name;
        std::string sound;
        std::string coat;
};

class Bird : public Pet {
    public:
        Bird();
        ~Bird() override {}  //Overrides virtual ~Pet, if used
    private:
        int wingSpan;
};
