class timedVariable {
   double value; // <double> would be replaced by template parameter
   std::chrono::steady_clock::timepoint lastChange;
public:
  timedVariable(double v) 
    : value(v)
    , lastChange(std::chrono::steady_clock::now())
  { }
  timedVariable(timedVariable const&) = default;
  timedVariable& operator=(timedVariable const&) = default;

  bool equalSince(double v, std::chrono::steady_clock::timepoint t)
  {
     // Ignoring the problem of double equality 
     return this->value == v && lastChange < t;
  }
};
