#include <iostream>
#include <limits>

using namespace std;

// prototypes
int* generateAndFillArray(int & size);
void displayArray(const int *arr, int size);

int main()
{
    int size;
    int *arr = generateAndFillArray(size);
    displayArray(arr, size);
    delete[] arr;

    return 0;
}

//Prompt the User for a number (1-10) then dynamically allocate an array of this size.
//Prompt the user to fill out the array, with numbers (1-100) all numbers included (1 and 100 are allowed).
//Return the array through the return statement to the main body and the size of the array through a reference parameter.

int* generateAndFillArray(int &size)
{
    cout << ""Enter a number (1-10) that will serve as the size of the array: "";
    do
    {
        if (cin >> size)
        {
            if (size >= 1 && size <= 10)
                break;

            cout << ""Please enter a correct number between 1 and 10. "";
        }
        else
        {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << ""Please enter a valid number between 1 and 10. "";
        }
    }
    while (true);

    int *arr = new int[size];

    cout << ""enter a number for each subscript of the array "";

    for (int i = 0; i < size; ++i)
    {
        while (!(cin >> arr[i]))
        {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << ""Please enter valid numbers for subscript "" << i << "" onward. "";
        }
    }

    return arr;
}

//Display on one line, by itself, with a space following each number, surrounded by square
//    brackets. example: [1 59 13 37 55]
void displayArray(const int *numbers, int size)
{
    cout << ""["";
    if (size > 0)
    {
        cout << numbers[0];
        for (int i = 1; i < size; i++)
            cout << "" "" << numbers[i];
    }
    cout << ""]"" << endl;
}
