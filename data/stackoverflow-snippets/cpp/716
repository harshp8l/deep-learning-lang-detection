void rotate_border(int m[R][C], int n) {
    vector<int> tmp(2*(R+C-2), -1);
    for (size_t c = 0 ; c != C ; c++) {
        tmp[c] = m[0][c];
        tmp[c+C+R-2] = m[R-1][C-c-1];
    }
    for (size_t r = 1 ; r != R-1 ; r++) {
        tmp[C+r-1] = m[r][C-1];
        tmp[2*C+R-3+r] = m[R-r-1][0];
    }
    std::rotate(tmp.begin(), std::next(tmp.begin(), n), tmp.end());
    for (size_t c = 0 ; c != C ; c++) {
        m[0][c] = tmp[c];
        m[R-1][C-c-1] = tmp[c+C+R-2];
    }
    for (size_t r = 1 ; r != R-1 ; r++) {
        m[r][C-1] = tmp[C+r-1];
        m[R-r-1][0] = tmp[2*C+R-3+r];
    }
}
