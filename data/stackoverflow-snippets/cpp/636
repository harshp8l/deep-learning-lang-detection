#include <cmath>
#include <iostream>
#include <limits>

template<class T>
void print2exp()
{
    std::cout << typeid(T).name() << '\n';
    std::cout << "Radix          = " << std::numeric_limits<T>::radix << '\n';
    auto maxExp = std::numeric_limits<T>::max_exponent;
    std::cout << "Max exp        = " << maxExp  << '\n';
    std::cout << "2^maxExp       = " << std::pow(static_cast<T>(2), static_cast<T>(maxExp)) << '\n';
    std::cout << "2^(maxExp - 1) = " << std::pow(static_cast<T>(2), static_cast<T>(maxExp - 1)) << '\n';
}

int main()
{
    print2exp<float>();
    print2exp<double>();
    print2exp<long double>();

    return 0;
}
