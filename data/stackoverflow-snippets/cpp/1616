std::vector<std::tuple<std::string,bool> > tests = {
       {"x==0",x==0}, // test name as a string followed by the actual test
       {"y==1",y==1},
       {"z==2",z==2}
    };

if(!all_of(tests.begin(),tests.end(),[](std::tuple<std::string,bool> &t) { return std::get<1>(t); }))
{
   std::cout << "The following tests failed: ";
   //remove all tests that passed
   tests.erase(
        std::remove_if(tests.begin(),tests.end(),[](std::tuple<std::string,bool> &t) { return std::get<1>(t); }),
        tests.end());
   //This will only print out the tests that failed
   std::transform(tests.begin(),tests.end(),std::ostream_iterator<std::string>(std::cout, " "),[](std::tuple<std::string,bool> &t) { return std::get<0>(t); });
   std::cout << std::endl;
} else {

  //what to do if all tests were true
} 
