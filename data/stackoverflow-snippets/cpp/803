typedef struct inventory_item_t {
    inventory_item_t(const std::string& item_code, double price, int quantity) :
        item_code(item_code),
        price(price),
        quantity(quanity) { }

    std::string item_code;
    double price;
    int quantity;
} inventory_item_t;

typedef std::map<std::string, inventory_item_t> inventory_items_t;

inventory_items_t inventory_items;

inventory_items.insert(make_pair(""item1"", inventory_item_t(""item1"", 1.0, 1)));
inventory_items.insert(make_pair(""item2"", inventory_item_t(""item2"", 1.1, 2)));
inventory_items.insert(make_pair(""item3"", inventory_item_t(""item3"", 1.2, 3)));

inventory_items_t::iterator inventory_item = inventory_items.find(""item1"");

if(inventory_item != inventory_items.end()) {
    std::cout << ""Inventory Item found - item_code: [""
              << inventory_item->first
              << ""], price: [""
              << inventory_item->second.price
              << ""]""
              << std::endl;
} else {
    std::cout << ""Inventory Item not found"" << std::endl;
}
