class Person {
public:
    Person(const string &name) : pName_(name) {}

    Person& operator=(const Person& rhs) {
        // if you remove these output statements then
        // this entire operator can be removed...
        cout << ""begin copy..."" << endl;
        if (this != &rhs) {
            pName_ = rhs.pName();
            cout << ""non self copied..."" << endl;
        }
        cout << ""end copy..."" << endl;
        return *this;
    }

    string pName() const {
        return pName_;
    }

    void printName() const {
        cout << pName_ << endl;
    }

private:
    string pName_;
};

int main() {
    Person *a = new Person(""Alex"");
    Person *b = new Person(""Becky"");
    Person *c = NULL;

    *b = *a;
    //*c = *a; UNDEFINED BEHAVIOR! 

    if (a) {
        a->printName();
        delete a;
    }

    if (b) {
        b->printName();
        delete b;
    }

    if (c) {
        c->printName();
        delete c;
    }

    return 0;
}
