#include <iostream>
#include<vector>
#include <algorithm>

typedef std::pair< std::pair<int,int>, char> Type;

int main ()
{
    std::vector< Type >  vec;

    vec.emplace_back( std::make_pair( std::make_pair(15,14),'b' ) );
    vec.emplace_back( std::make_pair( std::make_pair(15,80),'c' ) );
    vec.emplace_back( std::make_pair( std::make_pair(9,17),'a' ) );

    std::sort(vec.begin(), vec.end(),
    [](const Type &lhs, const Type &rhs)->bool
    {
        return ( lhs.first.first + lhs.first.second ) <
               ( rhs.first.first + rhs.first.second );
    });

    for(const auto& it: vec)
        std::cout<< it.first.first << "" "" << it.first.second << "" ""
             << it.second << std::endl;
    return 0;
}
