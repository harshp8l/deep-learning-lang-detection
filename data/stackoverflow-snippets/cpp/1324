#include <iostream>
#include <limits> // for std::numeric_limits<int>::max() or max()
#include <algorithm> // for std::min() or std::max()

void getJudgedata(int &sco, int);
void clacScore(int lowest, int highest, int total);
int findLowest(int score[]);
int findHighest(int score[]);

int main()
{
    int score[5];
    int lowest = 0;
    int highest = 0;
    int total = 0;

    for (int i = 0; i < 5; i++)
    {
        getJudgedata(score[i], i);
        total += score[i];
    }
    std::cout << std::endl;
    highest = findHighest(score);
    lowest  = findLowest(score);

    clacScore(lowest, highest, total);

    return 0;
}

void getJudgedata(int &sco, int i)
{
    std::cout << ""Enter score of judge "" << i + 1 << "" : "";
    std::cin >> sco;
    while (sco < 0 || sco>10)
    {
        std::cout << ""Invalid score please enter again: \n"";
        std::cout << ""Enter score of judge "" << i + 1 << "" : "";
        std::cin >> sco;
    }
}

void clacScore(int lowest, int highest, int total)
{
    std::cout << ""Performer's Final score is: "" << (total - lowest - highest) / 3 << std::endl;
}

int findLowest(int score[])
{
    int lowest = std::numeric_limits<int>::max();
    for (int i = 0; i < 5; i++)
        lowest = std::min(lowest, score[i]);
    return lowest;
}

int findHighest(int score[])
{
    int highest = std::numeric_limits<int>::min();
    for (int i = 0; i < 5; i++)
        highest = std::max(highest, score[i]);
    return highest;
}
