int main()
{
    lua_State* L = luaL_newstate();
    luaL_openlibs(L);
    proxy p;
    luabridge::getGlobalNamespace(L)
        .beginClass<proxy>(""proxy"")
        .addFunction(""doSomething"", &proxy::doSomething)
        .endClass();

    std::string filename(""test.lua"");
    if (luaL_dofile(L, filename.c_str())) {
        std::cout << ""Error: script not loaded ("" << filename << "")"" << std::endl;
        L = 0;
        return -1;
    }
    // new code
    auto doSomething = luabridge::getGlobal(L, ""something"");
    doSomething(p);
    return 0;
}
