#include <immintrin.h>

inline void RunAssembler_FMA_UnalignedCopy_MultiplyMatrixByMatrix(double *A, double *B, double *C)
{
    size_t i;

    /* the registers you use */
    __m256 a0, a1, a2, a3, b0, b1, b2, b3, sum;
    __m256 *B256 = (__m256 *)B, *C256 = (__m256 *)C;

    /* load values from B */
    asm (""vmovupd %1, %0"" : ""=x""(b0) : ""m""(B256[0]));
    asm (""vmovupd %1, %0"" : ""=x""(b1) : ""m""(B256[1]));
    asm (""vmovupd %1, %0"" : ""=x""(b2) : ""m""(B256[2]));
    asm (""vmovupd %1, %0"" : ""=x""(b3) : ""m""(B256[3]));

    for (i = 0; i < 4; i++) {
        /* load values from A */
        asm (""vbroadcastsd %1, %0"" : ""=x""(a0) : ""m""(A[4 * i + 0]));
        asm (""vbroadcastsd %1, %0"" : ""=x""(a1) : ""m""(A[4 * i + 1]));
        asm (""vbroadcastsd %1, %0"" : ""=x""(a2) : ""m""(A[4 * i + 2]));
        asm (""vbroadcastsd %1, %0"" : ""=x""(a3) : ""m""(A[4 * i + 3]));

        asm (""vmulpd %2, %1, %0""      : ""=x""(sum) : ""x""(a0), ""x""(b0));
        asm (""vfmadd231pd %2, %1, %0"" : ""+x""(sum) : ""x""(a1), ""x""(b1));
        asm (""vfmadd231pd %2, %1, %0"" : ""+x""(sum) : ""x""(a2), ""x""(b2));
        asm (""vfmadd231pd %2, %1, %0"" : ""+x""(sum) : ""x""(a3), ""x""(b3));
        asm (""vmovupd %1, %0"" : ""=m""(C256[i]) : ""x""(sum));
    }
}
