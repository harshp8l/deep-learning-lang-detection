bool recvAll(SOCKET s, void *buf, int len)
{
    char *pbuf = (char*) buf;
    while (len > 0)
    {
        int recvd = recv(s, pbuf, len, 0);
        if (recvd <= 0) // -1 on error, 0 on disconnect
            return false;
        pbuf += recvd;
        len -= recvd;
    }
    return true;
}

bool winsock_server::receive_frame(frame &f)
{
    u_long temp;

    if (!recvAll(server_socket, &temp, sizeof(temp)))
        return false;
    f.length = ntohl(temp);

    u_long *arr = new u_long[f.length+1];

    if (!recvAll(server_socket, arr, sizeof(u_long) * (f.length + 1)))
    {
        delete[] arr;
        return false;
    }

    f.body = new int[f.length];

    for(int i = 0; i < f.length; ++i)
        f.body[i] = ntohl(arr[i]);

    f.tail = ntohl(arr[f.length]);

    delete[] arr;

    return true;
}
