const int N = 1000000;

template <typename Event> void measureNotify(std::string eventType) {

    EventChecker<Event> evChecker;
    auto begin = std::chrono::high_resolution_clock::now();

    for (int i = 0; i < N; i++){
        evChecker.notify();
    }
    auto dur = std::chrono::high_resolution_clock::now() - begin;
    std::cout << "EventChecker (with " << eventType << ") avg notify time: "
        << std::chrono::duration<double, std::nano>(dur).count() / N << " ns \n";

    Event ev;
    begin = std::chrono::high_resolution_clock::now();
    for (int i = 0; i < N; i++) {
        ev.notify();
    }
    dur = std::chrono::high_resolution_clock::now() - begin;
    std::cout << eventType << " avg notify time (no-one waiting): "
        << std::chrono::duration<double, std::nano>(dur).count() / N << " ns \n\n";
}
