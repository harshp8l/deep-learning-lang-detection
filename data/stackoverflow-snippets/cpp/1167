#include<iostream>
using namespace std;
class A
{
        int a;
        int *ptr;
        public:
        A()
        {
                cout<<"Constructor..:"<<endl;
        }

    //Move constructor using assignment operator
    A& operator = ( A&& o)
        {
                a = o.a;
                ptr = new int;
                ptr = o.ptr;
        ptr = NULL;
                cout<<"================Move Constructor using Assignment fun======================="<<endl;
                return *this;
        }
    //Move constructor
    A (A &&o)
        {
                a = o.a;
                ptr = new int;
                ptr = o.ptr;
        ptr = NULL;
                cout<<"<-----------------Move constructor fun----------------------------->"<<endl;

        }


        void display()
        {
                cout<<"a value :"<<a<<endl;
        cout<<"a address :"<<&a<<endl;
                cout<<"Ptr value :"<<ptr<<endl;
        cout<<"Ptr address :"<<&ptr<<endl;

        }

        ~A()
        {
                cout<<"Destructor"<<endl;
        }
};
A& guna_fun()
{
     A *temp;
     cout<<"Guna function..."<<endl;
     return *temp;
}

int main()
{
    //For calling move constructor
    A obj = move(guna_fun());
    obj.display();
        A obj1;
    //For calling move constructor using assignment operator
    obj1 = move(guna_fun());
    obj1.display();

        return 0;
}
