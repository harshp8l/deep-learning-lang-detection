#define UNICODE 1
#include <stdio.h>
#include <windows.h>
#include <wchar.h>

int wmain(int argc, wchar_t **argv)
{
    if (argc < 2)
    {
        wprintf(L"Usage: \"%s\" path\n", argv[0]);
        return -1;
    }

    int len = wcslen(argv[1]);
    if (len >= MAX_PATH)
    {
        wprintf(L"Path is too long\n");
        return -1;
    }

    wchar_t path[MAX_PATH+1] = {};
    wcscpy(path, argv[1]);
    if ((len > 0) && (path[len-1] != L'\\'))
        wcscat(path, L"\\");

    wchar_t searchMask[MAX_PATH+2] = {};
    wcscpy(searchMask, path);
    wcscat(searchMask, L"*");

    WIN32_FIND_DATA FindData;
    HANDLE hSearch = FindFirstFileW(searchMask, &FindData);
    if (hSearch == INVALID_HANDLE_VALUE)
    {
        if (GetLastError() != ERROR_FILE_NOT_FOUND)
        {
            wprintf(L"Error looking for first file\n");
            return -1;
        }
        wprintf(L"No files found\n");
    }
    else
    {
        wchar_t filePath[MAX_PATH*2];
        do
        {
            wcscpy(filePath, path);
            wcscat(filePath, FindData.cFileName);
            wprintf(L"Path %s\n", filePath);
        }
        while (FindNextFileW(hSearch, &FindData));

        if (GetLastError() != ERROR_NO_MORE_FILES)
        {
            FindClose(hSearch);
            wprintf(L"Error looking for next file\n");
            return -1;
        }

        FindClose(hSearch);
    }

    return 0;
}
