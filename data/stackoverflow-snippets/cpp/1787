#include <ros/ros.h>
#include <std_msgs/Int16.h>

class pubsub
{
private:
    ros::NodeHandle nh;
    ros::Publisher pub;
    ros::Subscriber sub;

public:
    void callback(const std_msgs::Int16::ConstPtr& msg) 
    {
        ROS_INFO("I heard this data: [%d]", msg->data);
    }

    void pub(int number)
    {
        std_msgs::Int16 msg;
        msg.data = number;
        ROS_INFO_STREAM("Publishing data");
        pub.publish(msg);
    }

    pubsub()
    {
        pub = nh.advertise<std_msgs::Int16>("just",100);
        sub = nh.subscribe<std_msgs::Int16>("just",100,&pubsub::callback,this);
    }
};

int main(int argc, char **argv)
{
    ros::init(argc,argv,"node");
    pubsub ps;

    ros::Rate r(10);
    int number = 0;
    while (ros::ok())
    {
       ps.pub(number++);
       ros::spinOnce();
       r.sleep();
    }

    return 0;
}
