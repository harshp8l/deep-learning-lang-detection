#include <iostream>

//:For: std::vector
#include <vector>

//:For: std::shared_ptr
#include <memory> 

//:For: std::sort 
#include<algorithm>

class Food{ /* SomeLogicHere */ };
typedef std::vector<std::shared_ptr<Food>> FoodVector;

bool operator==(
    std::shared_ptr<Food> lhs,
    std::shared_ptr<Food> rhs
){
    return true; //TODO: Actual Comparison Logic
}

bool sortByProtein(
    std::shared_ptr<Food> lhs,
    std::shared_ptr<Food> rhs
)  {
    //:Dont Care about implementation.
    //:Just want minimal example that
    //:gets the error.
    return false;

}

std::unique_ptr<FoodVector> greedy_max_protein(
    FoodVector foods,
    int total_kcal 
){

    sort(foods.begin(),foods.end(),sortByProtein);

}

int main()
{
    std::cout<<"Hello World";

    return 0;
}
