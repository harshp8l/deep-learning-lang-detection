#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>

std::ostream & display( const std::string *a, size_t n, size_t cols, std::ostream &os = std::cout )
{
    for ( size_t i = 0; i < n; i++ )
    {
        os << a[i] << ( ( i + 1 ) %  cols == 0 ? '\n' : ' ' ); 
    }

    return os;
}

int main() 
{
    const size_t M = 3, N = 6;
    std::string array[M][N] = 
    {
        { "a", "b", "c", "d", "e", "f", },
        { "g", "h", "i", "j", "k", "l", },
    };

    auto it = std::find( *array, *array + M * N, std::string() );

    size_t n = std::distance( *array, it );

    display( *array, n, N ) << std::endl;

    size_t row, col;

    std::cout<<"Delete character\n";
    std::cout << "enter row: "; 
    std::cin >> row; 
    std::cout << "enter column: ";
    std::cin >> col;

    if ( N * row + col < n )
    {
        size_t pos = N * row + col;

        std::move( *array + pos + 1, *array + n, *array + pos );
        --n;
    }

    std::cout << '\n';
    display( *array, n, N ) << std::endl;

    return 0;
}
