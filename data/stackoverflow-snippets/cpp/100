#include <iostream>
#include <algorithm>
#include <map>

int main(int argc, const char * argv[])
{
    const int32_t SIZE = 7;
    int32_t ArrInput[SIZE]{1, 3, 4, 1, 1, 5, 4};

    std::sort(ArrInput, ArrInput+SIZE);

    int32_t CountRemovedRepetitions = 0;
    std::map<int32_t, int32_t> MapAllUniqueRepetition;

    std::unique(ArrInput, ArrInput+SIZE,
        [&MapAllUniqueRepetition, &CountRemovedRepetitions](const int32_t v1, const int32_t v2) {
            if (v1 == v2) {
                MapAllUniqueRepetition[v1]++;
                CountRemovedRepetitions++;
                return true;
            }
            return false;
        }
    );

    int32_t CountTotalRepetitions = MapAllUniqueRepetition.size() + CountRemovedRepetitions;
    std::cout << "Count removed repetitions:" << CountRemovedRepetitions << " and count total repetiotions: " << CountTotalRepetitions << std::endl;

    return 0;
}
