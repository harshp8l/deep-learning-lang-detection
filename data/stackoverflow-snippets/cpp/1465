#include <iostream>
#include <limits>
#include <vector>
#include <algorithm>
#include <iterator>

using namespace std;

// prototypes
vector<int> generateAndFillArray();
void displayArray(const vector<int> &arr);

int main()
{
    vector<int> arr = generateAndFillArray();
    displayArray(arr);
    return 0;
}

//Prompt the User for a number (1-10) then dynamically allocate an array of this size.
//Prompt the user to fill out the array, with numbers (1-100) all numbers included (1 and 100 are allowed).
//Return the array through the return statement to the main body.

vector<int> generateAndFillArray()
{
    int size;
    cout << "Enter a number (1-10) that will serve as the size of the array: ";
    do
    {
        if (cin >> size)
        {
            if (size >= 1 && size <= 10)
                break;

            cout << "Please enter a correct number between 1 and 10. ";
        }
        else
        {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << "Please enter a valid number between 1 and 10. ";
        }
    }
    while (true);

    vector<int> arr;
    arr.reserve(size);

    cout << "enter a number for each subscript of the array ";

    do
    {
        copy_n(istream_iterator<int>(cin), size, back_inserter(arr));
        if (cin)
            break;

        arr.clear();
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "enter valid numbers for each subscript of the array ";
    }
    while (true);

    return arr;
}

//Display on one line, by itself, with a space following each number, surrounded by square
//    brackets. example: [1 59 13 37 55]
void displayArray(const vector<int> &numbers)
{
    cout << "[";
    copy_n(numbers.begin(), numbers.size(), ostream_iterator<int>(cout, " "));
    cout << "]" << endl;
}
