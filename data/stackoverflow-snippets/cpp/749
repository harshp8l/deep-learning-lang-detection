printf ( ""EXPECT( NO ERROR, ON START ): zmq_errno ~ %s\n"",
          zmq_strerror ( zmq_errno() )
          );

printf ( ""EXPECT( <major>.<minor>.<patch> ): zmq_version ~\n"" );

int major, minor, patch
zmq_version ( &major, &minor, &patch );

printf ( ""INF: current Ã˜MQ version is %d.%d.%d\nZMQ: zmq_errno ~ %s\n"",
          major, minor, patch
          )

printf ( ""EXPECT( NO ERROR ): zmq_errno ~ %s\n"",
          zmq_strerror ( zmq_errno() )
          );

printf ( ""EXPECT( NO ERROR ): zmq_send() ~ %s\n"" );

rc =           zmq_send ( req_socket, ""A_TEST_BLOCK"", 12, ZMQ_DONTWAIT );
printf ( ""INF: zmq_send ( req_socket, ""A_TEST_BLOCK"", 12, ZMQ_DONTWAIT )\nZMQ: returned rc == %d which ouhgt be == 12, is it?\n"",
       rc
       );

printf ( ""EXPECT( NO ERROR ): zmq_errno ~ %s\n"",
          zmq_strerror ( zmq_errno() )
          );
