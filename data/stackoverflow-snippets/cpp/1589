#include <iostream>
#include <string>

using namespace std;

//Using stub type traits
template <class T>
struct TypeTraits;

//your TypeTraits for specific types...
template<>
struct TypeTraits<int>
{
    constexpr static const char *name = ""int"";
};

template<class T>
class X
{
    public:
            constexpr static const char * name = TypeTraits<T>::name;
};

struct foobar {};

//TypeTraits for custom  foobar
template<>
struct TypeTraits<foobar>
{
    constexpr static const char *name = ""foobar"";
};


int main()
{
    //Now you can use static member here
    cout << X<int>::name << endl;
    cout << X<foobar>::name<< endl;
}
