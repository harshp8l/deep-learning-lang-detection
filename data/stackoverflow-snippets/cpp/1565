#include <iostream>
using namespace std;

template<typename T> class thebase
{
  static T instance;
public:
  static T& getInstance() { return instance; }
};

template <typename T> T thebase<T>::instance;

class sub1 : public thebase<sub1> {
public: void tell() { std::cout << "hello1: " << this << std::endl; }
};

class sub2 : public thebase<sub2> {
public: void tell() { std::cout << "hello2: " << this << std::endl; }
};

int main() {
  sub1& ref1 = sub1::getInstance();
  sub1& ref2 = sub1::getInstance();
  std::cout << ((&ref1) == (&ref2)) << std::endl;
  sub1::getInstance().tell();
  sub2::getInstance().tell();
  sub1::getInstance().tell();
  sub2::getInstance().tell();
  return 0;
}
