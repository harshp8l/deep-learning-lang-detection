template <typename... Types>
friend class Tuple;

template<typename FHead, typename... FTail,
         std::enable_if_t<sizeof...(Tail) + 1 == sizeof...(FTail) + 1>* = nullptr>
constexpr Tuple(const Tuple<FHead, FTail...>& o)
  : head(o.head), tail(o.tail)
{}

template<typename FHead, typename... FTail,
         std::enable_if_t<sizeof...(Tail) + 1 == sizeof...(FTail) + 1>* = nullptr>
constexpr Tuple(Tuple<FHead, FTail...>&& o)
  : head(std::move(o.head)), tail(std::move(o.tail))
{}
