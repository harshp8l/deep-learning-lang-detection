//put your implementation of LinkedList class here
#include <iostream> 
#include ""list.h""

LinkedList::LinkedList(){
    head = NULL;
    tail = NULL;     

};

bool LinkedList::addAtBeginning(int val){

    Node *point = new Node(); // This Node will insert the new node at the beginning
    point->data=val;      // This sets the data in the new node
    point->next=head;         // This sets the next pointer to the same as head
    head = point;         // This sets the head to the new Node

    if(head->next != NULL){
        Node *temp = head->next;
        temp->prev = head;
        }
return true; 
};

bool LinkedList::remove(int val){
    Node *temp = head->next;
    Node *trail = head;  
    if(head->data ==val){
            head = head->next;
            head->prev = NULL; 
            delete trail;
            }else{
        while(temp != NULL){
            if(temp->data == val){
                if(temp->next != NULL){
                trail->next = temp->next;  
                delete temp;
                temp= temp->next;
                temp->prev=trail; 
                }else{delete temp;
                    trail->next = NULL;
                }
            }   
            trail = temp; 
            temp = temp->next;
        }
}   
return true; 
};

void LinkedList::printForward() const{
    Node *temp; 
    temp = head;
    while(temp){
        cout << temp->data << endl;
        temp = temp->next; 
        }

};

void LinkedList::printBackward() const{
    Node *temp = head; 
    while(temp->next != NULL){
    temp = temp->next;
    }
    while(temp->prev != NULL){
    cout << temp->data << endl;
    temp = temp->prev;
    }
    cout << head->data << endl;
};
