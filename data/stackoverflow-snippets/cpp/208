#include <iostream>
#include <vector>
#include <algorithm>
#include <exception>
#include <string>

typedef std::pair<int, std::string> Type;

void analyze()
{
  std::string Given = ""there1hello0"";
  std::string word;

  std::vector< Type > vec;

  for(auto& it: Given)
  {
    int number;
    std::string strChar(1, it);
    try
    {
      number = std::stoi(strChar);
      vec.emplace_back(std::make_pair(number, word));
      word.clear();
    }
    catch(std::exception& e)
    {
      word += it;
    }
  }

  std::sort(vec.begin(), vec.end(),
    [](const Type& A, const Type& B)->bool
    {
      return A.first < B.first;
    });

  for(const auto& it: vec)
    std::cout << it.second ;

  std::cout << '\n';
}

int main()
{
  analyze();
  system(""pause"");
  return 0;
}
