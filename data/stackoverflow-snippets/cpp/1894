#include <iostream>
#include <vector>

int main()
{
    std::vector<int> prime;
    std::vector<int> nonPrime;
    int multiple = 0;


    for(int i = 2; i < 101; i++) 
    {
        // you can use a flag, but note that usually it could be more 
        // efficiently implemented with a vector of bools. Try it yourself
        bool is_prime = true;
        for(int j = 0; j < nonPrime.size(); j++)
        {
            if(i == nonPrime[j])
            {
                is_prime = false;
                break;
            }
        }

        if ( is_prime )
        {
            prime.push_back(i);
            // You tested 'multiple' before initializing it for every
            // new prime value
            for(multiple = i; multiple < 101; multiple += i)
            {                           
                nonPrime.push_back(multiple);
            }
        }
    }

    for(int i = 0; i < prime.size(); i++)
    {
        std::cout << prime[i] << std::endl;
    }

    return 0;
}
