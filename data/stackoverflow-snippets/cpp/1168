#include <iostream>

namespace pcl{
namespace visualization {
     class PointPickingCallback{
         public:
         PointPickingCallback(){
             std::cout << ""Contruct PointPickingCallback"" << std::endl;
         }
         virtual void Execute(){
             std::cout << ""With shift"" << std::endl;
         }
     };
}
}

namespace mynamespace{
    class InhPointPickingCallback : public pcl::visualization::PointPickingCallback {
        public:
        InhPointPickingCallback(){
            std::cout << ""Contruct Inherited PPC"" << std::endl;
        }
        void Execute() override{ //note override is c++11
            std::cout << ""Without shift"" << std::endl;
        }
    };
}

int main()
{
    //without inheritance
    //pcl::visualization::PointPickingCallback ppc;
    mynamespace::InhPointPickingCallback ppc;
    ppc.Execute();
    return 0;
}
