template<unsigned int t>
class Base {
protected:
    int a;

    template<unsigned int u> friend class Derived1; // here
};

template <unsigned int>
class Derived2;

template<unsigned int t>
class Derived1 : public Base<t> {
public:
    Derived1(Derived2<t>& d2) {
        cout << d2.a << endl;
    }
};

template<unsigned int t>
class Derived2 : public Base<t> {

};

int main() {
    Derived2<1> d2;
    Derived1<1> d1(d2);

    return 0;
}
