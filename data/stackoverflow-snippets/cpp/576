auto compare_first = [](std::pair<int, int> const & a, std::pair<int, int> const & b){
    return a.first < b.first;
};

auto compare_second = [](std::pair<int, int> const & a, std::pair<int, int> const & b){
    return a.second < b.second;
};

std::vector<std::pair<int, int>> values { {2,3}, {2,4}, {3,2}, {3,4}, {3,5} };

std::pair<int, int> value { 2, 3 };

auto it_c = std::upper_bound(values.begin(), values.end(), value, compare_first);
auto it = std::upper_bound(it_c, values.end(), value, compare_second);
