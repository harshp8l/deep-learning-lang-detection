#include <iostream>
#include <vector>
#include <ctime>

using std::cin;
using std::cout;
using std::endl;
using std::vector;

struct Twalker
{
    int state;
    float x,y;
};

// Initialize the vector of vectors of Twalker objects
void initialise(vector<vector<Twalker>>& walker, int nv, int n)
{ 
    Twalker wlk;
    vector<Twalker> tempWalker;

    // Outer loop - vector of vectors
    for (int i=0; i<nv; i++){
        // Inner loop - vector of Twalker objects
        for (int j=0; j<n; j++){
            // Temporary Twalker
            wlk.state = 1;
            wlk.x = 0.0; 
            wlk.y = float(rand()%10);
            // Add it to the inner vector
            tempWalker.push_back(wlk);
        }
        // Add the inner vector to the vector of vectors
        walker.push_back(tempWalker);
        // Reset the inner vector
        tempWalker.clear();
    }
}

int main()
{
    // Set the seed
    std::srand(std::time(0));

    int nv = 3, n = 2;
    vector<vector<Twalker>> walker;

    // Initialize   
    initialise(walker, nv, n);

    // Print 
    for (int i = 0; i < nv; i++)
        for (int j = 0; j < n; j++)
            cout << walker[i][j].state << " " 
                 << walker[i][j].x << " "
                 << walker[i][j].y << endl; 
    return 0;
}
