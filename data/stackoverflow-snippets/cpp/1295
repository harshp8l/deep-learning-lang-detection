class BCMatrix {
public:
  using float_t = float[4];  // Typedef required because of array
  operator float_t*() { return matrix; } // The conversion operator itself

    float matrix[4][4];

  void do_something_nice();
  void do_something_else();
};

// Mock, to make sure it's working as planned
void copy_m4_m4(float r[4][4], float f[4][4]) {
  for(auto i = 0; i < 4; ++i) {
    for(auto j = 0; j < 4; ++j) {
      std::cout << r[i][j] << "", "";
    }
    std::cout << std::endl;
  }
}

int main() {
  std::string testString = ""testing"";

  // Test: fill the source array
  BCMatrix obmat;
  for(auto i = 0; i < 4; ++i) {
    for(auto j = 0; j < 4; ++j) {
      obmat[i][j] = 5 * i * j;
    }
  }

  // Final step in proving it works: call the [4][4] function
  BCMatrix mat;
  copy_m4_m4(obmat, mat);
}
