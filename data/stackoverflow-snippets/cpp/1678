#include <iostream>
#include <omp.h>
using namespace std;
static long num_steps = 100000000;
double step;

int main() {
    double pi = 0.0;
    step = 1.0 / (double)num_steps;

    double start_time = omp_get_wtime();

#pragma omp parallel for reduction(+:pi)
    for (int i = 0; i < num_steps; ++i) {
        double x = i * step;
        pi += 4.0 / (1.0 + x * x);
    }

    pi *= step;

    double time = omp_get_wtime() - start_time;

    cout << pi << endl;
    cout << time * 1000 << endl;
}
