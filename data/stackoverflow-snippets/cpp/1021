#include <iostream>

class A {
public:
    A(char c) : i(c) {}
    char i;

protected:
    A& operator=(const A& rdm) {
        std::cout << "accessing A::operator=()" << std::endl;
        i = 'x';
        return *this;
    }
};

class X
{
   public:
      X& operator=(X const& rhs)
      {
        std::cout << "accessing X::operator=()" << std::endl;
        return *this;
      }
};

class B : public A {
public:
    B(char c) : A(c) {}
    X x;
};


int main(int ac, char** av) {

    B a('a');
    B b('b');

    std::cout << "a.i == " << a.i << std::endl;

    a = b;

    std::cout << "a.i == "<< a.i << std::endl;
}
