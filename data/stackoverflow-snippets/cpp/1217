namespace detail {
    template<typename T, std::size_t N, std::size_t... Index>
    std::array<std::reference_wrapper<T>, N> wrap(std::array<T, N>& a,
                                                  std::index_sequence<Index...>) {
        return {a[Index]...};
    }
}

template<typename T, size_t N>
std::array<std::reference_wrapper<T>,N> wrap(std::array<T,N>& a) {
    return detail::wrap(a, std::make_index_sequence<N>());
}
