#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <ctime>
#include <windows.h>

...
std::time_t t = std::time(nullptr);
char date[100];
std::strftime(date, sizeof(date), "" %c"", std::localtime(&t));
for(size_t i = 0, len = strlen(date); i < len; i++)
    if(date[i] == ':')
        date[i] = ','; //use a different character

char *Name = ""_abc"";
string url(""c:\\test\\"");
string name(Name);
string extension("".bmp"");
string path = url + name + date + extension;

int width = i8bppHeader_.biWidth;
int height = i8bppHeader_.biHeight;
int bpp = i8bppHeader_.biBitCount;

int size = ((width * bpp + 31) / 32) * 4 * height;

f8bppHeader_.bfType = 'MB'; // Will be inverted during the fwrite
f8bppHeader_.bfSize = sizeof(BITMAPFILEHEADER) + sizeof(BITMAPINFOHEADER)
    + 256 * sizeof(RGBQUAD) + size;
f8bppHeader_.bfReserved1 = 0;
f8bppHeader_.bfReserved2 = 0;
f8bppHeader_.bfOffBits = sizeof(BITMAPFILEHEADER) + sizeof(BITMAPINFOHEADER)
    + 256 * sizeof(RGBQUAD);

ofstream fout(path, ios::binary);
fout.write((char*)&f8bppHeader_, sizeof(f8bppHeader_));
fout.write((char*)&i8bppHeader_, sizeof(i8bppHeader_));
fout.write((char*)p8bpp, 256 * sizeof(RGBQUAD));
fout.write((char*)buffer, size);
