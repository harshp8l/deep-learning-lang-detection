#include ""stdafx.h""
#include <iostream>
#include <conio.h>
#include <string>
#include <array>


using namespace std;

struct Stock//structure where items of stock and their price and amount sold are held
{
    string sName = """";
    float fPrice = 0;
    int iSold = 0;
};

int main()
{

    int iDiffSold = 0;// various varibles are named
    float fTotalSales = 0, fOpCost = 0, fTax = 0, fProfit = 0, fSalesWarning = 0;


    Stock iBestSeller{};// using stock types instead of ints
    Stock iWorseSeller{};


    cout << ""-------------------------------------------------------------"" << ""\n"";//welcome mesage
    cout << ""|            Hello, Welcome to the Program.                 |"" << ""\n"";
    cout << ""-------------------------------------------------------------"" << ""\n"";
    Stock stockRecords[5];

    //loop here for the input of 5 records
    for (int iCount = 0; iCount < 5; iCount++)
    {
        cout << ""\nPlease enter the name for the item of stock: "";
        cin >> stockRecords[iCount].sName;
        cout << ""\nPlease enter the price for "" << stockRecords[iCount].sName << "": "";
        cin >> stockRecords[iCount].fPrice;
        cout << ""\nPlease enter the amount sold of "" << 
stockRecords[iCount].sName << "": "";
        cin >> stockRecords[iCount].iSold;
    }

    system(""cls"");

    // initialize iBestSeller
    iBestSeller = stockRecords[0];

    //This loop is for determining the best seller
    for (int iCount = 0; iCount < 5; iCount++) {
        if (stockRecords[iCount].iSold > iBestSeller.iSold) {
            iBestSeller = stockRecords[iCount];
        }
    }

    //output the best seller results
    cout << ""\nbiggest seller= "" << iBestSeller.sName << "" it's selling price is ""
    << iBestSeller.fPrice << "" and "" << iBestSeller.iSold << "" item were sold"" << endl;

    // initialize iWorseSeller
   iWorseSeller = stockRecords[0];

    //This loop is for determining the worse seller
    for (int iCount = 0; iCount < 5; iCount++) {
        if (stockRecords[iCount].iSold < iWorseSeller.iSold) {
            iWorseSeller = stockRecords[iCount];
        }
    }

    //output the worse seller results
    cout << ""\nWorse seller= "" << iWorseSeller.sName << "" it's selling price is ""
    << iWorseSeller.fPrice << "" and  "" << iWorseSeller.iSold << "" items were sold"" << endl;


    iDiffSold = iBestSeller.iSold - iWorseSeller.iSold;//this works out the difference between the most and least items sold

    cout << ""\nThe difference between the amount of the most sold item and the least is "" << iDiffSold << ""\n"" ;//outputs difference



    for (int iCount = 0; iCount < 5; iCount++) {

        fTotalSales = fTotalSales + (stockRecords[iCount].iSold * stockRecords[iCount].fPrice);//this for loop finds the total price of all the items sold

    }

    cout << ""\nThe total price of all the items sold is: "" << fTotalSales << ""\n"";//outputs total

    fOpCost = fTotalSales / 2;//works out operational costs

    cout << ""\nThe price of operational costs is: "" << fOpCost << ""\n"";//outputs operational cost

    fTax = fTotalSales * .2;//works out tax due

    cout << ""\nThe tax you will owe for these sales will be: "" << fTax << ""\n"";//outputs tax due

    fProfit = fTotalSales - fOpCost - fTax;//works out profit

    cout << ""\nThis will leave you a profit of: "" << fProfit << ""\n"";//outputs profit

    fSalesWarning = fTotalSales * .005;//this line and the loops below work out and output the five percent of sales warning(if one is due)

    for (int iCount = 0; iCount < 5; iCount++)
    {
        if (stockRecords[iCount].iSold * stockRecords[iCount].fPrice <= fSalesWarning)
        {
            cout << ""\nWARNING! The item "" << stockRecords[iCount].sName << "" has sales that constitute 5% of sales or less"";
        }
    }
      _getch();
    return 0;
}
