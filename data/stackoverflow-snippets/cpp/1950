#include <iostream>

class A
{
  public:
    virtual void foo()
    {
      std::cout << "A::foo()" << std::endl;
    }
};

class B
{
  public:
    virtual void bar()
    {
      std::cout << "B::bar()" << std::endl;
    }
};

int main(int argc, char *argv[])
{
  A *a = new A();
  B *b = new B();

  std::cout << "A:          ";
  a->foo();
  std::cout << "B:          ";
  b->bar();

  //Frankenobject
  *((void **)a) = *((void **)b); //Overwrite a's vtable ptr with b's.
  std::cout << "Franken-AB: ";
  a->foo();
}
