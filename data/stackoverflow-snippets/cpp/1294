#include <vector>
#include <iostream>
#include <algorithm>

struct B { };
struct C : public B { };
struct D : public B { };

enum idClass { isB, isC, isD };

int main ()
 {
   using pib = std::pair<idClass, B>;

   std::vector<pib> vpb;

   vpb.emplace_back(isC, C{});
   vpb.emplace_back(isD, D{});
   vpb.emplace_back(isD, D{});
   vpb.emplace_back(isD, D{});
   vpb.emplace_back(isC, C{});
   vpb.emplace_back(isC, C{});
   vpb.emplace_back(isD, D{});
   vpb.emplace_back(isD, D{});


   std::sort(vpb.begin(), vpb.end(), [](pib const & p1, pib const & p2)
             { return p1.first < p2.first; });

   for ( auto const & p : vpb )
      std::cout << ""- "" << p.first << std::endl;
 }
