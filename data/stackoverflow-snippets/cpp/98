#include <string>
#include <sstream>

class StringBuilder
{
private:
    // this is just an example, you can use whatever you want
    // to collect and store the built data inside this class.
    // However, if you don't use std::ostringstream for the
    // collection, you may have to overload 'operator<<' for
    // every data type you want to support for input.  This
    // example uses a single templated override for simplicity...

    std::ostringstream m_strm;

public:
    template<typename T>
    StringBuilder& operator<<(const T &arg)
    {
        m_strm << arg;
        return *this;
    }

    operator std::string() const
    {
        return m_strm.str();
    }
};
