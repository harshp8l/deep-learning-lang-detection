template<typename T>
struct type_wrap
{
    type_wrap(T&& rrT):value(rrT)
    {
        if constexpr (std::is_same<int, T>::value)
        {
            cout << "The wrapped type is " << typeid(value).name() << endl;
            cout << "The wrapped value is " << value << endl;
        }
        else
        {
            cout << "The wrapped type is " << typeid(value).name() << endl;
            cout << "The wrapped value is " << value << endl;
        }
    } 

    T& value;
};
