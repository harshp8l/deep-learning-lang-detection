void foo_t::run()
        {
            while (running_)
            {
                unique_lock<mutex> lock(lock_);
                signal_.wait(lock, [&]() { return !running_ || !pause_;  });
                if (!running_) return;

                cout << ".  ";
                this_thread::sleep_for(chrono::milliseconds(100));
            }
        }

condition_variable& foo_t::GetSignal()
        {
            return signal_;
        }

void foo_t::SetPause(bool flag)
        {
            pause_ = flag;
        }
