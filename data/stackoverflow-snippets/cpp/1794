[DllImport("kernel32.dll", CharSet = CharSet.Auto, SetLastError = true)]
[return: MarshalAs(UnmanagedType.Bool)]
static extern bool IsWow64Process(IntPtr hProcess, out bool wow64Process);

public static bool Is64BitOperatingSystem()
{
    // 64-bit programs run only on Win64
    if (IntPtr.Size == 8)
    {
        return true;
    }
    else
    {
        // 32-bit programs run on both 32-bit and 64-bit Windows
        // Detect whether the current process is a 32-bit process running on a 64-bit system.
        bool flag;
        return ((doesWin32MethodExist("kernel32.dll", "IsWow64Process") &&
                    IsWow64Process(GetCurrentProcess(), out flag)) && flag);
    }
}


 private static bool doesWin32MethodExist(string moduleName, string methodName)
 {
      IntPtr moduleHandle = GetModuleHandle(moduleName);
      if (moduleHandle == IntPtr.Zero)
      {
          return false;
      }
      return (GetProcAddress(moduleHandle, methodName) != IntPtr.Zero);
 }
