class Worker : public QThread {
    Q_OBJECT // Don't forget this macro
    void run() {
        std::cout << ""WORKER: Started."" << std::endl;
        // QObject::connect(this, SIGNAL(finished()), QCoreApplication::instance(), SLOT(quit()));
        int i=0;
        while(i++<3) {
            std::cout << ""WORKER: I am running."" << std::endl;
            usleep(1e6);
        }
        std::cout << ""WORKER: Finished."" << std::endl;
        this->deleteLater();
    }
};

int main(int argc, char** argv) {

    std::cout << ""MAIN: Init QCoreApplication"" << std::endl;
    QCoreApplication qtApplication(argc, argv);

    std::cout << ""MAIN: Init Worker"" << std::endl;
    Worker *myWorker = new Worker();
    QObject::connect( myWorker, SIGNAL(destroyed()), &qtApplication, SLOT(quit());
    myWorker->start();

    std::cout << ""MAIN: Start Event-Loop."" << std::endl;
    qtApplication.exec();

    std::cout << ""MAIN: Event-Loop finished."" << std::endl;
    return 0;
}
