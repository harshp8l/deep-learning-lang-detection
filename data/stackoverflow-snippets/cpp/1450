#include <cstring>
#include <string>
#include <iostream>
#include <fstream>
//using namespace std;

// some forward declarations
int Add(int, int = 0); // as long as you said the second parameter is optional
int Sub(int, int = 0);
int Mult(int, int = 0);
int Div(int, int = 0);
int Fact(int);



int main(){

    std::ifstream in("data.txt");
    std::string sLine;
    char op;
    int param1, param2;

    while(in >> op){    // getting the first character from the file which is considered to be the operator
        std::getline(in, sLine); // after reading the operator above we read the remaining whole line containing 1 or 2 integer values.

        switch(op){
            case '+':{
                // some parsing and converting here
                char* token = strtok((char*)&sLine[0], " ");
                while(token){
                    param1 = atoi(token);
                    token = strtok(NULL, " ");
                    param2 = atoi(token);
                    token = strtok(NULL, " ");
                    // calling relevant functions and printing
                    std::cout << param1 << " " << op << " " 
                        << param2 << " = " << 
                        Add(param1, param2) << std::endl;

                }
            }
            break;
            case '-':{
                char* token = strtok((char*)&sLine[0], " ");
                while(token){
                    param1 = atoi(token);
                    token = strtok(NULL, " ");
                    param2 = atoi(token);
                    token = strtok(NULL, " ");
                    std::cout << param1 << " " << op << " " 
                        << param2 << " = " << 
                        Sub(param1, param2) << std::endl;
                }

            }
            break;
            case '*':{
                char* token = strtok((char*)&sLine[0], " ");
                while(token){
                    param1 = atoi(token);
                    token = strtok(NULL, " ");
                    param2 = atoi(token);
                    token = strtok(NULL, " ");
                    std::cout << param1 << " " << op << " " 
                        << param2 << " = " << 
                        Mult(param1, param2) << std::endl;
                } 
            }
            break;
            case '/':{
                char* token = strtok((char*)&sLine[0], " ");
                while(token){
                    param1 = atoi(token);
                    token = strtok(NULL, " ");
                    param2 = atoi(token);
                    token = strtok(NULL, " ");
                    std::cout << param1 << " " << op << " " 
                        << param2 << " = " << 
                        Div(param1, param2) << std::endl;
                }

            }
            break;
            case '!':{
                char* token = strtok((char*)&sLine[0], " ");
                while(token){
                    param1 = atoi(token);
                    token = strtok(NULL, " ");
                    std::cout << param1 << op << " = " << 
                        Fact(param1) << std::endl;
                }                
            }
            break;
        }

    }

    in.close(); // graceful close

    std::cout << std::endl;
    std::cin.get();
    return 0;
}

int Add (int a, int b) { return a + b;}
int Sub (int a, int b) { return a - b;}
int Mult(int a, int b) { return a * b;}
int Div (int a, int b) { return a / b;}
int Fact(int a) { 

    int tmp(a - 1);
    while( tmp)
        a *= tmp--;

    return a;
}
