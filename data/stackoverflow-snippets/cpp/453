template <size_t N, int pos>
void init_bitset(std::bitset<N>&){}

template <size_t N, int pos = 0, typename ...Bits>
void init_bitset(std::bitset<N>& bitset, bool head, Bits ...tail)
{   
   bitset.set(pos, head);
   init_bitset<N, pos + 1>(bitset, tail...);
}

template <typename ... args>
auto make_bitset(args... bools) -> std::bitset<sizeof...(bools)>
{
    std::bitset<sizeof...(bools)> bitset;
    init_bitset(bitset, bools...);
    return bitset;
}

int main()
{
  std::cout << make_bitset(1,1,0,0,1,0, 1) << ""\n"";
  std::cout << make_bitset(1,1,1) << ""\n"";
  std::cout << make_bitset(0,0,0,0) << ""\n"";
}
