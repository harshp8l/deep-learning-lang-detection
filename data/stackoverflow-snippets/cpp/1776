#include <iostream>
#include <memory>
#include ""DemoClassHierarchy.hpp""

int main() {
  A *a2aPtr = new A;
  A *a2bPtr = new B;
  std::shared_ptr<A> a2cPtr(new C);
  C *c2dPtr = new D;
  std::unique_ptr<A> a2dPtr(new D);

  std::cout << ""a2aPtr->instanceOf<A>(): expected=1, value="" << a2aPtr->instanceOf<A>() << std::endl;
  std::cout << ""a2aPtr->instanceOf<B>(): expected=0, value="" << a2aPtr->instanceOf<B>() << std::endl;
  std::cout << ""a2aPtr->instanceOf<C>(): expected=0, value="" << a2aPtr->instanceOf<C>() << std::endl;
  std::cout << ""a2aPtr->instanceOf<D>(): expected=0, value="" << a2aPtr->instanceOf<D>() << std::endl;
  std::cout << std::endl;
  std::cout << ""a2bPtr->instanceOf<A>(): expected=1, value="" << a2bPtr->instanceOf<A>() << std::endl;
  std::cout << ""a2bPtr->instanceOf<B>(): expected=1, value="" << a2bPtr->instanceOf<B>() << std::endl;
  std::cout << ""a2bPtr->instanceOf<C>(): expected=0, value="" << a2bPtr->instanceOf<C>() << std::endl;
  std::cout << ""a2bPtr->instanceOf<D>(): expected=0, value="" << a2bPtr->instanceOf<D>() << std::endl;
  std::cout << std::endl;
  std::cout << ""a2cPtr->instanceOf<A>(): expected=1, value="" << a2cPtr->instanceOf<A>() << std::endl;
  std::cout << ""a2cPtr->instanceOf<B>(): expected=0, value="" << a2cPtr->instanceOf<B>() << std::endl;
  std::cout << ""a2cPtr->instanceOf<C>(): expected=1, value="" << a2cPtr->instanceOf<C>() << std::endl;
  std::cout << ""a2cPtr->instanceOf<D>(): expected=0, value="" << a2cPtr->instanceOf<D>() << std::endl;
  std::cout << std::endl;
  std::cout << ""c2dPtr->instanceOf<A>(): expected=1, value="" << c2dPtr->instanceOf<A>() << std::endl;
  std::cout << ""c2dPtr->instanceOf<B>(): expected=0, value="" << c2dPtr->instanceOf<B>() << std::endl;
  std::cout << ""c2dPtr->instanceOf<C>(): expected=1, value="" << c2dPtr->instanceOf<C>() << std::endl;
  std::cout << ""c2dPtr->instanceOf<D>(): expected=1, value="" << c2dPtr->instanceOf<D>() << std::endl;
  std::cout << std::endl;
  std::cout << ""a2dPtr->instanceOf<A>(): expected=1, value="" << a2dPtr->instanceOf<A>() << std::endl;
  std::cout << ""a2dPtr->instanceOf<B>(): expected=0, value="" << a2dPtr->instanceOf<B>() << std::endl;
  std::cout << ""a2dPtr->instanceOf<C>(): expected=1, value="" << a2dPtr->instanceOf<C>() << std::endl;
  std::cout << ""a2dPtr->instanceOf<D>(): expected=1, value="" << a2dPtr->instanceOf<D>() << std::endl;

  delete a2aPtr;
  delete a2bPtr;
  delete c2dPtr;

  return 0;
}
