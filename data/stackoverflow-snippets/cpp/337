class Formatter {
  ...
  virtual std::ostream& insert(std::ostream&) const = 0;
  friend std::ostream& operator<<(std::ostream& os, const Formatter& fmt) {
    return fmt.insert(os); 
  }
};

class Formatter_State1_Mode1: public Formatter {
  ...
  std::ostream& insert(std::ostream&) const override;
};

class Formatter_State1_Mode2: public Formatter {
  ...
  std::ostream& insert(std::ostream&) const override;
};

Formatter* makeFormatter(Mode, State, ...);
