// INITIALIZE VARs
int time = 0;
stack<int> stackOfChildNodes;
// put root of tree
stackOfChildNodes.push(first);
// go with DFS
while (!stackOfChildNodes.empty()) {
    int current = stackOfChildNodes.top();
    stackOfChildNodes.pop();
    // if node was not visited (time is not set)
    if (timeIn[current] == -1) {
        timeIn[current] = time; // node visited
        time++; // increase time to go further
        stackOfChildNodes.push(current); // include node in processing to leave it in future
        int child = children[current];
        // add descendants to process them
        while (child != 0) {
            stackOfChildNodes.push(child);
            child = descendants[child];
        }
    }
    // if node was visited, so we gonna leave him now
    if (timeIn[current] != -1) {
        timeOut[current] = time-1;
    }
}
