/*
transform(begin(a_), end(a_), back_inserter(all),
    [vertices_ = vertices] (v3d<int> v) {
        // modify vertices_
    }
);
*/

struct lambda {
    v2d<int> vertices_;
    v2d<int> operator()(v3d<int> v) {
        // modify vertices_
    }
};

auto first1 = begin(a_);
auto last1 = end(a_):
auto d_first = back_inserter(all);
lambda unary_op{vertices}; // <-- capture done here
while (first1 != last1) {
    *d_first++ = unary_op(*first1++); // <-- lambda invoked here
}
