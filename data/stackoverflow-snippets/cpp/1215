#include <vector>
#include <type_traits>
#include <tuple>
#include <iostream>

using namespace std;

struct S {
    S(){
        cout << "default constructor" << endl;   
    }
    S(S const &) {
        cout << "copy constructor" << endl;
    }
    S(S &&) {
        cout << "move constructor" << endl;
    }
    S & operator=(S const &) {
        cout << "copy assignment" << endl;
        return *this;
    }
    S & operator=(S &&) {
        cout << "move assignment" << endl;
        return *this;
    }
};

S f() {
    S s2;
    cout << "In f()" << endl;
    return s2;
}

S f2(S s) {
   cout << "In f2()" << endl;
   return s;
}

int main() {
    cout << "about to call f" << endl;
    S s2 = f();
    (void)s2;

    cout << endl << "about to call f2" << endl;
    S s3 = f2(s2);
    (void)s3;
}
