string encryptMsg(string& msg)
{
    string codekey;             /* string codekey, result */
    const char *k;              /* pointer to chars in codekey */

    cout << ""Enter a number that is "" << msg.length() << "" digits long: "";
    if (!getline (cin, codekey)) {          /* read codekey */
        cerr << ""error: invalid input - codekey\n"";
        exit (EXIT_FAILURE);
    }
    if (codekey.length() < msg.length()) {  /* validate codekey length */
        cerr << ""error: insufficient number of digits entered.\n"";
        exit (EXIT_FAILURE);
    }
    k = codekey.c_str();        /* initialize k to 1st char in codekey */
    for (char& c : msg) {       /* loop over each char in msg */
        if (!isdigit(*k)) {     /* validate char is a digit */
            cerr << ""error: non-numeric input '"" << *k << ""'\n"";
            exit (EXIT_FAILURE);
        }
        c = c + (*k++ - '0');   /* add digit val to c, encrypting msg */
    }
    return msg;                 /* return encrypted result */
}
