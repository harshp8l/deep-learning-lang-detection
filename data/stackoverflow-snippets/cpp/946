#include <iostream>
#include <string>
#include <algorithm>
#include <utility>

using namespace std;

template<class T>
class bar
{
public:
    template<class... Args>
    static bar<T> CreateBook(Args&&... args)
    {
        return bar<T>(T(std::forward<Args>(args)...)); // Fixed this line.
    }

    T get()
    {
        return val;
    }
private:

    bar(const T& t) :val(t) {}
    T val;

};

struct book
{
    string name;
    int phone;
    book(string s, int t) : name(s), phone(t) {}
};

void print(bar<book> k)
{
    cout << k.get().name << "" "" << k.get().phone << endl;
}

int main()
{
    bar<book> b = bar<book>::CreateBook(""Hello World"",91520);

    print(b);

    return 0;
}
