//Prompt user for a token
Token get_token()    // read a token from cin
{
  char ch;
  cout << ""\nIn get_token: enter a token: "";
  cin >> ch;    // note that >> skips whitespace (space, newline, tab, etc.)

  switch (ch)
  {
    //character tokens
    case '(':
    case ')':
    case '+':
    case '-':
    case '*':
    case '/':
      return Token(ch);    // let each character represent itself
    //numerical tokens
    case '.':
    case '0':
    case '1':
    case '2':
    case '3':
    case '4':
    case '5':
    case '6':
    case '7':
    case '8':
    case '9':
      {
          cin.putback(ch);   // put digit back into the input stream to recast as double
          double val;
          cin >> val;       // read as a floating-point number
          //initialize number token
          return Token('8',val);   // let '8' represent ""a number""
      }
  default:
      error(""CUSTOM ERROR: Bad token: must be number, mathematical operator, or paren."");
      return Token('x');  //otherwise get 'control reaches end of non-void function' warning
  }  //switch
}
