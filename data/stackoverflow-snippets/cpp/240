#include<iostream>
#include<list>
#include<map>
#include<algorithm> 
using namespace std;

int main() 
{
    list <char> Lst;
    map<char,int16_t> MapCounter;

    //Fill list by data
    char Arr[] {1,1,2,3,4,5,6,7,4,2,1};
    back_insert_iterator<decltype(Lst)> InsListIt(Lst);
    copy(&Arr[0], &Arr[12], InsListIt);

    //Calc unique appearance of elements. Store results in MapCounter of all unique elements apperances
    for_each(Lst.begin(), Lst.end(), [&MapCounter](int val){ MapCounter[val]++; });

    //Calc element that appears max frequeantly times in list
    char MaxElement = 0;
    int16_t MaxRepeat = 0;
    for_each(MapCounter.begin(), MapCounter.end(), [&MaxElement, &MaxRepeat](pair<char, int16_t> el)
    {
        if ( MaxRepeat < el.second )
        {
            MaxElement = el.first;
            MaxRepeat = el.second;
        }
    });

    return 0; 
}
