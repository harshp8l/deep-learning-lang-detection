#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

struct Client {
    std::string name;
    int sm_index;
    int client_id;
    int user_id;

    Client(std::string str, int x,  int y,  int c)
        : name(str), sm_index(x), client_id(y), user_id(c)
    {}

   bool operator<(const Client& a) const { return sm_index < a.sm_index; }
};


int main() {
    std::vector<Client> CLIENT;
    CLIENT.push_back(Client(""Rahul"",8,1,13));
    CLIENT.push_back(Client(""Sahil"",12,3,12));
    CLIENT.push_back(Client(""Ramesh"",1,4,11));
    CLIENT.push_back(Client(""Suresh"",5,5,10));
    CLIENT.push_back(Client(""Ganesh"",86,6,9));
    CLIENT.push_back(Client(""Gagan"",4,7,8));
    std::sort(CLIENT.begin(), CLIENT.end()); 

    Client target("""", 5, 0, 0);
    std::vector<Client>::iterator it = std::lower_bound(CLIENT.begin(), CLIENT.end(), target);
    if (it != CLIENT.end()) {
      std::cout <<  it->name << ""\n""; 
    }    
}
