#include <iostream> 
#include <iomanip> 
#include <string> //Allows you to use strings, which are way more handy for text manipulation
#include <vector> //Allows you to use vector which are meant to be rezied dynamicaly, which is your case


using namespace std;

struct Employee
{

    int employeeID;
    string firstName; //HERE : use string instead of char (string are array of char)
    string lastName; //HERE : use string instead of char
    float payRate;
    int hours;

};



int main()
{
    int j; 

    cout << "How Many Employees Do You Wish To Enter?:\n\n";
    cin >> j;

    vector<struct Employee> info; //creation of the vector (dynamic array) to store the employee info the user is going to give you

    for (int i = 0; i < j; i++) //declare your looping iterator "i" here, you will avoid many error 
    {
        struct Employee employee_i; // create an employee at each iteration to associate the current info
        cout << "Enter in the Data for Employee number " << i + 1 << endl;

        cout << "\n Please Enter The Employee ID Number: ";
        cin >> employee_i.employeeID; 

        cout <<  "\n Please Enter Employees First Name: ";
        cin >> employee_i.firstName;

        cout << "\n Please Enter Employees Last Name: ";
        cin >> employee_i.lastName;

        cout << "\n Please Enter Employees Pay Rate: ";
        cin >> employee_i.payRate;

        cout << "\n  Please Enter The Hours The Employee Worked: ";
        cin >> employee_i.hours;

        info.push_back(employee_i); //store that employee info into your vector. Push_back() methods expands the vector size by 1 each time, to be able to put your item in it
    } // because you employee variable was create IN the loop, he will be destruct here, but not the vector which was created outside

    cout << "\n\n                                   \n";

    for (int i = 0; i < j; i++) //the loop to get back all the info from the vector
    {
        cout << "ID :" << info[i].employeeID << "  First Name :" << info[i].firstName << "  Last Name :" <<
            info[i].lastName << "  Pay Rate :" << info[i].payRate << "  Hours :"<< info[i].hours;
        cout << endl;
//notice the info[i], which leads you to the employee you need and the ".hours" which leads to the hours info of that specific employee
        }

        system("pause");
        return 0;
}
