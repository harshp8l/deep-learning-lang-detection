counter = 0;
    for(iterWall = wallArray.begin(); iterWall != wallArray.end(); iterWall++) {
        if(!leftCheck){
            if( ( (wallArray[counter].rect.getPosition().x + 64) == objectPlayer.rect.getPosition().x ) && ( (wallArray[counter].rect.getPosition().y) == objectPlayer.rect.getPosition().y ) ) {
                objectPlayer.canMoveLeft = false; // if character is standing directly to the right of player AND(wall and player is at the same height), player cant move left.
                leftCheck = true;
            } else {
                objectPlayer.canMoveLeft = true;
            }
        }

        if(!rightCheck) {
            if( ( (wallArray[counter].rect.getPosition().x + - 64) == objectPlayer.rect.getPosition().x ) && ( (wallArray[counter].rect.getPosition().y) == objectPlayer.rect.getPosition().y ) ) {
                objectPlayer.canMoveRight = false;
                rightCheck = true;
            } else {
                objectPlayer.canMoveRight = true;
            }
        }

        if(!downCheck) {
            if( ( (wallArray[counter].rect.getPosition().y + 64) == objectPlayer.rect.getPosition().y ) && ( wallArray[counter].rect.getPosition().x == objectPlayer.rect.getPosition().x ) ) {
                objectPlayer.canMoveUp = false;
                downCheck = true;
            } else {
                objectPlayer.canMoveUp = true;
            }
        }

        if(!upCheck) {
            if( ( (wallArray[counter].rect.getPosition().y - 64) == objectPlayer.rect.getPosition().y ) && ( wallArray[counter].rect.getPosition().x == objectPlayer.rect.getPosition().x ) ) {
                objectPlayer.canMoveDown = false;
                upCheck = true;
            } else {
                objectPlayer.canMoveDown = true;
            }
        }

        counter++;
    }
    upCheck = false;
    rightCheck = false;
    downCheck = false;
    leftCheck = false;
