#include <iostream>
#include <cmath>  
#include <iomanip>

using namespace std;

template<typename T>
T fsqr(T x) { return x * x; }

// Numerically stable and non-blowuppy way to calculate
// sqrt(a*a+b*b)
template<typename T>
T pythag(T a, T b) {
    T absA = fabs(a);
    T absB = fabs(b);
    if (absA > absB)
    {
        return absA*sqrt(1.0 + fsqr(absB / absA));
    } else if (0 == absB) {
        return 0;
    } else {
        return absB*sqrt(1.0 + fsqr(absA / absB));
    }
}
int main () {

double e, r, f, l, c, ans;

const double PI = 3.14159265358972384626433832795028841971693993751058209749445923078164062862089986280348253421170;
cout << ""Insert value for resistance: "" << endl;
cin >> r ;

cout << ""Insert value for frequency: "" << endl;
cin >> f;

cout << ""Insert value for capacitance: "" << endl;
cin >> c;

cout << ""Insert value for inductance: "" << endl;
cin >> l;

cout << ""Insert value for electromotive force (voltage): "" << endl;
cin >> e;

ans = e / pythag(r, 2*PI*f*l - (1/(2*PI*f*c)) );

cout << ""I = "" << ans << ""A"" << endl;

system(""pause"");

return 0;
}
