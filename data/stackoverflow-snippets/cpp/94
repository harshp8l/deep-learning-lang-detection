#include <string>
#include <iostream>
#include <sstream>

std::string fill_pattern(std::string p, int num) {
    size_t start_i, end_i;
    for(
        start_i = p.find_first_of('#'), end_i = start_i;
        end_i < p.length() && p[end_i] == '#';
        ++end_i
    ) {
        // Nothing special here.
    }

    if(end_i <= p.length()) {
        std::ostringstream os;
        os << num;
        const std::string &ns = os.str();
        size_t n_i = ns.length();
        while(end_i > start_i && n_i > 0) {
            end_i--;
            n_i--;
            p[end_i] = ns[n_i];
        }
        while(end_i > start_i) {
            end_i--;
            p[end_i] = '0';
        }
    }

    return p;
}

int main(int argc, char *argv[]) {
    if(argc<2) {
        exit(1);
    }
    for(int i = 1; i < argc; i++) {
        std::cout << fill_pattern(argv[i], 1283) << std::endl;
    }
    return 0;
}
