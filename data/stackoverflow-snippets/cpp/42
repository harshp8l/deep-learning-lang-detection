class Operator
{
  public:
    Operator(const char symbol)
    : operator_char(symbol)
    { ; }
    virtual int evaluate(int a, int b) = 0;
  private:
    const char operator_char;
};

class Multiply_Operator : public Operator
{
  public:
    Multiply_Operator() : Operator('*')
    { ; }
};

// ...
Operator * Create_Operator()
{
  static std::map<char, Operator *> dictionary;
  if (dictionary.empty())
  {
     dictionary['*'] = new Multiply_Operator;
     //...
  }
  char operator_char;
  std::cout << ""Enter operator (*, /, +, -): "";
  std::cin >> operator_char;
  Operator * p_operator = dictionary[operator_char];
  return p_operator;
}
