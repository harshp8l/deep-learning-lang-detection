#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

std::vector<std::string> splitString( const std::string& stringToSplit, const std::string& delimiter, const bool keepEmpty ) {
    std::vector<std::string> results;
    if ( delimiter.empty() {
        results.push_back( stringToSplit );
        return results;
    }

    std::string::const_iterator itSubStrStart = stringToSplit.begin(), itSubStrEnd;
    while( true ) {
        itSubStrEnd = std::search( itSubStrStart, stringToSplit.end(), delimiter.begin(), delimiter.end() );
        std::string temp( itSubStrStart, itSubStrEnd );

        if ( keepEmpty || !temp.empty() ) 
            results.push_back( temp );

        if ( itSubStrEnd == stringToSplit.end() )
            break;

        itSubStrStart = itSubStrEnd + delimiter.size();
    }
    return results;
}

struct DataEntry {
    std::string name;
    unsigned id;
    unsigned year;
    std::string gender;
};

int main() {
    std::string line;
    std::fstream file;

    file.open( ""database.txt"" );

    std::vector<DataEntry> entries;
    std::vector<std::string> elements;

    while( file >> line ) {
        elements = splitString( line, "","" );
        DataEntry entry;
        entry.name = elements[0];
        entry.id   = std::stoul( elements[1] );
        entry.year = std::stoul( elements[2] );
        entry.gender = elements[3];
        entries.push_back( entry );
    }

    file.close();

    for ( auto& e : entries ) {
        std::cout << e.name << "" "" << e.id << "" ""
                 << e.year << "" "" << e.gender << '\n';
    }

    std::cout << ""\nPress any key and enter to quit.\n"";
    std::cin.get();
    return 0;
}
