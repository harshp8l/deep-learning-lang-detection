#include <iostream>
#include <string>
#include <tuple>
#include <vector>

using std::cout;
using std::endl;
using std::get;
using std::literals::string_literals::operator""s;
using std::make_tuple;
using std::string;
using std::tuple;
using std::vector;

static auto chunkLine(string const& line)
{
  auto result = vector<string>{};
  auto i = string::size_type{};
  while (i != string::npos && i < line.size())
  {
    auto pos = line.find(" -", i);
    auto count = pos == string::npos ? pos : (pos - i);
    result.push_back(line.substr(i, count));
    i = pos + (pos != string::npos ? 1 : 0);
  }
  return result;
}

static auto parseChunks(vector<string> const& chunks)
{
  auto result = vector<tuple<string, string>>{};
  for (auto const& chunk : chunks)
  {
    auto pos = chunk.find(" ");
    if (pos != string::npos && chunk[0] == '-')
    {
      auto kv = make_tuple(chunk.substr(1, pos-1), chunk.substr(pos+1));
      result.push_back(kv);
    }
  }
  return result;
}

int main()
{
  auto line = "-f name -b blah blah -e email"s;
  auto keyValueTuples = parseChunks(chunkLine(line));
  for (auto const& kv : keyValueTuples)
  {
    cout << get<1>(kv) << endl;
  }
}
