int n = sep.size();
int remaining = n;

for (int i = 0; i < sep.size(); i++) {
    /* Search for entire sep at end of b
        if not found, search for sep minus last char
        then minus last 2 chars, 3 chars, and so on
    */
    auto it = std::search(b.end() - n - i, b.end(), sep.begin(), sep.end() - i);
    if (it != b.end()) {
        remaining = i; // number of sep chars to search for in p
        break;
    }
}

if (remaining > 0) {
    std::string sep_sub = sep.substr(n-remaining, remaining);
    std::string p_sub = p.substr(0, remaining);

    if (sep_sub == p_sub) {
        // Found sep split across b and p!
    }
}
