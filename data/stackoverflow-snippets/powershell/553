# Show an Open Folder Dialog and return the directory selected by the user.
function Read-FolderBrowserDialog([string]$Message, [string]$InitialDirectory, [switch]$NoNewFolderButton)
{
    $browseForFolderOptions = 0
    if ($NoNewFolderButton) { $browseForFolderOptions += 512 }

    $app = New-Object -ComObject Shell.Application
    $folder = $app.BrowseForFolder(0, $Message, $browseForFolderOptions, $InitialDirectory)
    if ($folder) { $selectedDirectory = $folder.Self.Path } else { $selectedDirectory = '' }
    [System.Runtime.Interopservices.Marshal]::ReleaseComObject($app) > $null
    return $selectedDirectory
}
$folder= Read-FolderBrowserDialog
$com = (New-Object -ComObject Shell.Application).NameSpace($folder)
for($i = 0; $i -lt 64; $i++) {
                $name = $com.GetDetailsOf($com.Items, $i)
                if ($name -eq 'Length') { $lengthattribute = $i}
}
$com.Items() | ForEach-Object {
    if ($_.Type -ne ""File Folder"")
    {
        [PSCustomObject]@{
        Name = $_.Name
        Size = $com.GetDetailsOf($_, 1)
        DateCreated = $com.GetDetailsOf($_, 4)
        Length = $com.GetDetailsOf($_, $lengthattribute)}
    } 
} | Export-csv report.csv  -Encoding ascii -NoTypeInformation

$com.Items() | ForEach-Object {
    If ($_.Type -eq ""File Folder"")
    {
        Get-ChildItem -path $Folder -Recurse | ForEach-Object {
        [PSCustomObject]@{
        Name = $_.Name
        Size = $_.Length/1KB
        DateCreated = $_.CreationTime }
        }
    }
}  | Export-csv report.csv -Encoding ascii -NoTypeInformation -Append -Force
