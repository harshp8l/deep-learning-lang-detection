$Csv = Import-Csv -Path 'C:\Powershell\groups.csv'

# Request XML template
$RequestTpl = @'
<Request>
<Login>
<Username>admin</Username>
<Password>password</Password>
</Login>
<Set%20operation=%27add%27>
<IPHostGroup>
<Name>{0}</Name>
<IPFamily>IPv4</IPFamily>
<HostList>
{1}
</HostList>
</IPHostGroup>
</Set>
</Request>
'@

# Host list XML template
$RequestHostListTpl = '<Host>{0}</Host>'

$Csv | ForEach-Object {
    <#
        Get names of all the properties in the current object
        Leave only those that don't match '^Name$' regex.
        -match, when operates on collections, returns matched items
        You can use

        $_.PSObject.Properties.Name | Where-Object {$_ -ne 'Name'}

        but it's a bit slower.
    #>
    $Members = @($_.PSObject.Properties.Name) -notmatch '^Name$'

    # Build list of hosts
    $RequestHostList = foreach ($item in $Members) {
        # Only add item if it's not empty
        if ($_.$item) {
            $RequestHostListTpl -f $_.$item
        }
    }

    # Build request XML
    $Request = $RequestTpl -f $_.Name, -join $RequestHostList

    # Remove newlines to make it one long string
    $Request = $Request -replace '\r|\n'

    # Show resulting url
    "Invoke-RestMethod -Uri https://172.16.16.16:4444/webconsole/APIController?reqxml=$Request"

    # Uncomment to actually invoke API call
    #Invoke-RestMethod -Uri "https://172.16.16.16:4444/webconsole/APIController?reqxml=$Request"
} 
