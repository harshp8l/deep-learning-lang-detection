[CmdletBinding()]

    param
    (
    [Parameter(Mandatory=$True)]
     [string]$SQLServerInstance,
    [Parameter(Mandatory=$True)]
    [string]$NintexConfigDBName
    )
    Add-PSSnapin Microsoft.SharePoint.PowerShell
    $ConnectionTimeout = 30
    $Query =  "SELECT DISTINCT i.workflowname,i.siteid,i.workflowinitiator, a.activityname FROM dbo.workflowinstance 
    i inner join WorkflowProgress P on I.InstanceID=P.InstanceID inner join Activities A on P.ActivityID=A.ActivityID WHERE a.activityname IN ('Call web service','Execute SQL','Query LDAP','Query XML', 'Start workflow in Nintex Workflow Cloud ',  'Update XML  ', 'Web request ', 'Capture document set version  ', 'Copy to file share',  'Create list', 'Declare as record ', 'Delete drafts', 'Delete item ', 'Delete multiple items', 'Delete previous versions', 'Discard check out ','Query list','Send document set to repository',  'Send document to repository','Set approval status ','Set item permissions', 'Undeclare as record  ', 'Update multiple items', 'Action set', 'Commit pending changes', 'Run parallel actions', 'State machine ', 'Pause for...  ', 'Pause until...  ', 'Wait for check out status change ', 'Wait for item update ', 'Create site  ','Create site collection','Decommission site collection ',  'Delete site', 'Publish Workflow', 'Assign Flexi task', 'Complete workflow task ' ) "

    $QueryTimeout = 120

    $conn=new-object System.Data.SqlClient.SQLConnection
    $ConnectionString = "Server={0};database={1};Integrated Security=True;Connect Timeout={2}" -f $SQLServerInstance,$NintexConfigDBName,$ConnectionTimeout
    $conn.ConnectionString=$ConnectionString
    $conn.Open()
    $cmd=new-object system.Data.SqlClient.SqlCommand($Query,$conn)
    $cmd.CommandTimeout=$QueryTimeout
    $ds=New-Object system.Data.DataSet
    $da=New-Object system.Data.SqlClient.SqlDataAdapter($cmd)
    $da.fill($ds)
    $conn.Close()
    $DS.Tables[0]  

    foreach ($element in $DS.Tables[0])
    {

        $WFI = ($DS.Tables[0] | select -ExpandProperty   workflowinitiator)
        $WFN = ($DS.Tables[0] | select -ExpandProperty   workflowname )
        $WFA = ($DS.Tables[0] | select -ExpandProperty   activityname )
        $WFID = ($DS.Tables[0] | select -ExpandProperty   siteid )


            foreach($line in $WFID)

                    {
                    $siteURL= Get-Spsite -identity $line | Select -property  URL, OWner, Hostname 
                    }

                    $Properties = @{
                    WFInitiator = $WFI
                    WFname =$WFN
                    WFactivity = $WFA
                    SiteID = $WFID
                    siteURL = $siteURL.url
                    siteowner=$siteURL.owner
                    hostname =$siteURL.hostname
                    }
    $Results += New-Object psobject -Property $properties
    }
    $Results | Select-Object WFinitiator, WFname, WFactivity, siteid,siteurl, siteowner, hostname | export-Csv -notypeinformation -Path C:\temp\url.csv
