class TimedScript {
  [System.Timers.Timer] $Timer = [System.Timers.Timer]::new()
  [powershell] $PowerShell
  [runspace] $Runspace = [runspacefactory]::CreateRunspace()
  [System.IAsyncResult] $IAsyncResult

  TimedScript([ScriptBlock] $ScriptBlock, [int] $Timeout) {    
    $this.PowerShell = [powershell]::Create()
    $this.PowerShell.AddScript($ScriptBlock)
    $this.PowerShell.Runspace = $this.Runspace

    $this.Timer.Interval = $Timeout

    Register-ObjectEvent -InputObject $this.Timer -EventName Elapsed -MessageData $this -Action ({
      $Job = $event.MessageData
      $Job.PowerShell.Stop()
      $Job.Runspace.Close()
      $Job.Timer.Enabled = $False
    })
  }

  ### Method: Call this when you want to start the job.
  [void] Start() {
    $this.Runspace.Open()
    $this.Timer.Start()
    $this.IAsyncResult = $this.PowerShell.BeginInvoke()
  }

  ### Method: Once the job has finished, call this to get the results
  [object[]] GetResult() {
    return $this.PowerShell.EndInvoke($this.IAsyncResult)
  }
}
