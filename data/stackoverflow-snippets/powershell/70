function New-SecondaryAccount() {
    [cmdletBinding()]
    param (
        [Parameter(Mandatory,
            Position = 0,
            ValueFromPipeline,
            ValueFromPipelineByPropertyName)]
        [string] $Name,

        [Parameter(Mandatory, Position = 1)]
        [string] $Password,

        [Parameter(Position = 2)]
        [switch] $TestAccount
    )
    DynamicParam {
        $attribute = New-Object System.Management.Automation.ParameterAttribute
        $attribute.Mandatory = $true

        $collection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $collection.Add($attribute)

        if ($TestAccount) {
            $validationSet = @("Test")
        } else {
            $validationSet = @("ADAdmin", "ServerAdmin", "ServiceAccount", "ChuckNorris")
        }
        $collection.Add((New-Object System.Management.Automation.ValidateSetAttribute($validationSet)))  

        $param = New-Object System.Management.Automation.RuntimeDefinedParameter('AccountType', [string], $collection)
        $dictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary
        $dictionary.Add('AccountType', $param)  

        return $dictionary
    }

    PROCESS {
        <# implementation doing all the things here #>
    }
}
