Remove-Variable -Name * -Force -ErrorAction SilentlyContinue
Import-Module ActiveDirectory
$NIS = Get-ADObject ""CN=DOMAIN,CN=ypservers,CN=ypServ30,CN=RpcServices,CN=System,DC=Domain,DC=com"" -Properties:* #Get NIS server information
$maxUid = $NIS.msSFU30MaxUidNumber #Get the last used User ID

$usuarios = Get-ADUser -Filter * -SearchBase ""OU=NAME,OU=NAME,OU=NAME,DC=Domain,DC=com"" -Properties:* #Get all users
foreach($usr in $usuarios)
{
  if ($usr.mssfu30nisdomain -eq $null){
  Set-ADUser -Identity ""$($usr.SamAccountName)"" -Replace @{mssfu30nisdomain=""Domain""} #Enable NIS
  Set-ADUser -Identity ""$($usr.SamAccountName)"" -Replace @{gidnumber=""10005""} #Set Group ID
  Set-ADUser -Identity ""$($usr.SamAccountName)"" -Replace @{loginShell=""/bin/bash""} #Set Login Shell
  $maxUid++ #Raise the User ID number
  Set-ADUser -Identity ""$($usr.SamAccountName)"" -Replace @{uidnumber=$maxUid} #Set User ID number
  Set-ADUser -Identity ""$($usr.SamAccountName)"" -Replace @{uid=$usr.SamAccountName} #Set UID
  Write-Host -Backgroundcolor Green -Foregroundcolor Black $usr.SamAccountName changed #Write Changed Username to console
  }
  else{Write-Host -Backgroundcolor Yellow -Foregroundcolor Black $usr.SamAccountName unchanged} #Write Unchanged Username to console with a yellow background
}
$NIS | Set-ADObject -Replace @{msSFU30MaxUidNumber = $maxuid++}
$NIS | Set-ADObject -Replace @{msSFU30MaxUidNumber = $maxuid++}
