# Check the folder where the trigger file is
# assumes there will only ever be 1 file there, or nothing there.
$triggerFile = Get-ChildItem -LiteralPath "c:\triggerfile\folder\path"

# if there was something found
if ($triggerFile)
{

    # do whatever your calculation is for the new filename "based on"
    # the trigger filename, and store the result. Here, just cutting
    # off the first character as an example.
    $newFileName = $triggerFile.Name.Substring(1)


    # if you can avoid Invoke-Command, directly make the new file on Server2
    New-Item -ItemType File -Path '\\server2\share\' -Name $newFileName
    # end here


    # if you can't avoid Invoke-Command, you need to have
    # pre-saved credentials, e.g. https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/

    $Credential = Import-CliXml -LiteralPath "${env:\userprofile}\server2-creds.xml"

    # and you need a script to run on Server2 to make the file
    # and it needs to reference the new filename from *this* side ("$using:")
    $scriptBlock = {
        New-Item -ItemType File -Path 'c:\destination' -Name $using:newFileName
    }

    # and then invoke the scriptblock on server2 with the credentials
    Invoke-Command -Computername 'Server2' -Credential $Credential $scriptBlock
    # end here

    # either way, remove the original trigger file afterwards, ready for next run
    Remove-Item -LiteralPath $triggerFile -Force
}
