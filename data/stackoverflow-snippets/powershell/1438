   Param
  (
  [Parameter(Position=0,Mandatory=$false)]
  [ValidateNotNullorEmpty()]
  [Alias('cn')][String[]]$ComputerName=$Env:COMPUTERNAME,
  [Parameter(Position=1,Mandatory=$false)]
  [Alias('un')][String[]]$AccountName,
  [Parameter(Position=2,Mandatory=$false)]
  [Alias('cred')][System.Management.Automation.PsCredential]$Credential
  )
  $Obj = @()

  $now = Get-Date

  Foreach($Computer in $ComputerName)
{
If($Credential)
{
    $AllLocalAccounts = Get-WmiObject -Class Win32_UserAccount -Namespace "root\cimv2" `
    -Filter "LocalAccount='$True'" -ComputerName $Computer -Credential $Credential -ErrorAction Stop
 }
 else
{
    $AllLocalAccounts = Get-WmiObject -Class Win32_UserAccount -Namespace "root\cimv2" `
    -Filter "LocalAccount='$True'" -ComputerName $Computer -ErrorAction Stop
    }



$Obj = $AllLocalAccounts | ForEach-Object {

        $user = ([adsi]"WinNT://$computer/$($_.Name),user")
        $pwAge    = $user.PasswordAge.Value
        $maxPwAge = $user.MaxPasswordAge.Value
        $pwLastSet = $now.AddSeconds(-$pwAge)


     New-Object -TypeName PSObject -Property @{


       'Account Name'         = $_.Name
       'Disabled'             = $_.Disabled
       'Password Expires'     = $_.PasswordExpires
       'Password Last Set'    = $pwLastSet
       'Password Expiry Date' = $now.AddSeconds($maxPwAge - $pwAge)
       'Password Required'    = $_.PasswordRequired
       'Domain'               = $_.Domain  
       'Password Age'         = ($now - $pwLastSet).Days

     }
   }

 If($AccountName)
    {
    Foreach($Account in $AccountName)
    {
        $Obj|Where-Object{$_.Name -like "$Account"}
    }
  }
else
  {
    $Obj
  }
 } 
