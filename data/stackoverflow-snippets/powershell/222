$candidateAssembly =  ""C:\My2ndProject\bin\Debug\My1stProject.exe""

# Load your target version of the assembly (these were from the NuGet package, and 
# have a version incompatible with what My2ndProject.exe expects)
[System.Reflection.Assembly]::LoadFrom(""C:\My2ndProject\bin\Debug\Spring.Aop.dll"")
[System.Reflection.Assembly]::LoadFrom(""C:\My2ndProject\bin\Debug\Spring.Core.dll"")
[System.Reflection.Assembly]::LoadFrom(""C:\My2ndProject\bin\Debug\Spring.Data.dll"")

# Method to intercept resolution of binaries
$onAssemblyResolveEventHandler = [System.ResolveEventHandler] {
    param($sender, $e)

    Write-Host ""ResolveEventHandler: Attempting FullName resolution of $($e.Name)"" 
    foreach($assembly in [System.AppDomain]::CurrentDomain.GetAssemblies()) {
        if ($assembly.FullName -eq $e.Name) {
            Write-Host ""Successful FullName resolution of $($e.Name)"" 
            return $assembly
        }
    }

    Write-Host ""ResolveEventHandler: Attempting name-only resolution of $($e.Name)"" 
    foreach($assembly in [System.AppDomain]::CurrentDomain.GetAssemblies()) {
        # Get just the name from the FullName (no version)
        $assemblyName = $assembly.FullName.Substring(0, $assembly.FullName.IndexOf("", ""))

        if ($e.Name.StartsWith($($assemblyName + "",""))) {

            Write-Host ""Successful name-only (no version) resolution of $assemblyName"" 
            return $assembly
        }
    }

    Write-Host ""Unable to resolve $($e.Name)"" 
    return $null
}

# Wire-up event handler
[System.AppDomain]::CurrentDomain.add_AssemblyResolve($onAssemblyResolveEventHandler)

# Load into app domain
$assembly = [System.Reflection.Assembly]::LoadFrom($candidateAssembly) 

try
{
    # this ensures that all dependencies were loaded correctly
    $assembly.GetTypes() 
} 
catch [System.Reflection.ReflectionTypeLoadException] 
{ 
     Write-Host ""Message: $($_.Exception.Message)"" 
     Write-Host ""StackTrace: $($_.Exception.StackTrace)""
     Write-Host ""LoaderExceptions: $($_.Exception.LoaderExceptions)""
}
