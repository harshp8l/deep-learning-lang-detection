$time_stamp= Get-Date -UFormat ""%Y%m%d_%R:%S""

$result_hash = @{}
$result_array= @()
$first_level_hash = @{}
$second_level_hash = @{}

Get-ChildItem 'HKLM:\SOFTWARE\company\Clients' -Recurse | ForEach-Object {
    $regkey = (Get-ItemProperty $_.pspath)

    $regkey.PSObject.Properties | ForEach-Object {
        # a HashTable
        #Write-host $regkey.PSParentPath
        $parent_key = $regkey.PSParentPath -Match '\w+$'
        #Write-host ""Found Parent:"" $matches[0]
        $parent_value = $matches[0]
        #Write-Host $regkey.PSPath

        #Write-Host $_.Name ' = ' $_.Value
        #Write-host ''
        $hash_key = $_.Name
        $hash_value = $_.Value

        If ($hash_key -like 'IsEmail'){
            $second_level_hash.Add('value',$hash_value)
            $second_level_hash.Add('time',$time_stamp)
            $first_level_hash.Add($hash_key,$second_level_hash)
            $result_hash.Add($parent_value,$first_level_hash)
            $result_array += ($result_hash)

            $second_level_hash=@{}
            $first_level_hash=@{}
            $result_hash=@{}
        } ElseIf ($hash_key -like 'IsShip'){
            $second_level_hash.Add('value',$hash_value)
            $second_level_hash.Add('time',$time_stamp)
            $first_level_hash.Add($hash_key,$second_level_hash)
            $result_hash.Add($parent_value,$first_level_hash)
            $result_array += ($result_hash)

            $second_level_hash=@{}
            $first_level_hash=@{}
            $result_hash=@{}

        } ElseIf ($hash_key -like 'IsPack'){
            $second_level_hash.Add('value',$hash_value)
            $second_level_hash.Add('time',$time_stamp)
            $first_level_hash.Add($hash_key,$second_level_hash)
            $result_hash.Add($parent_value,$first_level_hash)
            $result_array += ($result_hash)

            $second_level_hash=@{}
            $first_level_hash=@{}
            $result_hash=@{}

        }
        #$convert_registry_to_json = $regkey | ConvertTo-Json
      #}
    }
}
#Write-Output $result_hash
#Write-Output $result_hash.Item('IsEmail').Keys
#Write-Output $result_hash.Item('Client1').item('IsEmail')

Write-Output $result_array

ForEach ($result in $result_array) {
    ForEach ($entry in $result.GetEnumerator()) {
        $first_level_name = $($entry.Value)
        ForEach ($second_level in $first_level_name.GetEnumerator()) {
            $second_level_name = $($second_level.Value)
            ForEach ($third_level in $second_level_name.GetEnumerator()) {
                Write-Host ""$($entry.Name) -> $($second_level.Name) -> $($third_level.Name): $($third_level.Value)""
            }
        }
    }
}

# You can convert it to JSON
# FSpecifies how many levels of contained objects are included in the JSON representation. The default value is 2.
$convert_result_to_json = $result_array | ConvertTo-Json -Depth 3

Write-Output $convert_result_to_json
