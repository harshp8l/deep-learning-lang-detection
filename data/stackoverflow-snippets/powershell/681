$VaultName = 'myVaultName'
$SecretName = 'mySecretName'

$pfxFilePath = ""C:\Path_to_\Exported_Key.pfx""
$pfx_password = ""yourpassword""
# Password to be used for exported PKS12 file
$pfx_password_securestring = ConvertTo-SecureString -String ""yourpassword"" -Force -AsPlainText
# Export (exportable) private key to portable pfx
$cert = Get-ChildItem Cert:\CurrentUser\My | Where-Object { $_.Subject -match ""cert-subject"" }
$cert | Export-PfxCertificate -FilePath $pfxFilePath -Password $pfx_password_securestring

$flag = [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable
$collection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection 
$collection.Import($pfxFilePath, $pfx_password, $flag)
$pkcs12ContentType = [System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12
$clearBytes = $collection.Export($pkcs12ContentType)
$fileContentEncoded = [System.Convert]::ToBase64String($clearBytes)
$certsecret = ConvertTo-SecureString -String $fileContentEncoded -AsPlainText â€“Force
$secretContentType = 'application/x-pkcs12'

Set-AzureKeyVaultSecret `
    -VaultName $VaultName `
    -Name $SecretName `
    -SecretValue $certsecret `
    -ContentType 'application/x-pkcs12' `
    -Expires $cert.NotAfter `
    -NotBefore $cert.NotBefore  
