@echo off

::  **  INPUT File **
    SET file=%1

::  **  Destination Directory **
    SET dest=C:\Users\%Username%\Desktop\test

::  **  Copy using Command Shell **
    COPY /V /Y  %file% "%dest%"

::  **  Location of PowerShell **
    SET PowerShell=C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell.exe -NoProfile

::  ** Store PATH & NAME of source file (WITHOUT quotation marks) **
    FOR /F "usebackq delims==" %%A IN ('%file%') DO (
          SET fpath=%%~dpA
          SET fname=%%~nxA
    )

::  ** Rename the Files **
    REN "%fpath%%fname%" temp1
    REN "%dest%\%fname%" temp2

::  ** Set CREATED date of output file **
::  NB: Will fail if MONTHS (MM) is identical to MINUTES (mm)
    %PowerShell% (Get-Item \""%dest%\temp2\"").CreationTime=$(Get-Item \""%fpath%temp1\"" ^| Select-Object -ExpandProperty CreationTime ^| Get-Date -f \"MM-dd-yyyy HH:mm:ss\")

::  ** Set MODIFIED date of output file **
::  NB: Will fail if MONTHS (MM) is identical to MINUTES (mm)
    %PowerShell% (Get-Item \""%dest%\temp2\"").LastWriteTime=$(Get-Item \""%fpath%temp1\"" ^| Select-Object -ExpandProperty LastWriteTime ^| Get-Date -f \"MM-dd-yyyy HH:mm:ss\")

::  ** Wait **
    ::  No, I have no idea why it doesn't work without this...
    echo. & echo Wait 15 Seconds ... & echo.
    @CHOICE /T 15 /C yn /D y > NUL

::  ** Restore ORIGINAL filenames **
    REN "%fpath%temp1" "%fname%"
    REN "%dest%\temp2" "%fname%"
