function Get-Permission()
{
  <#
    .SYNOPSIS
    This function reads a set of permissions defined in a text file.  

    .DESCRIPTION 
    The text file is space-delimited but for the last field.  The format is as follows:
      Machine Name    - Specifies the name of the machine the file is on.
      File Name       - Specifies the name of the folder the permission applies to.
      Principal       - Specifies the principal the permission is applied against.
      Permission      - Specifies the permission on the file.

    Example:
      pc1 test  everyone full control
      pc3 test  everyone full control
      pc2 test  everyone full control

    .PARAMETER File
    Specifies the file to read the permissions from.

    .INPUTS 
    [System.Io.FileInfo]

    .OUTPUTS
    [PSCustomObject[]]
    A PSCUstomObject with the following properties:
      ComputerName
      File
      Principal
      Permission

    .EXAMPLE
    #  Get the permissions structure from the old file:
    Get-Permission -File c:\temp\old.txt

    Permission   ComputerName File Principal
    ----------   ------------ ---- ---------
    full control pc1          test everyone
    full control pc3          test everyone

    .EXAMPLE  
    #  Get the permissions structure from the old and new files and compare:
    Compare-Object -ReferenceObject (Get-Permission -File C:\temp\old.txt) -DifferenceObject (Get-Permission -File C:\temp\new.txt)

    InputObject                                                                 SideIndicator
    -----------                                                                 -------------
    @{Permission=full control; ComputerName=pc2; File=test; Principal=everyone} =>
  #>
  [CmdletBinding()]
  param
  (
    [Parameter(Mandatory=$true,ValueFromPipeline=$true)] 
    [string] $File
  )

  process
  {
    foreach ( $ln in (Get-Content -Path $File) )
    {
      $split = $ln -split " +"
      New-Object -TypeName "PSCustomObject" -Property `
      @{
        "ComputerName"    = $split[0]
        "File"            = $split[1]
        "Principal"       = $split[2]
        "Permission"      = ($split | Select-Object -Skip 3) -join " "
      }
    }
  }
}
