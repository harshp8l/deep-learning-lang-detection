string result = null;
using (var aes = new AesManaged())
{
    // openssl_encrypt will zero pad a key that is not the correct length
    var key = Encoding.UTF8.GetBytes(""CefaiNooH4oi6oje"");
    if (key.Length < 32)
    {
        var temp = new byte[key.Length + (32 - key.Length % 32)];
        Array.Copy(key, temp, key.Length);
        key = temp;
    }
    var iv = Encoding.UTF8.GetBytes(""Choodub8ahd4choo"");

    aes.Mode = CipherMode.CBC;
    aes.KeySize = 256;
    aes.Key = key;
    aes.IV = iv;
    aes.Padding = PaddingMode.Zeros;
    var cipher = Convert.FromBase64String(""vt/4HDs0gCAy8D8b/m9F8g=="");
    using (var decryptor = aes.CreateDecryptor())
    {
        var buffer = decryptor.TransformFinalBlock(cipher, 0, cipher.Length);
        result = Encoding.UTF8.GetString(buffer);
    }
}
