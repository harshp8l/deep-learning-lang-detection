i="jcf719000004955"              ##Setting variable named i value as per OP mentioned.
data="yout_file"                 ##Setting value for variable named data to the Input_file for awk here in data shell variable.
awk -v val="$i" '                ##Setting variable named val for awk who has value of variable i in it. In awk we define variables by -v option.
/^>/{                            ##Checking condition here if a line is starting from > then do following:
  match($0,val);                 ##Using match function of awk where we are trying to match variable val in current line, if it is TRUE then 2 variables named RSTART and RLENGTH for math function will be having values. RSTAR will have the index of matching regex and RLENGTH will have complete length of that matched regex.
  if(substr($0,RSTART,RLENGTH)){ ##Checking here if substring is NOT NULL which starts from RSTART to RLENGTH, if value is NOT NULL then do following:
    flag=1 }                     ##Setting variable flag value to TRUE here.
  else{                          ##In case substring value is NULL then do following:
    flag=""};                    ##Setting variable flag value to NULL.
next                             ##next is awk out of the box keyword which will skip all further statements now.
}
flag                             ##Checking condition here if variable flag value is NOT NULL and NOT mentioning any action, so by default print of current line will happen.
' "$data"                        ##Mentioning the value of variable data with double quotes as this is having Input_file value which awk will read.
