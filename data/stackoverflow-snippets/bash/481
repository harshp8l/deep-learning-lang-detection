#!/bin/bash

times=()
fps=()
for f in *.mp4; do

   _t=$(ffmpeg -i ""$f"" 2>&1 | grep ""Duration"" | grep -o "" [0-9:.]*, "" | head -n1 | tr ',' ' ' | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')
    times+=(""$_t"")

    _f=$(ffmpeg -i ""$f"" 2>&1 | sed -n ""s/.*, \(.*\) fp.*/\1/p"")
    fps+=(“$_f”)
done

TOTALDURATION=$( echo ""${times[@]}"" | sed 's/ /+/g' | bc )

tLen=${#fps[@]}

for tLen in ""${fps[@]:1}""; do
    if [[ $tLen != ${fps[0]} ]]; then
        printf “WARNING: VIDEO’S FRAME-RATE (fps) ARE NOT EQUALS, THE PROCESS CAN’T START.”
        printf ""%s\0"" ""${fps[@]}"" |
            sort -zu |
            xargs -0 printf "" %s""
        printf ""\n""
       exit 1
    fi
done

for f in *.mp4; do

DUR=""$(ffmpeg -i ""$f"" 2>&1 | grep ""Duration""| cut -d ' ' -f 4 | sed s/,// | sed 's@\..*@@g' | awk '{ split($1, A, "":""); split(A[3], B, "".""); print 3600*A[1] + 60*A[2] + B[1] }')""

FPS=""$(ffmpeg -i ""$f"" 2>&1 | sed -n ""s/.*, \(.*\) fp.*/\1/p"")""
FPSC=$( echo ""($FPS+0.5)/1"" | bc )

NAME=$(echo ""$f"" | cut -d'.' -f1)

GOP=""$((FPSC*2))""
DURM=""$((DUR%2))""
FDUR=""$(($DUR-$DURM))""

ffmpeg -y -i ""$f"" -i logo.png -c:a aac -b:a 384k -ar 48000 -ac 2 -async 1 -c:v libx264 -x264opts keyint=$GOP:min-keyint=$GOP:no-scenecut -bf 0 -r $FPSC -b:v 4800k -maxrate 4800k -bufsize 3000k -profile:v main -t $FDUR -filter_complex ""[0:v][1:v]overlay=main_w-overlay_w-10:10,scale=1920:1080,setsar=1"" ${NAME}-1080.mp4


ffmpeg -y -i ${NAME}-720.mp4 -c:a aac -b:a 128k -ar 48000 -ac 2 -async 1 -c:v libx264 -x264opts keyint=$GOP:min-keyint=$GOP:no-scenecut -bf 0 -s 640x360 -r $FPSC -b:v 800k -maxrate 800k -bufsize 500k -profile:v main -t $FDUR ${NAME}-360.mp4
done

# with a bash for loop
for f in ./*1080.mp4; do echo ""file '$f'"" >> 1080list.txt; done
# or with printf
printf ""file '%s'\n"" ./*1080.mp4 > 1080list.txt

ffmpeg -f concat -safe 0 -i 1080list.txt -c copy 1080set.mp4

# with a bash for loop
for f in ./*360.mp4; do echo ""file '$f'"" >> 360list.txt; done
# or with printf
printf ""file '%s'\n"" ./*360.mp4 > 360list.txt

ffmpeg -f concat -safe 0 -i 360list.txt -c copy 360set.mp4

rm *1080.mp4
rm *.txt
rm *360.mp4

echo $TOTALDURATION
