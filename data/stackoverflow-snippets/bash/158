# Each param set has its own array variable. There is no need to use
# integer suffixes; you could use more descriptive tags. Just make sure
# that there is no other variable whose name starts with the same prefix.
# Since we are creating arrays, we do *not* quote whitespace *unless*
# it is really part of a parameter value.
declare -a cmake_params_1=(-DCMAKE_CXX_FLAGS=-O2 -DNDEBUG)
declare -a cmake_params_2=(-DCMAKE_CXX_FLAGS=-march=native -O2 -DNDEBUG)
# ....

# Now we can loop through the various arrays of parameter lists: 

# ${!word*} expands to a list of existing variables whose names start with  word   
for name in "${!cmake_params_*}"; do
    # Create a nameref for the array whose name we got from the list
    declare -n array=$name
    # .. prepare ..
    mkdir build
    cd build
    # Here we can use "array" as though it were the variable named in the argument
    cmake "${array[@]}" ..
    make
done
