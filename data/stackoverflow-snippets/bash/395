#!/bin/bash
#CANCAT 0.2

cd input
fps=()
# GET FPS OF ALL VIDEOS INTO ARRAY
for f in *.mp4; do

    _f=$(ffmpeg -i ""$f"" 2>&1 | sed -n ""s/.*, \\(.*\\) fp.*/\\1/p"")
    fps+=(""$_f"")
done

#GET NUMBER OF ELEMENTS IN FPS ARRAY  
tLen=${#fps[@]}
#CHECK FPS EQUALITY     
for tLen in ""${fps[@]:1}""; do
    if [[ $tLen != ${fps[0]} ]]; then
        printf ""WARNING: VIDEO’S FRAME-RATE ARE NOT EQUALS, THE PROCESS CAN’T START.""
        printf ""%s\\0"" ""${fps[@]}"" |
            sort -zu |
            xargs -0 printf "" %s""
        printf ""\\n""
       exit 1
    fi
done
for f in *.mp4; do
#GET DURATION OF EACH VIDEO
DUR=""$(ffprobe -i ""$f"" -show_entries format=duration -v quiet -of csv=""p=0"")""
DUR=$(echo ""$DUR"" | cut -d'.' -f1) # DELETE DECIMAL
#GET FPS OF EACH VIDEO
FPS=""$(ffmpeg -i ""$f"" 2>&1 | sed -n ""s/.*, \(.*\) fp.*/\1/p"")""
#ROUND FPS OF EACH VIDEO
FPSC=$( echo ""($FPS+0.5)/1"" | bc )
#REMOVE EXTENSION FROM VIDEO FILE NAME
NAME=$(echo ""$f"" | cut -d'.' -f1)

#GET GOP
GOP=""$((FPSC*2))""
DELTADUR=""$((DUR%2))""
DUR=""$(($DUR-$DELTADUR))""

#ENCODE 1080p
ffmpeg -y -i ""$f"" -i ../logo/logo.png -c:a aac -b:a 384k -ar 48000 -ac 2 -async 1 -c:v libx264 -x264opts keyint=$GOP:min-keyint=$GOP:no-scenecut -bf 0 -r $FPSC -b:v 4800k -maxrate 4800k -bufsize 3000k -profile:v main -crf 22 -t $DUR -filter_complex ""[0:v][1:v]overlay=main_w-overlay_w-10:10,scale=1920:1080,setsar=1"" ../buffer/${NAME}-1080.mp4

#ENCODE 720p
ffmpeg -y -i ../buffer/${NAME}-1080.mp4 -c:a aac -b:a 256k -ar 48000 -ac 2 -async 1 -c:v libx264 -x264opts keyint=$GOP:min-keyint=$GOP:no-scenecut -bf 0 -s 1280x720 -r $FPSC -b:v 2400k -maxrate 2400k -bufsize 1500k -profile:v main -crf 22 -t $DUR ../buffer/${NAME}-720.mp4

#ENCODE 360p
ffmpeg -y -i ../buffer/${NAME}-720.mp4 -c:a aac -b:a 128k -ar 48000 -ac 2 -async 1 -c:v libx264 -x264opts keyint=$GOP:min-keyint=$GOP:no-scenecut -bf 0 -s 640x360 -r $FPSC -b:v 800k -maxrate 800k -bufsize 500k -profile:v main -crf 22 -t $DUR ../buffer/${NAME}-360.mp4
done


#enter in buffer
cd ..
cd buffer
times=()
for f in *1080.mp4; do
    _t=$(ffprobe -i ""$f"" -show_entries format=duration -v quiet -of csv=""p=0"")
    times+=(""$_t"")
done
#SUM ALL DURATIONS
TOTALDURATION=$( echo ""${times[@]}"" | sed 's/ /+/g' | bc )
#DELETE DECIMAL
DURROUND=$(echo ""$TOTALDURATION"" | cut -d'.' -f1) 
#GET REST OF DIVISION BY 2 AS GOP
TOTDELTA=""$((DURROUND%2))""
#SUBTRACT DELTA FROM TOTAL DURATION
TOTDUR=""$(($DURROUND-$TOTDELTA))""


#CONCAT 1080 SET
# with a bash for loop
for f in ./*1080.mp4; do echo ""file '$f'"" >> 1080list.txt; done

ffmpeg -f concat -safe 0 -i 1080list.txt -t $TOTDUR -c copy ../output/1080set.mp4

#CONCAT 720 SET
# with a bash for loop
for f in ./*720.mp4; do echo ""file '$f'"" >> 720list.txt; done

ffmpeg -f concat -safe 0 -i 720list.txt -t $TOTDUR -c copy ../output/720set.mp4

#CONCAT 360 SET
# with a bash for loop
for f in ./*360.mp4; do echo ""file '$f'"" >> 360list.txt; done

ffmpeg -f concat -safe 0 -i 360list.txt -t $TOTDUR -c copy ../output/360set.mp4

#CLEAN BUFFER
rm *.mp4
rm *.txt

echo ""CONCAT COMPLETED:""
echo ""frame-rate: $fps""
echo ""total duration in seconds: $TOTALDURATION""
echo ""total duration corrected in seconds: $TOTDUR""
