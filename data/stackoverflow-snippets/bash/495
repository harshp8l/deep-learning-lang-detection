#!/usr/bin/env bash

# Takes literal glob expressions on as argv; emits NUL-delimited match list on output
expand_globs() {
  python -c '
import sys, glob
for arg in sys.argv[1:]:
  for result in glob.iglob(arg):
    sys.stdout.write(""%s\0"" % (result,))
' _ ""$@""
}

template_include_pat='^#include (.*)$'
template=${1:-/dev/stdin}

# record the patterns we were looking for
patterns=( )

while read -r line; do
  if [[ $line =~ $template_include_pat ]]; then
    patterns+=( ""${BASH_REMATCH[1]}"" )
  fi
done <""$template""

results=( )
while IFS= read -r -d '' name; do
  results+=( ""$name"" )
done < <(expand_globs ""${patterns[@]}"")

# Let's display our results:
{
  printf 'Searched for the following patterns, from template %q:\n' ""$template""
  (( ${#patterns[@]} )) && printf ' - %q\n' ""${patterns[@]}""
  echo
  echo ""Found the following files:""
  (( ${#results[@]} )) && printf ' - %q\n' ""${results[@]}""
} >&2
