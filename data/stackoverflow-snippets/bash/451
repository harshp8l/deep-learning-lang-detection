    $ cat r.sh
    # w, s: regexps matching "word" or "space" (delimiter)
    # nxt(): sets T (type: "W" or "S") and P (pattern), and "eats" $0
    # pp[], tt[]: parallel arrays with patterns and types
    awk '
    function transform(t, cnt, x) {
        return (t == "W" && cnt == 3 ) ? x + 0.05 : x
    }
    BEGIN {
        w = "^[^ \t]+"
        s = "^[ \t]+"
    }
    {
        for (n = 0; nxt(); n++) {
            pp[n] = P; tt[n] = T
        }

        for (iw = i = 0; i < n; i++) {
           if (tt[i] == "W") iw++
           printf "%s", transform(tt[i], iw, pp[i])
        }
        printf "\n"
    }
    function nxt() {
        if      (match($0, w)) {T = "W"; P = nxt0(); return 1 }
        else if (match($0, s)) {T = "S"; P = nxt0(); return 1 }
        else return 0
    }
    function nxt0(   p) {
        p =  substr($0, 1, RLENGTH)
        $0 = substr($0, RLENGTH + 1)
        return p
    }
    ' "$@"
