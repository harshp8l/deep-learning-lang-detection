OUT=output
for FILE in *.md; do
    NAME=$(printf '%s\n' "$FILE" | cut -f 1 -d '.');
    if [[ "$NAME" =~ ^readme|README$ ]]; then
        [[ "$NAME" =~ ^readme$ ]] && RDME=readme;
        [[ "$NAME" =~ ^README$ ]] && RDME=README;
    echo -e "\\e[34mThere's a \\e[33m$RDME \\e[34mfile. Good.";
    fi;
echo -e "\\e[34mStart compiling...";
if ! [[ "$NAME" =~ ^readme|README$ ]]; then
    echo -e "\\e[34mCompiling $NAME.pdf..." &&
    pandoc -f markdown "$FILE" -t latex -o "$OUT/$NAME.pdf" &&
    echo -e "\\e[34mCompiling $NAME.html..." &&
    pandoc -f markdown "$FILE" -t html5 -o "$OUT/$NAME.html";
fi;
if [[ "$NAME" =~ ^readme|README$ ]]; then
    echo -e "\\e[34mCompiling $RDME.html..." &&
    pandoc -f markdown "$FILE" -t html5 -o $OUT/$RDME.html;
fi;
done;
echo -e "\\e[32mDone compiling!";
if [ -f "$RDME".md ]; then
    echo -e "\\e[34mCopying $RDME.md to /$OUT..." &&
    cp "$RDME".md $OUT &&
    echo -e "\\e[32mDone copying!";
elif ! [ -f "$RDME".md ]; then
    echo -e "\\e[31mThere's no readme.md to copy!";
fi;
if [ -f "$OUT/$RDME".html ]; then
    echo -e "\\e[34mRenaming $RDME.html to index.html..." &&
    mv "$OUT/$RDME".html $OUT/index.html &&
    echo -e "\\e[32mAll tidy!";
else
    echo -e "\\e[31mThere's no readme.html to rename!";
fi;
