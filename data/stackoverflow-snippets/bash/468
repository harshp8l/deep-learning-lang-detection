#!/usr/bin/awk -f

BEGIN {
    str = "JanFebMarAprMayJunJulAugSepOctNovDec";
    for (i = 1; i <= 12; i++) {
        m2n[substr(str, i * 3 - 2, 3)] = i;
        n2m[i] = substr(str, i * 3 - 2, 3);
    }

    day = "02Feb18";
    print MondayOfWeekForDate(day);
}

function epoch2date(epochDays,
    u, v, w, x, y, year, mm, dd, mon)
{
    u = 719468 + epochDays;
    v = int(u / 146097);
    u -= v * 146097;
    if (u == 146096) {
        w = 3;
        u = 36524;
    } else {
        w = int(u / 36524);
        u -= w * 36524;
    }
    x = int(u / 1461);
    u -= x * 1461;
    if (u == 1460) {
        y = 3;
        u = 365;
    } else {
        y = int(u / 365);
        u -= y * 365;
    }

    year = 400 * v + 100 * w + 4 * x + y;
    mm = int((5 * u + 2) / 153) + 3;
    dd = u - int((153 * (mm - 3) + 2) / 5) + 1;
    if (mm > 12) { mm -= 12; year++; }

    year -= 2000;
    mon = n2m[mm];
    return sprintf("%02d%s%02d", dd, mon, year);
}

function epochdays(y, m, d,
    days)
{
    y += 2000;
    if (m < 3) { m += 12; y--; }
    days = 365 * y + int(y / 4) - int(y / 100) + int(y / 400) + int(306 * (m + 1) / 10) - 428 + d - 719163;
    return days;
}

function MondayOfWeekForDate(day,
    yy, mm, dd, epochDays, removeDays, monday)
{
    yy = substr(day, 6, 2);
    mm = m2n[substr(day, 3, 3)];
    dd = substr(day, 1, 2);

    epochDays = epochdays(yy, mm, dd);
    removeDays = (epochDays + 3) % 7;
    monday = epoch2date(epochDays - removeDays);
    return monday;
}
