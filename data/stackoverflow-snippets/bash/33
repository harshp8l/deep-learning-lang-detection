# look up color codes for our terminal rather than assuming ANSI
declare -r red=$(tput setaf 1)
declare -r green=$(tput setaf 2)
declare -r white=$(tput setaf 9)
declare -r aqua=$(tput setaf 6)
declare -r reset=$(tput sgr0)

colorize_msg() {
   printf -v $1 ""\[%s\]%s"" ${2} ${3}
}

set_prompt() {

    declare prompt_pwd=""""
    # only rerun this code when changing directories!
    if [[ last_prompt_pwdL != $PWD ]]; then
        declare -g last_prompt_pwdL=$PWD # logical path
        declare -r last_prompt_pwdP=$(pwd -P) # physical path
        if [[ $last_prompt_pwdL = $last_prompt_pwdP ]]; then
          colorize_msg prompt_pwd $green $last_prompt_pwdL
        else
          colorize_msg prompt_pwd $red $last_prompt_pwdP
        fi

        # ...actually could have just ""return""ed above, but this way we can change other
        # aspects of the prompt even when we don't need to do a new directory lookup.
        declare prompt=""""
        declare msg=""""
        colorize_msg msg $white ""[""
        prompt+=$msg
        colorize_msg msg $aqua ""\u""
        prompt+=$msg
        colorize_msg msg $red ""@""
        prompt+=$msg
        colorize_msg msg $aqua""\h""
        prompt+=$msg
        colorize_msg msg $white ""] [""
        prompt+=$msg
        prompt+=${prompt_pwd}
        colorize_msg msg $white ""]""
        prompt+=$msg
        prompt+=""${reset}\n""
        PS1=$prompt
    fi
}
