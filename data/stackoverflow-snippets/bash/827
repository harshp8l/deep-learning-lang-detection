$ cat tst.awk
function shuffle(oldStr,        newStr,len,array,i,j,t) {
    # logic copied from https://www.rosettacode.org/wiki/Knuth_shuffle#AWK
    # and tweaked to operate on a string as input instead of an array.
    len = length(oldStr)
    for (i=1; i<=len; i++) {
        array[i] = substr(oldStr,i,1)
    }

    for (i = len; i > 1; i--) {
        # j = random integer from 1 to i
        j = int(i * rand()) + 1

        # swap array[i], array[j]
        t = array[i]
        array[i] = array[j]
        array[j] = t
    }

    for (i=1; i<=len; i++) {
        newStr = newStr array[i]
    }
    return newStr
}

BEGIN {
    srand()

    ordrLets = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    randLets = shuffle(ordrLets)
    ordrDigs = "0123456789"
    randDigs = shuffle(ordrDigs)

    ordrChars = ordrLets ordrDigs
    randChars = randLets randDigs

    numChars = length(ordrChars)
    for (charNr=1; charNr<=numChars; charNr++) {
        oldChar = substr(ordrChars,charNr,1)
        newChar = substr(randChars,charNr,1)
        map[tolower(oldChar)] = tolower(newChar)
        map[toupper(oldChar)] = toupper(newChar)
        # Uncomment this to print the mappings to stderr:
        # print oldChar, newChar | "cat>&2"
    }

    split("1 3 4", fldIdx2nr)

    FS = OFS = "|"
}

NR==1 { print; next }
{
    for (fldIdx in fldIdx2nr) {
        fldNr  = fldIdx2nr[fldIdx]
        oldStr = $fldNr
        newStr = ""
        numChars = length(oldStr)
        for (charNr=1; charNr<=numChars; charNr++) {
            oldChar = substr(oldStr,charNr,1)
            newChar = (oldChar in map ? map[oldChar] : oldChar)
            newStr  = newStr newChar
        }
        $fldNr = newStr
    }
    print
}
