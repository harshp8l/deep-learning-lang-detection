#!/bin/bash
ERROR="" ""
declare -a install
declare -a options=('php' 'phpmyadmin' 'php-mysqlnd' 'php-opcache' 'mariadb-server' 'sendmail')

############### HERE's THE NEW BIT #################
declare -a choices=( ""${options[@]//*/+}"" )
####################################################

#===  FUNCTION  ========================================================================
#         NAME:  ACTIONS
#  DESCRIPTION:  Actions to take based on selection
# PARAMETER  1:
#=======================================================================================
function ACTIONS() {

    for ((i = 0; i < ${#options[*]}; i++)); do
        if [[ ""${choices[i]}"" == ""+"" ]]; then
            install+=(${options[i]})
        fi
    done
    echo ""${install[@]}""
}

#===  FUNCTION  ========================================================================
#         NAME:  MENU
#  DESCRIPTION:  Ask for user input to toggle the name of the plugins to be installed
# PARAMETER  1:
#=======================================================================================
function MENU() {
    echo ""Which packages would you like to be installed?""
    echo
    for NUM in ""${!options[@]}""; do
        echo ""[""""${choices[NUM]:- }""""]"" $((NUM + 1))"") ${options[NUM]}""
    done
    echo ""$ERROR""
}

#Clear screen for menu
clear

#Menu loop
while MENU && read -e -p ""Select the desired options using their number (again to uncheck, ENTER when done): "" -n2 SELECTION && [[ -n ""$SELECTION"" ]]; do
    clear
    if [[ ""$SELECTION"" == *[[:digit:]]* && $SELECTION -ge 1 && $SELECTION -le ${#options[@]} ]]; then
        ((SELECTION--))
        if [[ ""${choices[SELECTION]}"" == ""+"" ]]; then
            choices[SELECTION]=""""
        else
            choices[SELECTION]=""+""
        fi
        ERROR="" ""
    else
        ERROR=""Invalid option: $SELECTION""
    fi
done

ACTIONS
