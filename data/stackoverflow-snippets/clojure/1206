(def specific-partitions
  (let [initial-list [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17]]   
    (for [c1 (combinations initial-list 5)
          :let [remainder1 (remove (set c1) initial-list)]
          c2 (combinations remainder1 6)
          :let [remainder2 (remove (set c2) remainder1)]]
      [c1 c2 remainder2])))

=>(take 10 specific-partitions)

([(1 2 3 4 5) (6 7 8 9 10 11) (12 13 14 15 16 17)] 
 [(1 2 3 4 5) (6 7 8 9 10 12) (11 13 14 15 16 17)] 
 [(1 2 3 4 5) (6 7 8 9 10 13) (11 12 14 15 16 17)] 
 [(1 2 3 4 5) (6 7 8 9 10 14) (11 12 13 15 16 17)] 
 [(1 2 3 4 5) (6 7 8 9 10 15) (11 12 13 14 16 17)]
 [(1 2 3 4 5) (6 7 8 9 10 16) (11 12 13 14 15 17)] 
 [(1 2 3 4 5) (6 7 8 9 10 17) (11 12 13 14 15 16)]
 [(1 2 3 4 5) (6 7 8 9 11 12) (10 13 14 15 16 17)]
 [(1 2 3 4 5) (6 7 8 9 11 13) (10 12 14 15 16 17)]
 [(1 2 3 4 5) (6 7 8 9 11 14) (10 12 13 15 16 17)])
