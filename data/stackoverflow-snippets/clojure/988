(defn range-text-length
  ""input = {:col val :minlength minlength :maxlength maxlength}
  Expects 3 parameter key/value combinations:
  :col The column containing the text value
  :maxlength integer value greater than zero up to 3 characters long
  Catch any rows where the column contains text that is shorter than the Minimum Length or longer than the Maximum Length""
  [row input]
  {: pre [(let [{:keys [col  minlength maxlength ]} input
                     minlength-count (count (str minlength))
                     maxlength-count (count (str maxlength))
                     max (read-string (str maxlength))
                     min (read-string (str minlength))
                     crc (count (get row col))]
                 (not (and (pos? maxlength-count)
                      (pos? minlength-count)
                      (pos? max)
                      (pos? min)
                      (<= maxlength-count 3) 
                      (<= minlength-count 3)
                      (>= crc min) 
                      (<= crc max))))]}
  (do (println ""do my stuff with satisfied preconditions"")))
