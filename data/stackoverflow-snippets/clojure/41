;;
;; --- Sinus ---
;;    freq: R // state
;;    R -> constructor()
;;    R -> () -> R // this is invoke
;;    freq() -> R // getter, in fact it is freq: R
;; -------------
(defrecord Sinus [freq]
  ;;
  ;; implement this interface so Sinus 
  ;; appears as a "function object"
  ;;
  clojure.lang.IFn 
  (invoke [_ x]
    (Math/sin(* freq x))))

;; -----------------------------
;; "main()"
;; -----------------------------

;;
;; s1 <- new Sinus (2.5)
;;
(def s1 (Sinus. 2.5))

;;
;; s1.freq()
;;
(:freq s1) 

;;
;; s1(4)
;;
(s1 4)
