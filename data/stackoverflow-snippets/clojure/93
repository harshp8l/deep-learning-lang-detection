(import '[java.io RandomAccessFile])

(defn append-to-json-list-in-file [file-name new-json-text]
  (let [raf (RandomAccessFile. file-name ""rw"")
        lock (.lock (.getChannel raf))    ;; avoid concurrent invocation across processes
        current-length (.length raf)]
    (if (= current-length 0)
      (do
        (.writeBytes raf ""[\n"")           ;; On the first write, prepend a ""[""
        (.writeBytes raf new-json-text)   ;; ...before the data...
        (.writeBytes raf ""\n]\n""))        ;; ...and a final ""\n]\n""
      (do
        (.seek raf (- current-length 3))  ;; move to before the last ""\n]\n""
        (.writeBytes raf "",\n"")           ;; put a comma where that ""\n"" used to be
        (.writeBytes raf new-json-text)   ;; ...then the new data...
        (.writeBytes raf ""\n]\n"")))       ;; ...then a new ""\n]\n""
    (.close lock)
    (.close raf)))
