(ns chaptertwo.atom
  (:use clojure.pprint))

(def orders-queue (atom clojure.lang.PersistentQueue/EMPTY))

(defrecord Order [fplate splate])

(defn add-order [order]
  (swap! orders-queue conj order))

(defn cook-order [] (swap! orders-queue pop))

(add-order (->Order ""Soup"" ""Fish&Chips""))
(pprint orders-queue)

(add-order (->Order ""Salad"" ""Hamburger""))
(pprint orders-queue)

(add-order (->Order ""Rice"" ""Steak""))
(pprint orders-queue)

(cook-order )
(pprint orders-queue)
