(ns tst.demo.core
  (:use tupelo.test)
  (:require
    [tupelo.core :as t] ) )
(t/refer-tupelo)

(dotest
  (newline)
  (let [my-map      {:a 1 :b 2}
        map-entries (vec my-map)
        map-entry-1 (first map-entries)
        map-keys    (keys my-map)
        entry-1-key (key map-entry-1)
  ]
    (is= map-entries [[:a 1] [:b 2]] )
    (is= map-entry-1 [:a 1] )
    (is= map-keys [:a :b])
    (is= entry-1-key :a)

    (spyxx my-map)
    (spyxx map-entries)
    (spyxx map-entry-1)
    (spyxx map-keys)
    (spyxx entry-1-key)
  ))
