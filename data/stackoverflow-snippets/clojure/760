(ns clj.core
  (:require [clojure.string :as str] )
  (:use tupelo.core))

(def data   { :a 1
              :b 2
              :c 3 } )

(let [ks      [:a :b :c]
      v2      (reduce (fn [result curr-key]
                        (update result curr-key inc))
                      data
                      ks)
      _ (spyx v2)
      {:keys [:a :b :c]}    v2
    ; {:keys ks}            v2   <- this one won't work
]
  (spyx [a b c])
)

(defn -main [] )

;=> v2 => {:a 2, :b 3, :c 4}
;=> [a b c] => [2 3 4]
