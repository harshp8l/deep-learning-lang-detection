(defn range-text-length
 ""input = {:col val :minlength minlength :maxlength maxlength}
  Expects 3 parameter key/value combinations:
   :col The column containing the text value
   :maxlength integer value greater than zero up to 3 characters long
 Catch any rows where the column contains text that is shorter than the Minimum Length or longer than the Maximum Length""
 [row input]
 (let [{:keys [col  minlength maxlength ]} input
       minlength-count (count (str minlength))
       maxlength-count (count (str maxlength))
       max (read-string (str maxlength))
       min (read-string (str minlength))]
   (if (and (> 4 maxlength-count 0)
            (number? max)
            (pos? max)
            (> 4 minlength-count 0)
            (number? min)
            (pos? min))
     (>= max (count (get row col)) min)
     (throw (Exception. ""length must be a positive integer value with no more than 3 digits."")))))
