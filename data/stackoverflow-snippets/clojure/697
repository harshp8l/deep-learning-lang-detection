user> (defn fixed-length-password
        ([] (fixed-length-password 8))
        ([n]
           (let [chars-between #(map char (range (int %1) (inc (int %2))))
                 chars (concat (chars-between \0 \9)
                               (chars-between \a \z)
                               (chars-between \A \Z)
                               [\_])
                 password (take n (repeatedly #(rand-nth chars)))]
             (reduce str password))))      
#'user/fixed-length-password
user> (fixed-length-password 10)
;=> ""Pfm0hwppMr""
user> (fixed-length-password 10)
;-> ""n6lQoz_KGd""
user> (fixed-length-password 10)
;=> ""vCkubQR75Z""
