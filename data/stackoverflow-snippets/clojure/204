(ns tst.demo.core
  (:use demo.core tupelo.test )
  (:require
    [tupelo.core :as t]
    [clojure.math.combinatorics :as combo] ))
(t/refer-tupelo)

(defn python-combinations [coll n]
  (let [values     (vec coll)
        idxs       (range (count values))
        idx-combos (combo/combinations idxs n)
        combos     (forv [idx-combo idx-combos]
                     (mapv #(nth values %) idx-combo))]
    combos))

(dotest
  (is= (python-combinations [1 1 1 2 2] 3)
    [[1 1 1] [1 1 2] [1 1 2] [1 1 2] [1 1 2]
     [1 2 2] [1 1 2] [1 1 2] [1 2 2] [1 2 2]] ))
