(def integral (reduce (fn [cum-state new-val]             ; accumulating function
                        (let [integ-val (+ (:running-total cum-state)  new-val) ]
                          { :integ-vals     (conj (:integ-vals cum-state) integ-val)
                            :running-total  integ-val} ))
                      {:integ-vals [] :running-total 0}   ; initial value
                      values))                            ; sequence to process
(spyx integral)
;=> integral => {:integ-vals [0 1 3 6 10 15], :running-total 15}
