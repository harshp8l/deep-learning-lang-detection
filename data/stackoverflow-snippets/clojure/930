(let [original ""these are the specified values: ?, ?, ?, ?""
      replacements [2 389 90 13]
      starting-accumulator [[] replacements] ; Start with an empty vector and all of the replacements.
      reducing-fn (fn [[acc [r & rs :as all-r]] o] ; Apply destructuring liberally
                    (if (= o \?) ; If original character is ""?"".
                      [(conj acc r) rs] ; Then add the replacement character and return the rest of the remaining replacements.
                      [(conj acc o) all-r])) ; Else add the original character and return all the remaining replacements.
      reduced (reduce reducing-fn starting-accumulator original) ; Run the reduce.
      result (first reduced) ; Get the resulting seq (discard the second item: the remaining empty seq of replacements).
      string-joined (apply str result)] ; The string was turned into a seq of chars by `reduce`. Turn it back into a string.
  string-joined)
