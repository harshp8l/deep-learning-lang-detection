(ns example.core
  (:require [http.async.client :as client]))

(def url ""ws://localhost:1337"")

(defn on-open [ws]
  (println ""Connected to WebSocket.""))

(defn on-close [ws code reason]
  (println ""Connection to WebSocket closed.\n""
           (format ""(Code %s, reason: %s)"" code reason)))

(defn on-error [ws e]
  (println ""ERROR:"" e))

(defn handle-message [ws msg]
  (prn ""got message:"" msg))

(defn -main []
  (println ""Connecting..."")
  (let [client (client/create-client)
        ws (client/websocket client 
                             url
                             :open  on-open
                             :close on-close
                             :error on-error
                             :text  handle-message
                             :byte  handle-message)]
    (loop [] (recur))))
