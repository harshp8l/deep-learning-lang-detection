(defn find-primes
 ""Finds all prime numbers less than n, returns them sorted in a vector""
  [n]
  (if (< n 2)
    []
    (let [^booleans sieve (boolean-array n false)
          s (-> n Math/sqrt Math/floor int)]
      (loop [p 2]
        (if (> p s)
          (into []
            (remove #(aget sieve %))
            (range 2 n))
          (do
            (when-not (aget sieve p)
              (loop [i (* 2 p)]
                (when (< i n)
                  (aset sieve i true)
                  (recur (+ i p)))))
            (recur (inc p))))))))
