(import 'java.lang.ArithmeticException)

(defmacro explain-expr
  ""Produce a string representation of the unevaluated expression x, concatenated to
  an arrow and a string representation of the result of evaluating x, including
  Exceptions should they arise.""
  [x]
  `(str ~(str x) "" ~~> ""
        (try ~x (catch Exception e# (str e#)))))

(println (explain-expr (* 42 42)))
(println (explain-expr (let [x 1] x)))
(println (explain-expr (/ 6 0)))
(println (let [x 1] (explain-expr x)))
(let [y 37] (println (explain-expr (let [x 19] (* x y)))))
(let [y 37] (println (explain-expr (let [y 19] (* y y)))))
