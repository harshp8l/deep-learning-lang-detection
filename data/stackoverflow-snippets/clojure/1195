user=> (deftype Tuple [a b]
         Object
         (equals [this other]
           (and (= (.a this) (.a other))
                (= (.b this) (.b other))))
         (toString [this]
           (str "<" (.a this) "," (.b this) ">"))
         (hashCode [this]
           (hash {:a (.a this) :b (.b this)}))
         Comparable
         (compareTo [this that]
           (compare [(.a this) (.b this)]
                    [(.a that) (.b that)])))
user.Tuple
user=> (= (Tuple. 0 0) (Tuple. 0 0))
true
user=> (into #{} [(Tuple. 0 0) (Tuple. 1 1) (Tuple. 0 0)])
#{#<Tuple <0,0>> #<Tuple <1,1>>}
