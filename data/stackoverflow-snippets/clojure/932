user=> (require '[vinyasa.inject :as inject])
nil
user=> (inject/in clojure.core [vinyasa.reflection .> .? .* .% .%> .& .>ns .>var])
[]
user=> (def locking-transaction (clojure.lang.LockingTransaction.))
#'user/locking-transaction
user=> (def get-read-point (.? clojure.lang.LockingTransaction "getReadPoint"))
#'user/get-read-point
user=> get-read-point
(#[getReadPoint :: (clojure.lang.LockingTransaction) -> void])
user=> ((first get-read-point) locking-transaction)
nil
