user>
(def primes (cons 2 (filter (fn [n]
                              (let [sqn (Math/sqrt n)]
                                (not-any? #(zero? (rem n %))
                                          (take-while #(<= % sqn) primes))))
                            (iterate #(+ 2 %) 3))))
#'user/primes

user> (last (take 10000 primes))
104729

user> (take 20 primes)
(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71)

user> (last (take 10000 primes))
104729

user> (last (take 100000 primes))
1299709
