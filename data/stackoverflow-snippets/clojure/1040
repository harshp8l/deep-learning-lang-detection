user> (require '[clojure.core.async :refer [<! <!! >! chan]])
nil
user> (def chan-collection (atom #{}))
#'user/chan-collection
user> (def my-chan-1 (chan))
#'user/my-chan-1
user> (def my-chan-2 (chan))
#'user/my-chan-2
user> (swap! chan-collection conj my-chan-1 my-chan-2)
 #{#object[clojure.core.async.impl.channels.ManyToManyChannel 0x35b61c71 ""clojure.core.async.impl.channels.ManyToManyChannel@35b61c71""] #object[clojure.core.async.impl.channels.ManyToManyChannel 0x240e86d5 ""clojure.core.async.impl.channels.ManyToManyChannel@240e86d5""]}
