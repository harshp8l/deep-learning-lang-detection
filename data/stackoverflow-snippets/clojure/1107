(defn record-seq [file]
  (let [data      (read-file file)
        nb-fields (Integer/parseInt (first data))
        fields    (map #(keyword (str/replace % #""\s+"" ""-""))
                       (take nb-fields (rest data)))
        values    (filter (complement str/blank?)
                          (drop (inc nb-fields) data))
        rec-ids   (map #(keyword (str ""rec-"" %))
                       (range))]
    (map #(vector %1 (zipmap fields %2))
         rec-ids
         (partition nb-fields values))))

user> (pprint (record-seq ""./ami.log""))
([:rec-0
  {:volume-id ""Vol-23456"",
   :Instance-id ""Ins-12345"",
   :Name ""My own instance 1""}]
 [:rec-1
  {:volume-id ""Vol-2345"",
   :Instance-id ""Ins-123457"",
   :Name ""My own instance 2""}]
 [:rec-2
  {:volume-id ""Vol-9876"",
   :Instance-id ""Ins-123987"",
   :Name ""My own instance 3""}])
