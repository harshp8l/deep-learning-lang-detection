(ns blah.core
  (:require [clojure.data.codec.base64 :as b64])
  (:require [clojure.string :as string])
  (:gen-class))

(defn encode [original]
  (let [bytes_in (.getBytes original ""UTF-16LE"")
        bytes_enc (b64/encode bytes_in)
        bytes_len (alength bytes_enc)
        pad_count (b64/pad-length bytes_enc 0 bytes_len)
        enc_string (String. bytes_enc 0 (- bytes_len pad_count) ""UTF-8"")
        enc_string (string/replace enc_string \+ \-)
        enc_string (string/replace enc_string \/ \_)]
      (str enc_string pad_count)))

(defn -main
  [& args]
  (let [message ""Winter is coming""]
    (println message)
    (println (encode message))))
