(ns tst.demo.core
  (:use tupelo.test)
  (:require
    [tupelo.core :as t] ))

; Note:
; (def data {:foo ""bar"" :biz ""baf"" :content (""Happy Happy Joy Joy"")})
;   => exception

(def data-1       '{:foo ""bar"" :biz ""baf"" :content  (""Happy Happy Joy Joy"")})
(def data-2        {:foo ""bar"" :biz ""baf"" :content '(""Happy Happy Joy Joy"")})
(def data-3 (quote {:foo ""bar"" :biz ""baf"" :content  (""Happy Happy Joy Joy"")}))
(dotest
  (is= data-1 data-2 data-3)
  (is= ""Happy Happy Joy Joy"" (first (:content data-1)))
  (is= ""Happy Happy Joy Joy"" (first (:content data-2)))
  (is= ""Happy Happy Joy Joy"" (first (:content data-3))))
