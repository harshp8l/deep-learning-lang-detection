(def page-css-mapping
  {""index""   [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/filter.css""
              ""/css/wc3xhtml1.css""]
   ""add""     [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/addform.css""]
   ""map""     [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/SpryCollapsiblePanel.css""
              ""/css/SpryAccordion.css""]
   ""chart""   [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/filter.css""
              ""/css/cha.css""]
   ""learn""   [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/filter.css""
              ""/css/wc3xhtml1.css""
              ""/css/doc.css""]
   ""changes"" [""/css/hcspry.css""
              ""/css/menus.css""
              ""/css/filter.css""
              ""/css/wc3xhtml1.css""
              ""/css/clg.css""]
   ""seek""    [""/css/hcspry.css""
              ""/css/menus.css""]})

(defn cssfiles
  ""load sets of CSS files depending on which page is being served""
  [pageName]
  (if-let [css-files (get page-css-mapping pageName)]
    (apply hic/include-css css-files)
    (println (str ""PRGMR. MSG: net.clm.history.pages.snippets.clj::(defn cssfiles ["" pageName ""]): unknown parameter or parameter not processed properly.""))))
