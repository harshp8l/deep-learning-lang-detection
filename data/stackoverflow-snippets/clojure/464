public final class user$sqrt extends AFunction {
    public static final Object const__0 = Double.valueOf(1.0D);

    public static Object invokeStatic(Object x) {
        user$sqrt$s__44945 s = null;
        user$sqrt$good_enough_QMARK___44947 good_enough_QMARK_ = null;
        user$sqrt$improve__44949 improve = null;
        s = new user$sqrt$s__44945(good_enough_QMARK_, improve);
        good_enough_QMARK_ = new user$sqrt$good_enough_QMARK___44947(x);
        Object var10002 = x;
        x = null;
        improve = new user$sqrt$improve__44949(var10002);
        user$sqrt$s__44945 var10000 = (user$sqrt$s__44945)s;
        ((user$sqrt$s__44945)s).good_enough_QMARK_ = good_enough_QMARK_;
        var10000.improve = improve;
        user$sqrt$good_enough_QMARK___44947 var4 = (user$sqrt$good_enough_QMARK___44947)good_enough_QMARK_;
        user$sqrt$improve__44949 var5 = (user$sqrt$improve__44949)improve;
        return ((IFn)s).invoke(const__0);
    }

}

public final class user$sqrt$good_enough_QMARK___44947 extends AFunction {
    Object x;
    public static final Var const__1 = (Var)RT.var("user", "abs");
    public static final Var const__3 = (Var)RT.var("user", "square");

    public user$sqrt$good_enough_QMARK___44947(Object var1) {
        this.x = var1;
    }

    public Object invoke(Object guess) {
        DO var10000 = (DO)const__1.getRawRoot();
        DO var10001 = (DO)const__3.getRawRoot();
        Object var10002 = guess;
        guess = null;
        return Numbers.lt(var10000.invokePrim(RT.doubleCast((Number)Numbers.minus(var10001.invokePrim(RT.doubleCast((Number)var10002)), this.x))), 1.0E-4D)?Boolean.TRUE:Boolean.FALSE;
    }
}

public final class user$sqrt$improve__44949 extends AFunction {
    Object x;
    public static final Var const__0 = (Var)RT.var("user", "avg");

    public user$sqrt$improve__44949(Object var1) {
        this.x = var1;
    }

    public Object invoke(Object guess) {
        DDO var10000 = (DDO)const__0.getRawRoot();
        double var10001 = RT.doubleCast((Number)Numbers.divide(this.x, guess));
        Object var10002 = guess;
        guess = null;
        return var10000.invokePrim(var10001, RT.doubleCast((Number)var10002));
    }
}
