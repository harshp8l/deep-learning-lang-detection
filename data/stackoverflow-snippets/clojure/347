(def timer (Timer.))
(def state (atom [] ))
(def timer-delay 5000) ; millis

(def timertask
  (proxy [TimerTask] []
    (run []
      (println ""timer done"")
      (println ""state = "" @state)
      )))

(defn start-timer []
  (println ""starting timer"")
  (.schedule timer timertask timer-delay))

(defn add-to-state [item]
  (Thread/sleep 500)
  (println ""  adding:"" item)
  (swap! state conj item))

(start-timer)
(Thread/sleep 2000)
(add-to-state :first)
(add-to-state :second)
(add-to-state :third)
