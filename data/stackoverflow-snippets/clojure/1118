(defn build-path
  ([sep kys] (build-path nil sep kys))
  ([root sep kys]
   (->> kys (map name) (interpose sep) 
        (concat (when root (list root sep))) (apply str))))

(defn path
  ""build a path from a collection""
  [t]
  (build-path ""."" \/ t))

user> (path [:performers :performer :id])
""./performers/performer/id""

(defn path-key
  ""Transform [:a :b :c] into :a-b-c""
  [t]
  (->> t (build-path \-) keyword))

user> (path-key [:performers :performer :id])
:performers-performer-id
