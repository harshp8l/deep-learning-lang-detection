(def a #{{:id 1,:obs/A ""11"", :obs/value 2.0, :obs/color ""yellow""}
        {:id 2,:obs/A ""12"", :obs/value 4.0, :obs/color ""blue""}
        {:id 3,:obs/A ""13"", :obs/value 3.0, :obs/color ""green""}
        {:id 3,:obs/A ""15"", :obs/value 7.0, :obs/color ""red""}})

(def b #{{:id 2,:obs/A ""11"", :obs/value 7.0, :obs/shape ""square""}
        {:id 2,:obs/A ""13"", :obs/value 4.0, :obs/shape ""circle""}
        {:id 6,:obs/A ""15"", :obs/value 3.0, :obs/shape ""triangle""}})

(use 'clojure.set)

(->> [a b]
    (map #(index % [:obs/A]))
    (apply merge-with union)
    vals
    (map (partial map :obs/value)))
