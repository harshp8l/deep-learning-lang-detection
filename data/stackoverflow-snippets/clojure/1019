(require '[clojure.test :refer [deftest testing is]])

; dummy implementations, here will be your real bad-request & error
(defn bad-request [& more] more)
(def error {:status :error})

(defmacro deftest-request [name code message MESSAGE DATA & body]
  `(deftest ~name
     (testing ""with data""
       (is (= (merge error ~code ~message ~DATA) (bad-request ~MESSAGE ~DATA))))

     (testing ""with data""
       (is (= (merge error ~code ~message ~DATA) (bad-request ~MESSAGE ~DATA))))

     ~@body))

; Some messages will only be tested about bad requests
(deftest-request some-request-test
  {:code 401} {:message ""hello""} ""HELO"" {:data ""WORLD""})

; Other messages can have more tests at the end of a deftest-request
(deftest-request some-complex-request-test
  {:code 829} {:message ""a-complex-message""} ""IM COMPLEX"" {:data ""VERY COMPLEX""}

  (testing ""request returns something interesting""
    (is (= ""I'm cool"" (run-request {:message ""a-complex-message""})))))
