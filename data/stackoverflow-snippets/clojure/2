(defn strs->array [strs] (mapv vec strs))

(def data [""+-----+""
           ""|XPX X|""
           ""|X   X|""
           ""|X  XX|""
           ""|X P X|""
           ""|XX DX|""
           ""+-----+""])
(def data-array (strs->array data))

(defn find-chars-2 [ch-array tgt-char]
  (let [num-rows (count ch-array)
        num-cols (count (first ch-array))]
    (for [ii (range num-rows)
          jj (range num-cols)
          :let [curr-char (get-in ch-array [ii jj])]
          :when (= tgt-char curr-char)]
      [ii jj])))
