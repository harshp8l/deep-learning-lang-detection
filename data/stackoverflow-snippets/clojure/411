    Schema schema = new Schema.Parser().parse("{\n  \"type\": \"record\",\n  \"name\": \"User\",\n  \"namespace\": \"com.streambright\",\n  \"fields\": [{\n    \"name\": \"user_name\",\n    \"type\": \"string\",\n    \"doc\": \"User name of the user\"\n  }, {\n    \"name\": \"age\",\n    \"type\": \"int\",\n    \"doc\": \"Age of the user\"\n  }, {\n    \"name\": \"weight\",\n    \"type\": \"float\",\n    \"doc\": \"Weight of the user\"\n  }, {\n    \"name\": \"address\",\n    \"type\": {\n      \"type\": \"record\",\n      \"name\": \"Address\",\n      \"fields\": [{\n        \"name\": \"street_address\",\n        \"type\": \"string\"\n      }, {\n        \"name\": \"city\",\n        \"type\": \"string\"\n      }]\n    }\n  }],\n  \"doc:\": \"Nothing to see here...\"\n}");
    User user = new User();
    user.setUserName("Tibi Kovacs");
    user.setAge(25);
    user.setWeight(((float) 32.12));
    user.setAddress(new Address("FoxiMaxi St","Budapest"));
    SpecificDatumWriter<User> avroEventWriter = new SpecificDatumWriter<User>(schema);
    EncoderFactory avroEncoderFactory = EncoderFactory.get();
    ByteArrayOutputStream stream = new ByteArrayOutputStream();
    BinaryEncoder binaryEncoder = avroEncoderFactory.binaryEncoder(stream, null);
    avroEventWriter.write(user, binaryEncoder);
    binaryEncoder.flush();
    IOUtils.closeQuietly(stream);
    byte[] m = stream.toByteArray();

    FileOutputStream fos = new FileOutputStream("/full/path/data/test3.java.avro");
    fos.write(m);
    fos.close();
