(defn make-row
  [cola colb r]
  (let [pad """"]
    (cond
      (and (not (empty? cola))
           (not (empty? colb))) (recur (rest cola)
                                       (rest colb)
                                       (conj r [(first cola) (first colb)]))
      (and (not (empty? cola))
           (empty? colb)) (recur (rest cola)
                                 (rest colb)
                                 (conj r [(first cola) pad]))
      (and (empty? cola)
           (not (empty? colb))) (recur (rest cola)
                                       (rest colb)
                                       (conj r [pad (first colb)]))
      :else r)))
