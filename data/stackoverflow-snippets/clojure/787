(clojure.walk/macroexpand-all '(defn normalize-vals
                                 [mmap & [{:keys [foo bar] :as ops}]]
                                 (println ""normalize-vals "" ops "" and foo "" foo "" bar"" bar)))

=> (def normalize-vals (fn* ([mmap & p__26720] (let* [vec__26721 p__26720 map__26722 (clojure.core/nth vec__26721 0 nil) map__26722 (if (clojure.core/seq? map__26722) (. clojure.lang.PersistentHashMap create (clojure.core/seq map__26722)) map__26722) ops map__26722 foo (clojure.core/get map__26722 :foo) bar (clojure.core/get map__26722 :bar)] (println ""normalize-vals "" ops "" and foo "" foo "" bar"" bar)))))
