(defn waiter
  [f g & args]
  (let [f-result (f args) 
        g-result (g args) ]
    (println (format "waiter: f-result=%d g-result=%d" f-result g-result))))

(defn my-f 
  [args]
  (let [result (apply + args)]
    (println "my-f running:" result)
    result))

; change your orig prob a bit, and define/use my-f-memo instead of the original my-f
(def my-f-memo (memoize my-f))

(defn my-g
  [args]
  (let [result (apply * args)]
    (println "my-g running:" result)
    result))

(waiter my-f-memo my-g 2 3 4)
(waiter my-f-memo my-g 2 3 4)

> lein run
my-f running: 9
my-g running: 24
waiter: f-result=9 g-result=24
my-g running: 24
waiter: f-result=9 g-result=24
main - enter
