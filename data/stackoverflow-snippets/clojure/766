(def data [{""a"" ""X"", ""b"" ""M"", ""c"" 188}
           {""a"" ""Y"", ""b"" ""M"", ""c"" 165}
           {""a"" ""Y"", ""b"" ""M"", ""c"" 313}
           {""a"" ""Y"", ""b"" ""P"", ""c"" 188}])

(def processed (reduce #(update % (%2 ""a"") (fnil conj #{}) (%2 ""b"")) 
                       {} data))

;; {""X"" #{""M""}, ""Y"" #{""M"" ""P""}}
;; you create a map of ""a"" values to a sets of ""b"" values in one pass
;; and then you just create a new map with counts

(reduce-kv #(assoc %1 %2 (count %3)) {} processed)

;; {""X"" 1, ""Y"" 2}
