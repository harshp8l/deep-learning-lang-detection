(require '[clojure.data.csv :as csv]
         '[clojure.java.io :as io]
         '[semantic-csv.core :as sc])

(defn write-csv 
  ""Takes a file (path, name and extension) and 
   csv-data (vector of vectors with all values) and
   writes csv file.""
  [file csv-data] 
  (with-open [writer (io/writer file)]
    (csv/write-csv writer csv-data)))

(defn write-csv-from-maps 
  ""Takes a file (path, name and extension) and a collection of maps
   transforms data (vector of vectors with all values) 
   writes csv file.""
  [file maps]
  (->> maps sc/vectorize (write-csv file)))
