user> (import '[java.lang.Math])
nil
user> (def pow2 #(Math/pow % 2))
      (defn distance [p1 p2]
       (Math/sqrt (+ (pow2 (Math/abs (- (p1 0) (p2 0))))
                  (pow2 (Math/abs (- (p1 1) (p2 1)))))))
#'user/pow2
#'user/distance
user> (defn closer-point
        ([] [Long/MAX_VALUE [Long/MAX_VALUE Long/MAX_VALUE]])
        ([p1] p1)
        ([[distance1 point1 :as p1]
          [distance2 point2 :as p2]]
         (if (< distance1 distance2)
           p1
           p2)))
#'user/closer-point
user> (transduce (map #(vector (distance p %) %))
                 closer-point
                 pts)
[2.8284271247461903 [9 4]]
