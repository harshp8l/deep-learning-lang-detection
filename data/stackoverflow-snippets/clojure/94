> cat project.clj

(defproject demo ""0.1.0-SNAPSHOT""
  :description ""FIXME: write description""
  :url ""http://example.com/FIXME""
  :license {:name ""Eclipse Public License""
            :url ""http://www.eclipse.org/legal/epl-v10.html""}
  :dependencies [[org.clojure/clojure ""1.9.0""]
                 [org.clojure/tools.reader ""1.1.3.1""] ]
  :main ^:skip-aot demo.core
  :target-path ""target/%s""
  :profiles {:uberjar {:aot :all}})

> cat src/demo/core.clj 

(ns demo.core
  (:require
    [clojure.tools.reader.edn :as edn]
    [clojure.string :as str]  ))

(defn -main []
  (println ""enter numbers"")
  (let [input-line (read-line)
        num-strs   (str/split input-line #""\s+"")
        nums       (mapv edn/read-string num-strs)
        result     (apply + nums) ]
    (println ""result="" result)))
