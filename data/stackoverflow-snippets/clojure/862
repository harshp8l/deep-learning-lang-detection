(def months ["JAN" "FEB" "MAR" "APR" 
             "MAY" "JUN" "JUL" "AUG" 
             "SEP" "OCT" "NOV" "DEC"])

(defn normalize-underscored [value]
  (let [[_ text val month year]
        (re-matches #"(.+?)_([\d.]+)_(\d+)/\d+/(\d{4})" value)]
    [text
     (Float/parseFloat val)
     (months (dec (Long/parseLong month)))
     year]))

(defn normalize-spaced [value]
  (let [[_ text val month year]
        (re-matches #"(.+?)\s([\d.]+)\s(\w{3})(\d{2,4})" value)]
    [text (Float/parseFloat val) month
     (if (== 2 (count year)) (str "20" year) year)]))
