20:57:56.305 [operate-57] DEBUG pallet.ssh.execute - authentication {:sudo-user nil, :state-group nil, :private-key nil, :public-key nil, :sudo-password ""*******"", :private-key-path nil, :no-sudo false, :public-key-path nil, :passphrase nil, :username ""initial"", :state-root nil, :password ""*******""}
20:57:56.305 [operate-57] DEBUG pallet.ssh.transport - SSH user initial :private-key-path null :private-key null :password *******
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==>  -----------------------------------------
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> #!/usr/bin/env bash
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> set -h
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> echo {
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> echo   :os '""'$(uname -s)'""'
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> echo   :rev '""'$(uname -r)'""'
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> echo   :mach '""'$(uname -m)'""'
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> echo }
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> 
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> exit $?
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15 ==> ------------------------------------------
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15:22 send script via /tmp/palletxhoLT as root
20:57:56.407 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15   <== ----------------------------------------
20:57:56.409 [operate-57] DEBUG pallet.ssh.transport - send-text set mode /tmp/palletxhoLT 384
20:57:56.411 [operate-57] DEBUG pallet.script-builder - {}
20:57:56.411 [operate-57] DEBUG pallet.script-builder - prefix kw :sudo
20:57:56.412 [operate-57] DEBUG pallet.script-builder - prefix sudo {:sudo-user nil, :node-value-path nv20675, :state-group nil, :context (""os"" ""infer-os""), :private-key nil, :public-key nil, :sudo-password ""test123"", :private-key-path nil, :args (""echo {\necho   :os '\""'$(uname -s)'\""'\necho   :rev '\""'$(uname -r)'\""'\necho   :mach '\""'$(uname -m)'\""'\necho }\n""), :no-sudo false, :action {:action-symbol pallet.actions/exec-script*, :impls #<Atom@679f2b31: {:direct {:f #<exec_script$eval11637$exec_script_STAR__direct__11638 pallet.actions.direct.exec_script$eval11637$exec_script_STAR__direct__11638@705e0e14>, :metadata {:location :target, :action-type :script}}}>, :execution :in-sequence, :precedence {}}, :public-key-path nil, :passphrase nil, :username ""initial"", :state-root nil, :password ""test123""}
20:57:56.412 [operate-57] DEBUG pallet.script-builder - sudo-cmd-for {:username ""initial"", :sudo-password ""test123"", :sudo-user nil, :password ""test123"", :no-sudo false}
20:57:56.412 [operate-57] DEBUG pallet.script-builder - prefix echo 'test123' | /usr/bin/sudo -S
20:57:56.412 [operate-57] DEBUG pallet.ssh.execute - ssh-script-on-target command {:env-cmd ""/usr/bin/env"", :env nil, :env-fwd [:SSH_AUTH_SOCK], :prefix [""echo"" ""'test123'"" ""|"" ""/usr/bin/sudo"" ""-S""], :execv (""/bin/bash"" ""/tmp/palletxhoLT"")}
20:57:56.514 [operate-57] DEBUG pallet.execute - 192.168.35.15   <== [sudo] password for initial: {
20:57:56.514 [operate-57] DEBUG pallet.execute - 192.168.35.15   <== :os ""Linux""
20:57:56.514 [operate-57] DEBUG pallet.execute - 192.168.35.15   <== :rev ""3.5.0-23-generic""
20:57:56.514 [operate-57] DEBUG pallet.execute - 192.168.35.15   <== :mach ""x86_64""
20:57:56.514 [operate-57] DEBUG pallet.execute - 192.168.35.15   <== }
20:57:56.616 [operate-57] DEBUG pallet.ssh.execute - 192.168.35.15   <== ----------------------------------------
20:57:56.616 [operate-57] DEBUG pallet.executors - default-executor
