user> (defn parse
        {:arglists '([data header? path & {:keys [sep dec newline]
                                           :or {sep :aaa
                                                dec :bbb
                                                newline :ccc}}])}
        [data header-or-path & args]
        (let [[header path {:keys [sep dec newline]
                            :or {sep :aaa dec :bbb newline :ccc}}]
              (if (even? (count args))
                [nil header-or-path args]
                [header-or-path (first args) (rest args)])]
          (println data header path sep dec newline)))
#'user/parse

user> (parse 1 2)
1 nil 2 :aaa :bbb :ccc
nil

user> (parse 1 2 3)
1 2 3 :aaa :bbb :ccc
nil

user> (parse 1 2 :sep :a :dec :b)
1 nil 2 :a :b :ccc
nil

user> (parse 1 2 3 :sep :a :dec :b)
1 2 3 :a :b :ccc
nil
