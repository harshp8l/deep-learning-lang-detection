(require '[clj-time.core :as t])
(require '[clj-time.format :as f])

(def data {:wrapper {:firstName ""foo"" 
                     :lastName ""bar""
                     :addressLine1 ""line1""
                     :addressLine2 ""line2""
                     :birthDate {:iso ""1930-03-12""}}})

(def transformed
  {:name (str (get-in data [:wrapper :firstName])
              "" ""
              (get-in data [:wrapper :lastName]))
   :address (str (get-in data [:wrapper :addressLine1])
                 ""\n""
                 (get-in data [:wrapper :addressLine2]))
   :age (t/in-years (t/interval (f/parse
                                 (get-in data [:wrapper :birthDate :iso] data))
                                (t/now)))})
