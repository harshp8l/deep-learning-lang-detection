(ns clj.core
  (:gen-class))

(defn say-howdy [args]
  (println (format ""Howdy, %s!"" (first args))))

(defn give-reply [args]
  (println (format ""Back at ya, %s!"" (first args))))

(defn -main [& args]
  (let [method-name  (first  args)
        message      (second args) ]
    (cond 
      (= method-name ""say-howdy"" ) (say-howdy  (rest args))
      (= method-name ""give-reply"") (give-reply (rest args))
      :else (throw (NoSuchMethodException. (str ""clj.core: invalid method='"" method-name \')))))
)
