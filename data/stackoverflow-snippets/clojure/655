(defn make-result-node [path name child-name]
  {:out-path path
   :out-name name
   :in-path (str path ""-"" child-name)
   :in-name child-name})

(defn map->mermaid
  ([items-map] (map->mermaid """" items-map))
  ([path items-map]
   (if (seq items-map)
     (mapcat (fn [[k v]]
               (let [new-path (if (seq path) (str path ""-"" k) k)]
                 (concat (map (partial make-result-node new-path k)
                              (keys v))
                         (map->mermaid new-path v))))
             items-map))))
