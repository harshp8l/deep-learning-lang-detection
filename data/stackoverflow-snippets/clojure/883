(defn ind [item item-list] ;;Only take the needed arguments
   ;;Declare the mutable variables here, so they don't escape into the signature
   (loop [items item-list  ;;remaining items
          index 0          ;;current index
          result '()]      ;;current result
      (if (empty? items) result ;;If nothing left, return our result
          (if (= item (first items))
              (recur (rest items) ;;If it matches, add to the result list and repeat
                     (inc index)
                     (cons index result))
              (recur (rest items) ;;If it doesn't match, just repeat
                     (inc index)
                     result)))))
