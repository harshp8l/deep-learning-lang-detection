@Mock
Repository ARepositoryMock;

@Mock
Repository BRepositoryMock;

@Test
public void addToA() throws Exception {

    BInput input = new BInput();

    // record mock behaviors
    A aMockByRepository = Mockito.mock(A.class);
    List<B> listBMockByRepository = new arrayList<>();
    Mockito.when(ARepositoryMock.findOne(input.getA())).thenReturn(aMockByRepository);
    Mockito.when(BRepositoryMock.saveBs(input.getB(), aMockByRepository)).thenReturn(listBMockByRepository);

    // action
    CompletableFuture<MyResultEntity> future = myObjectUnderTest.addToA(input);
    //assertion
    MyResultEntity actualResultEntity = future.get();
    Assert.assertEquals(aMockByRepository, actualResultEntity.getA());
    Assert.assertEquals(listBMockByRepository, actualResultEntity.getListOfB());
}
