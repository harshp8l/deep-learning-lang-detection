    Method[] m = someObjectHavingMethods.getClass().getDeclaredMethods();

    // Loop over number of methods
    for (int i=0;i<m.length;i++) {

        // If methods contain "get" (case non-sensitive)
        if (Pattern.compile(Pattern.quote("get"), Pattern.CASE_INSENSITIVE).matcher(m[i].toString()).find()) {

            // If methods contain "someExpectedPattern" (case non-sensitive)
            if (Pattern.compile(Pattern.quote("someExpectedPattern"), Pattern.CASE_INSENSITIVE).matcher(m[i].toString()).find()) {
                try {
                    System.out.println(m[i].invoke(someObjectHavingMethods));
                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
        }
    }
