public String solution(int A, int B, int C, int D, int E, int F) {
    List<Integer> list = new ArrayList<>();
    list.add(A);
    list.add(B);
    list.add(C);
    list.add(D);
    list.add(E);
    list.add(F);
    Collections.sort(list);
    // second largest element is less than 6, just add up!
    if (list.get(4) < 6) { 
        if (list.get(0) * 10 + list.get(1) < 24) {
            return getTime(list);
        } else {
            return "NOT POSSIBLE";
        }
    // third largest element is less than 6, swap 3rd and 4th element, add up!
    } else if (list.get(3) < 6) { 
        if (list.get(0) * 10 + list.get(1) < 24) {
            Collections.swap(list, 3, 4);
            return getTime(list);
        } else {
            return "NOT POSSIBLE";
        }
    // fourth largest element is less than 6, swap 1st and 3rd elements, swap 3rd and 4th elements, add up!
    } else if (list.get(2) < 6) { 
        if (list.get(0) * 10 + list.get(3) < 24) {
            Collections.swap(list, 1, 3);
            Collections.swap(list, 3, 4);
            return getTime(list);
        } else {
            return "NOT POSSIBLE";
        }
    }

    return "NOT POSSIBLE";
}

private String getTime(List<Integer> list) {
    return String.valueOf(list.get(0)) + String.valueOf(list.get(1)) + ":" + String.valueOf(list.get(2))
            + String.valueOf(list.get(3)) + ":" + String.valueOf(list.get(4)) + String.valueOf(list.get(5));
}
