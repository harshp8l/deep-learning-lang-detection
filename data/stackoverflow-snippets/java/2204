ZonedDateTime.now(                          // Capture the current moment as seen by the wall-clock time used by the people of a certain region (a time zone).
    ZoneId.of( ""Europe/Paris"" )             // Specify time zone by official IANA time zone name.  https://en.wikipedia.org/wiki/Tz_database
)                                           // Returns a `ZonedDateTime` object.
.withZoneSameInstant(                       // Adjust from Paris time to Auckland time, just to show that we can. Same moment, different wall-clock time.
    ZoneId.of( ""Pacific/Auckland"" )
)                                           // Returns a new, second `ZonedDateTime` object without changing (“mutating”) the first. Per immutable objects pattern.
.format(                                    // Generate a String representing the value of our `ZonedDateTime`.
    DateTimeFormatter.ofLocalizedDateTime(  // Let java.time automatically localize.
        FormatStyle.FULL                    // Specify the length/abbreviation of new String.
    )                                       // Returns a `DateTimeFormatter` using the JVM’s current default `Locale`. Override this default in next line.
    .withLocale( Locale.ITALIAN )           // Locale is unrelated to time zone. Wall-clock time of Auckland, presented in Italian – perfectly reasonable depending on the needs of your user.
)                                           // Returns a String object holding text that represents the value of our `ZonedDateTime` object.
