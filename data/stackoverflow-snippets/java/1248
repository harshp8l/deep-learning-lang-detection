public class SO49827073DBHelper extends SQLiteOpenHelper {

    public static final String DBNAME ="walk.db";
    public static final int DBVERSION = 1;
    public static final String TB_WALK = "walk";
    public static final String COL_WALK_ID = BaseColumns._ID; // equates to _id
    public static final String COL_WALK_PHOTDESCRIPTION = "photo_dsecription";
    public static final String COL_WALK_PATH = "storeage_path";

    SQLiteDatabase mDB;

    public SO49827073DBHelper(Context context) {
        super(context, DBNAME, null, DBVERSION);
        mDB = this.getWritableDatabase(); //<<< Force creation when first instantiated
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        //!!NOTE!! onCREATE ONLY RUNS ONCE WHEN DB IS CREATED
        String crtsql = "CREATE TABLE IF NOT EXISTS " + TB_WALK + "(" +
                COL_WALK_ID + " INTEGER PRIMARY KEY, " +
                COL_WALK_PHOTDESCRIPTION + " TEXT," +
                COL_WALK_PATH + " TEXT" +
                ")";
        db.execSQL(crtsql);
        //!!NOTE!! to recreate tables delete the App's data or uninstall
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }

    public long addWalk(String description, String photo_path) {
        ContentValues cv = new ContentValues();
        cv.put(COL_WALK_PHOTDESCRIPTION,description);
        cv.put(COL_WALK_PATH,photo_path);
        return this.getWritableDatabase().insert(TB_WALK,null,cv);
        //!!Note!! will return 1 or greater (the id) if insert was ok
    }

    public Cursor getAll() {
        return this.getWritableDatabase().query(
                TB_WALK,
                null,
                null,
                null,
                null,
                null,
                null
        );
    }
}
