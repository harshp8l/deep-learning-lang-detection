import java.util.ArrayList;
import java.util.List;

class FirstNonConsecutive {

    static Integer find(final int[] array) {
        List<Integer> list = new ArrayList<Integer>();
        Integer[] arrtwovalues = new Integer[array.length];
        Integer solve = null;
        int[] newtemp = new int[array.length];


        for (int i = 0; i < array.length - 1; i++) {
            newtemp[i] = array[i + 1];
        }

        for (int i = 0; i < array.length; i++) {
            if (newtemp[i] - array[i] == 2) {
                arrtwovalues[i] = newtemp[i];
            }
        }

        for (int i = 0; i < arrtwovalues.length; i++) {
            if (arrtwovalues[i] != null) {
                list.add(arrtwovalues[i]);
            }
        }

        for (int i = 0; i < list.size(); i++) {
            if (list.size() > 0) {
                solve = list.get(0);
            }else solve = null;
        }

        return solve;
    }

    public static void main(String[] args) {
        int[] arr = new int[]{4, 6, 7, 8, 9, 11};
        System.out.println(find(arr));

    }
}
