interface FileSearch
{
    List<File> search();
}

class AllFiles implements FileSearch
{
    private final Path searchDirectory;

    public AllFiles(Path searchDirectory)
    {
        this.searchDirectory = searchDirectory;
    }

    public List<File> search()
    {
        // return all files in directory
    }
}

class LargerThan implements FileSearch
{
    private final FileSearch delegate;
    private final long size;

    public LargerThan(FileSearch delegate, long size)
    {
        this.delegate = delegate;
        this.size = size;
    }

    public List<File> search()
    {
        return delegate.search().stream()
            .filter(file -> file.length() > size)
            .collect(Collectors.toList());
    }
}

class SmallerThan implements FileSearch
{
    //Similar to above, but with 'less than' instead of 'greater than'
}
