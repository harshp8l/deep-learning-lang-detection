public class PropertyPaternValidator implements ConstraintValidator<PropertyPatern, CharSequence> {

    private Map<String, Pattern> patterns = new HashMap<>();
    private Pattern pattern;

    @Override
    public void initialize(PropertyPatern propPattern) {
        String property = propPattern.property();

        pattern = patterns.computeIfAbsent(property, prop -> {
            Properties applicationProps = (Properties) ApplicationContextProvider.getApplicationContext()
                .getBean(""applicationProps"");
            String p = applicationProps.getProperty(prop);
            return Pattern.compile(p);
        });
    }    
    @Override
    public boolean isValid(CharSequence inputToValidate, ConstraintValidatorContext ctx) {
        CharSequence input = inputToValidate != null ? inputToValidate : """";
        Matcher m = pattern.matcher(input);
        return m.matches();
    }
}
