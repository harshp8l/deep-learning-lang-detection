public static int binarySearch(int[] numbers, int target) {
int min = 0; //sets the starting search point for the binary search because array slots
//start at 0.

int max = numbers.length – 1; //sets the maximum length for the binary search.

while (min <= max) { //ensures that the binary search completes itself.
    int mid = (max + min) / 2; //every loop, binarySearch finds the exact middle
    if (numbers[mid] == target) { //if the middle number of the array is the target number....
        return mid; // found it! //returns the slot value where mid target was found
   else if (numbers[mid] < target) { //if the middle number is less than 
      //the target number
        min = mid + 1; // too small //value of the minimum is equal to the middle value
      //plus one. This will essentially cut the array "in half," making the sorting process
      //much quicker.
    } else {
        // numbers[mid] > target max = mid – 1; // too large //does the opposite of what 
    }
}

// not found
return –1; //no slot value found for the target number.
}
