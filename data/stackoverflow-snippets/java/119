import java.util.List;
import static java.util.Arrays.asList;

public class ByNameExecutor {
  enum Rule {
    Rule1 { @Override void rule() { System.out.println(""Executed rule 1""); } },
    Rule2 { @Override void rule() { System.out.println(""Executed rule 2""); } },
    Rule3 { @Override void rule() { System.out.println(""Executed rule 3""); } },
    Rule4 { @Override void rule() { System.out.println(""Executed rule 4""); } },
    ;
    abstract void rule();
  }

  public void execute(String ruleName) {
    Rule.valueOf(ruleName).rule();
  }

  public void execute(List<String> ruleNames) {
    ruleNames.stream().forEach(this::execute);
  }

  public static void main(String [] args) {
    String [] methodList = { ""Rule1"", ""Rule2"", ""Rule4"" };
    new ByNameExecutor().execute(asList(methodList));
  }
}
