class DuplicateNameException extends Exception {

    private String message;

    public DuplicateNameException(String message){
        this.message = message;
    }

    public String getMessage(){
        return this.message;
    }

}

class Animal {
    private String name;

    public Animal(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}


class Cage {
    private int placeNr;

    private ArrayList<Animal> animals = new ArrayList<Animal>();

    public Cage(int place) {
        this.placeNr = place;
    }

    public int getCageNr() {
        return this.placeNr;
    }


    public void putAnimal(Animal animal) throws DuplicateNameException {
        if(!duplicatedAnimal(animal.getName())) {
            animals.add(animal);
        } else {
            throw new DuplicateNameException(animal.getName());
        }
    }

    private boolean duplicatedAnimal(String name) {
        for (Animal animal : animals)
            if (animal.getName().equals(name))
                return true;

        return false;
    }

    public static void main(String[] args) {
        Animal newAnimal;
        Cage cage;
        try {
            cage = new Cage(1);
            newAnimal = new Animal("Dog");
            cage.putAnimal(newAnimal);
            cage.putAnimal(new Animal("not dog"));
            cage.putAnimal(new Animal("Dog"));
        } catch (DuplicateNameException dne) {
            System.out.println(dne.getMessage());
        }
    }
} 
