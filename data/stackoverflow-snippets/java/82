private Object createMetricProxy(Class<?> theOriginalBeanClass) {
      Enhancer enhancer = new Enhancer();
      enhancer.setSuperclass(theOriginalBeanClass);
      enhancer.setCallback((MethodInterceptor) (obj, method, args, proxy) -> {
         if (method.isAnnotationPresent(Metric.class)) {
            StopWatch timer = new StopWatch();
            timer.start();
            try {
               return proxy.invokeSuper(obj, args);
            } finally {
               timer.stop();
               myMetricService.addMethodExecution(prettyMethodName(method) ,timer.getTotalTimeMillis());
               System.out.println("method = " + prettyMethodName(method) + " , time = " +  timer.getTotalTimeMillis());
            }
         } else {
            return proxy.invokeSuper(obj, args);
         }

      });

      return enhancer.create();
   }
