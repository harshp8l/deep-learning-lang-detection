public class TimeToSeconds {
    // given: mm:ss or hh:mm:ss or hhh:mm:ss, return number of seconds.
    // bad input throws NumberFormatException.
    // bad includes:  """", null, :50, 5:-4
    public static long parseTime(String str) throws NumberFormatException {
        if (str == null)
            throw new NumberFormatException(""parseTimeString null str"");
        if (str.isEmpty())
            throw new NumberFormatException(""parseTimeString empty str"");

        int h = 0;
        int m, s;
        String units[] = str.split("":"");
        assert (units.length == 2 || units.length == 3);
        switch (units.length) {
            case 2:
                // mm:ss
                m = Integer.parseInt(units[0]);
                s = Integer.parseInt(units[1]);
                break;

            case 3:
                // hh:mm:ss
                h = Integer.parseInt(units[0]);
                m = Integer.parseInt(units[1]);
                s = Integer.parseInt(units[2]);
                break;

            default:
                throw new NumberFormatException(""parseTimeString failed:"" + str);
        }
        if (m<0 || m>60 || s<0 || s>60 || h<0)
            throw new NumberFormatException(""parseTimeString range error:"" + str);
        return h * 3600 + m * 60 + s;
    }

    // given time string (hours:minutes:seconds, or mm:ss, return number of seconds.
    public static long parseTimeStringToSeconds(String str) {
        try {
            return parseTime(str);
        } catch (NumberFormatException nfe) {
            return 0;
        }
    }

}


import org.junit.Test;

import static org.junit.Assert.*;

public class TimeToSecondsTest {

    @Test
    public void parseTimeStringToSeconds() {

        assertEquals(TimeToSeconds.parseTimeStringToSeconds(""1:00""), 60);
        assertEquals(TimeToSeconds.parseTimeStringToSeconds(""00:55""), 55);
        assertEquals(TimeToSeconds.parseTimeStringToSeconds(""5:55""), 5 * 60 + 55);
        assertEquals(TimeToSeconds.parseTimeStringToSeconds(""""), 0);
        assertEquals(TimeToSeconds.parseTimeStringToSeconds(""6:01:05""), 6 * 3600 + 1*60 + 5);
    }

    @Test
    public void parseTime() {
        // make sure all these tests fail.
        String fails[] = {null, """", ""abc"", "":::"", ""A:B:C"", ""1:2:3:4"", ""1:99"", ""1:99:05"", "":50"", ""-4:32"", ""-99:-2:4"", ""2.2:30""};
        for (String t: fails)
        {
            try {
                long seconds = TimeToSeconds.parseTime(t);
                assertFalse(""FAIL: Expected failure:""+t+"" got ""+seconds, true);
            } catch (NumberFormatException nfe)
            {
                assertNotNull(nfe);
                assertTrue(nfe instanceof NumberFormatException);
                // expected this nfe.
            }
        }
    }


}
