enum Mathfield { R, Q };

abstract class Calculator {
    static Calculator create(Mathfield type) {
        switch (type) {
            case R:
                return new RCalculator();
            case Q:
                return new QCalculator();
            default:
                throw new IllegalArgumentException(""Type "" + type + "" not supported."");
        }
    }

    abstract String display(double number);
    // some more methods here... some abstract, some with a definition common to all types
    // of calculator.
}

class RCalculator extends Calculator {
    String display(double number) {
        // display it normally
    }
}

class QCalculator extends Calculator {
    String display(double number) {
        // display it in hex. Or backwards. Or whatever strange behaviour QCalculator has
    }
}

class Main {
    public static void main(String[] args) {
        Calculator calc = Calculator.create(Mathfield.R);
        ....
    }
}
