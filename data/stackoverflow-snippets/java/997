 <Switch
    android:id=""@+id/switch1""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_marginEnd=""8dp""
    android:layout_marginStart=""8dp""
    android:layout_marginTop=""152dp""
    android:text=""Switch1""
    app:layout_constraintEnd_toEndOf=""parent""
    app:layout_constraintStart_toStartOf=""parent""
    app:layout_constraintTop_toTopOf=""parent"" />

<Switch
    android:id=""@+id/switch2""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_marginEnd=""8dp""
    android:layout_marginStart=""8dp""
    android:layout_marginTop=""8dp""
    android:text=""Switch2""
    app:layout_constraintEnd_toEndOf=""parent""
    app:layout_constraintStart_toStartOf=""parent""
    app:layout_constraintTop_toBottomOf=""@+id/switch1"" />

//////////Java Code///////////

public class MainActivity extends AppCompatActivity {
Switch gSwitch,switch1, switch2;
boolean state;
int id;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    switch1 = findViewById(R.id.switch1);
    switch1 = findViewById(R.id.switch2);
    switch1.setOnCheckedChangeListener(checkedChangeListener);
    switch2.setOnCheckedChangeListener(checkedChangeListener);
}

CompoundButton.OnCheckedChangeListener checkedChangeListener = new CompoundButton.OnCheckedChangeListener() {
    @Override
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
       id = buttonView.getId();
        gSwitch = findViewById(id);// generic switch;
        state = isChecked;

        // call your method here for example:
       // BackgroundWorker backgroundWorker = new BackgroundWorker(this);
       // backgroundWorker.execute(""switch"", state, id);
    }
};
