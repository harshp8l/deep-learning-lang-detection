class Person implements Comparable<Person>
{
  ...

  @Override
  int compareTo(Person person)
  {
    // Maye not specified
    if (person == null)
      return (1);

    // Compare 'favorite'
    // Favorites first, so flag=true means smaller
    if (this.favorite && (!person.favorite))
      return (-1);
    else if ((!this.favorite) && person.favorite)
      return (1);

    // Compare 'count'
    // Having count > 0 first, so count=0 means greater
    // Assuming count is never negative
    if ((this.count == 0) && (person.count > 0))
      return (1);
    if ((this.count > 0) && (person.count == 0))
      return (-1);

    // At this point, both persons have the same 'favorite' flag
    // And both have either count=0 or count>0
    // Order by name in that case
    return (this.name.compareTo(person.name));

  } // compareTo

} // class Person
