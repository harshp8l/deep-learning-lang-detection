public String replace(char oldChar, char newChar) {
        if (oldChar != newChar) {
            int len = value.length;
            int i = -1;
            char[] val = value; /* avoid getfield opcode */

            while (++i < len) {
                if (val[i] == oldChar) { // comment 1, aims to find 
          // first index of oldChar. You can use indexOf() to achieve this.
                    break;
                }
            }
            if (i < len) {
                char buf[] = new char[len];
                for (int j = 0; j < i; j++) {
                    buf[j] = val[j]; // comment 2, copy prefix chars 
          // before the oldChar to buf. You can use subString() to achieve this.
                }
                while (i < len) {
                    char c = val[i];
                    buf[i] = (c == oldChar) ? newChar : c; // comment 3, 
        // replace oldChar with newChar, for other chars, just copy. 
        // You can use the thought above. I suggest you divide to 3 
        // methods to do "replace" thing.
                    i++;
                }
                return new String(buf, true);
            }
        }
        return this;
    }
