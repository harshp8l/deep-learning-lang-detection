private String doDecode(String message, String translationsString) {
    Map<String, String> leftTranslations = buildTranslationTable(translationsString, -1);
    Map<String, String> rightTranslations = buildTranslationTable(translationsString, 1);

    String translation = """";
    String[] messagePairs = message.split("" "");
    for (String messagePair : messagePairs) {
        String messageLeft = Character.toString(messagePair.charAt(0));
        String messageRight = Character.toString(messagePair.charAt(1));
        String translationLeft = leftTranslations.get(messageLeft);
        String translationRight = rightTranslations.get(messageRight);
        translation += translationLeft + translationRight;
    }

    return translation;
}

private Map<String,String> buildTranslationTable(String translationsString, int offset) {
    Map<String,String> translations = new Hashtable<>();

    for (int i=0; i<translationsString.length(); i++) {
        if (               i >= 0 &&            i < translationsString.length() &&
                (i + offset) >= 0 && (i + offset) < translationsString.length() ) {
            String key = Character.toString(translationsString.charAt(i));
            String value = Character.toString(translationsString.charAt(i + offset));
            translations.put(key, value);
        }
    }

    return translations;
}
